{"version":3,"sources":["utils/RouterConfig.tsx","context/ThemeContext.tsx","components/layout/Header.tsx","components/layout/Sidebar.tsx","config/environment.ts","components/layout/Footer.tsx","components/ui/DashboardCard.tsx","components/ui/TabPanel.tsx","components/ui/ConfigCard.tsx","components/ui/Toast.tsx","components/views/Dashboard.tsx","context/CalculatorContext.tsx","context/ToastContext.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RouterConfig","_ref","children","React","createElement","HashRouter","ThemeContext","createContext","undefined","ThemeProvider","darkMode","setDarkMode","useState","savedPreference","localStorage","getItem","JSON","parse","useEffect","document","documentElement","classList","add","remove","setItem","stringify","Provider","value","toggleDarkMode","Header","toggleSidebar","useTheme","context","useContext","Error","className","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","src","alt","fillRule","clipRule","Sidebar","isOpen","concat","environment","env","process","REACT_APP_ENV","apiUrl","REACT_APP_API_URL","version","REACT_APP_VERSION","basename","Footer","Date","getFullYear","href","DashboardCard","title","subtitle","trend","highlight","icon","direction","TabPanel","tabs","activeTab","onTabChange","map","tab","key","id","label","ConfigCard","initiallyExpanded","isExpanded","setIsExpanded","Toast","type","message","onClose","duration","isVisible","setIsVisible","timer","setTimeout","clearTimeout","color","border","getTypeConfig","style","bottom","ToastContainer","_ref2","toasts","onRemoveToast","zIndex","toast","Dashboard","console","log","initialState","selectedVendors","industry","complianceRequirements","pci","hipaa","nist","gdpr","iso","cmmc","ferpa","sox","riskProfile","organizationSize","deviceCount","locations","networkRequirements","cloudIntegration","legacyDevices","byodSupport","iotSupport","wirelessSupport","remoteWork","yearsToProject","costParameters","portnoxBasePricePerDevice","portnoxDiscount","fteCost","fteAllocation","maintenancePercentage","downtimeCost","riskReduction","insuranceReduction","currentView","currentPanel","calculationResults","calculatorReducer","state","action","_objectSpread","payload","filter","vendor","requirement","parameter","CalculatorContext","CalculatorProvider","dispatch","useReducer","ToastContext","ToastProvider","setToasts","addToast","useCallback","Math","random","toString","substr","prev","removeToast","App","sidebarOpen","setSidebarOpen","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.badb3a50.chunk.js","sourcesContent":["import React from 'react';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\ninterface RouterConfigProps {\n    children: React.ReactNode;\n}\n\nconst RouterConfig: React.FC<RouterConfigProps> = ({ children }) => {\n    // Check if we're in production (GitHub Pages)\n    const isProduction = process.env.NODE_ENV === 'production';\n    \n    // Get the base URL from package.json's homepage field\n    const homepage = process.env.PUBLIC_URL || '';\n    \n    // Use HashRouter in production (GitHub Pages) and BrowserRouter in development\n    if (isProduction) {\n        return <HashRouter>{children}</HashRouter>;\n    } else {\n        return <BrowserRouter basename={homepage}>{children}</BrowserRouter>;\n    }\n};\n\nexport default RouterConfig;\n","import React, { createContext, useState, useContext, useEffect } from 'react';\n\ninterface ThemeContextType {\n  darkMode: boolean;\n  toggleDarkMode: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeProvider: React.FC<{children: React.ReactNode}> = ({ children }) => {\n  // Check if user has previously set a preference\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedPreference = localStorage.getItem('darkMode');\n    return savedPreference ? JSON.parse(savedPreference) : false;\n  });\n\n  useEffect(() => {\n    // Update HTML element class for global styling\n    if (darkMode) {\n      document.documentElement.classList.add('dark-mode');\n    } else {\n      document.documentElement.classList.remove('dark-mode');\n    }\n    \n    // Save preference to localStorage\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n// Custom hook for using the theme context\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n","import React from 'react';\nimport { useTheme } from '../../context/ThemeContext';\n\ninterface HeaderProps {\n  toggleSidebar: () => void;\n}\n\nconst Header: React.FC<HeaderProps> = ({ toggleSidebar }) => {\n  const { darkMode, toggleDarkMode } = useTheme();\n\n  return (\n    <header className=\"bg-white dark:bg-gray-800 shadow-sm z-10\">\n      <div className=\"container mx-auto px-4 py-3\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center\">\n            <button \n              className=\"block lg:hidden mr-4 text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\n              onClick={toggleSidebar}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            </button>\n            <div className=\"flex items-center\">\n              <img src=\"/img/vendors/portnox-logo.png\" alt=\"Portnox Logo\" className=\"h-8 mr-3\" />\n              <div>\n                <h1 className=\"text-lg font-bold text-gray-800 dark:text-white\">Zero Trust Total Cost Analyzer</h1>\n                <p className=\"text-xs text-gray-600 dark:text-gray-400\">Multi-Vendor NAC Solution Comparison Platform</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"stakeholder-selector hidden md:block\">\n              <div className=\"stakeholder-tabs flex border border-gray-200 dark:border-gray-700 rounded-md overflow-hidden\">\n                <button className=\"stakeholder-tab active px-3 py-1.5 text-sm font-medium bg-portnox-primary text-white\">\n                  <i className=\"fas fa-chart-pie mr-1\"></i> Executive\n                </button>\n                <button className=\"stakeholder-tab px-3 py-1.5 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\">\n                  <i className=\"fas fa-coins mr-1\"></i> Financial\n                </button>\n                <button className=\"stakeholder-tab px-3 py-1.5 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\">\n                  <i className=\"fas fa-shield-alt mr-1\"></i> Security\n                </button>\n                <button className=\"stakeholder-tab px-3 py-1.5 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\">\n                  <i className=\"fas fa-cogs mr-1\"></i> Technical\n                </button>\n              </div>\n            </div>\n            <button className=\"btn btn-primary hidden md:block\">\n              <i className=\"fas fa-calculator mr-1\"></i> Calculate\n            </button>\n            <button className=\"btn btn-outline hidden md:block\">\n              <i className=\"fas fa-file-pdf mr-1\"></i> Export\n            </button>\n            <button className=\"p-2 rounded-full text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\" onClick={toggleDarkMode}>\n              {darkMode ? (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\n                </svg>\n              ) : (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\" clipRule=\"evenodd\" />\n                </svg>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\ninterface SidebarProps {\n  isOpen: boolean;\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ isOpen }) => {\n  return (\n    <aside className={`sidebar bg-white dark:bg-gray-800 shadow-md transition-all duration-300 ${isOpen ? 'translate-x-0' : '-translate-x-full lg:translate-x-0'} fixed lg:relative w-64 h-screen z-20 overflow-y-auto`}>\n      <div className=\"sidebar-content p-4\">\n        <h2 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-white\">Configuration</h2>\n        \n        {/* Vendor Selection */}\n        <div className=\"mb-4\">\n          <div className=\"flex justify-between items-center cursor-pointer bg-gray-50 dark:bg-gray-700 p-3 rounded-md\">\n            <h3 className=\"text-sm font-medium flex items-center text-gray-700 dark:text-gray-300\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2\" />\n              </svg>\n              Select NAC Vendors\n            </h3>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </div>\n          <div className=\"mt-2 px-2\">\n            <p className=\"text-xs text-gray-600 dark:text-gray-400 mb-2\">Choose multiple vendors to compare with Portnox Cloud</p>\n            <div className=\"vendor-grid grid grid-cols-2 gap-2\">\n              {/* Vendor cards will be added dynamically */}\n            </div>\n          </div>\n        </div>\n        \n        {/* Industry & Compliance */}\n        <div className=\"mb-4\">\n          <div className=\"flex justify-between items-center cursor-pointer bg-gray-50 dark:bg-gray-700 p-3 rounded-md\">\n            <h3 className=\"text-sm font-medium flex items-center text-gray-700 dark:text-gray-300\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n              </svg>\n              Industry & Compliance\n            </h3>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </div>\n        </div>\n        \n        {/* Organization */}\n        <div className=\"mb-4\">\n          <div className=\"flex justify-between items-center cursor-pointer bg-gray-50 dark:bg-gray-700 p-3 rounded-md\">\n            <h3 className=\"text-sm font-medium flex items-center text-gray-700 dark:text-gray-300\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n              </svg>\n              Organization\n            </h3>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </div>\n        </div>\n        \n        {/* Cost Parameters */}\n        <div className=\"mb-4\">\n          <div className=\"flex justify-between items-center cursor-pointer bg-gray-50 dark:bg-gray-700 p-3 rounded-md\">\n            <h3 className=\"text-sm font-medium flex items-center text-gray-700 dark:text-gray-300\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              Cost Parameters\n            </h3>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"sidebar-footer p-4 border-t border-gray-200 dark:border-gray-700\">\n        <button className=\"btn btn-primary w-full\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n          </svg>\n          Calculate TCO & ROI\n        </button>\n      </div>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","// Environment configuration\ninterface EnvironmentConfig {\n  env: string;\n  apiUrl: string;\n  version: string;\n  basename: string;\n}\n\nconst environment: EnvironmentConfig = {\n  env: process.env.REACT_APP_ENV || 'development',\n  apiUrl: process.env.REACT_APP_API_URL || '',\n  version: process.env.REACT_APP_VERSION || '0.1.0',\n  basename: process.env.NODE_ENV === 'production' ? '/UaXtXo' : '/',\n};\n\nexport default environment;\n","import React from 'react';\nimport environment from '../../config/environment';\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 py-4 mt-auto\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex flex-col md:flex-row justify-between items-center\">\n          <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-2 md:mb-0\">\n            &copy; {new Date().getFullYear()} Portnox. All rights reserved.\n            <span className=\"ml-2 text-xs text-gray-500 dark:text-gray-500\">v{environment.version}</span>\n          </div>\n          <div className=\"flex space-x-4\">\n            <a href=\"#\" className=\"text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-white\">Privacy Policy</a>\n            <a href=\"#\" className=\"text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-white\">Terms of Service</a>\n            <a href=\"#\" className=\"text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-white\">Contact Us</a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\ninterface DashboardCardProps {\n  title: string;\n  value: string | React.ReactNode;\n  subtitle?: string;\n  trend?: {\n    value: string;\n    direction: 'up' | 'down' | 'neutral';\n  };\n  className?: string;\n  highlight?: boolean;\n  icon?: React.ReactNode;\n}\n\nconst DashboardCard: React.FC<DashboardCardProps> = ({\n  title,\n  value,\n  subtitle,\n  trend,\n  className = '',\n  highlight = false,\n  icon\n}) => {\n  return (\n    <div className={`dashboard-card ${highlight ? 'border-l-4 border-portnox-primary' : ''} ${className}`}>\n      <div className=\"flex items-start justify-between\">\n        <div>\n          <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</h3>\n          <div className={`mt-1 text-2xl font-bold ${highlight ? 'text-portnox-primary' : 'text-gray-900 dark:text-white'}`}>\n            {value}\n          </div>\n          {subtitle && (\n            <div className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n              {subtitle}\n            </div>\n          )}\n          {trend && (\n            <div className={`mt-2 text-xs font-medium flex items-center ${\n              trend.direction === 'up' ? 'text-green-600 dark:text-green-400' : \n              trend.direction === 'down' ? 'text-red-600 dark:text-red-400' : \n              'text-gray-500 dark:text-gray-400'\n            }`}>\n              {trend.direction === 'up' && (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M5.293 9.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 7.414V15a1 1 0 11-2 0V7.414L6.707 9.707a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                </svg>\n              )}\n              {trend.direction === 'down' && (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M14.707 10.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 12.586V5a1 1 0 012 0v7.586l2.293-2.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                </svg>\n              )}\n              {trend.direction === 'neutral' && (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M5 10a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\n                </svg>\n              )}\n              {trend.value}\n            </div>\n          )}\n        </div>\n        {icon && (\n          <div className=\"text-gray-400 dark:text-gray-500\">\n            {icon}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardCard;\n","import React from 'react';\n\ninterface Tab {\n  id: string;\n  label: string;\n  icon?: React.ReactNode;\n}\n\ninterface TabPanelProps {\n  tabs: Tab[];\n  activeTab: string;\n  onTabChange: (tabId: string) => void;\n  children: React.ReactNode;\n}\n\nconst TabPanel: React.FC<TabPanelProps> = ({\n  tabs,\n  activeTab,\n  onTabChange,\n  children\n}) => {\n  return (\n    <div className=\"tab-panel\">\n      <div className=\"border-b border-gray-200 dark:border-gray-700\">\n        <nav className=\"flex overflow-x-auto\">\n          {tabs.map(tab => (\n            <button\n              key={tab.id}\n              className={`px-4 py-2 text-sm font-medium border-b-2 transition-colors duration-200 ${\n                activeTab === tab.id\n                  ? 'border-portnox-primary text-portnox-primary dark:border-portnox-primary dark:text-portnox-primary'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300'\n              }`}\n              onClick={() => onTabChange(tab.id)}\n            >\n              {tab.icon && <span className=\"mr-2\">{tab.icon}</span>}\n              {tab.label}\n            </button>\n          ))}\n        </nav>\n      </div>\n      <div className=\"py-4\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default TabPanel;\n","import React, { useState } from 'react';\n\ninterface ConfigCardProps {\n  title: string;\n  icon: React.ReactNode;\n  children: React.ReactNode;\n  initiallyExpanded?: boolean;\n}\n\nconst ConfigCard: React.FC<ConfigCardProps> = ({\n  title,\n  icon,\n  children,\n  initiallyExpanded = true\n}) => {\n  const [isExpanded, setIsExpanded] = useState(initiallyExpanded);\n\n  return (\n    <div className=\"config-card mb-4 border border-gray-200 dark:border-gray-700 rounded-md overflow-hidden\">\n      <div\n        className=\"flex justify-between items-center cursor-pointer bg-gray-50 dark:bg-gray-700 p-3\"\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <h3 className=\"text-sm font-medium flex items-center text-gray-700 dark:text-gray-300\">\n          {icon}\n          <span className=\"ml-2\">{title}</span>\n        </h3>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={`h-4 w-4 transition-transform duration-200 ${isExpanded ? 'transform rotate-180' : ''}`}\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </div>\n      \n      <div\n        className={`overflow-hidden transition-all duration-300 ${\n          isExpanded ? 'max-h-screen opacity-100' : 'max-h-0 opacity-0'\n        }`}\n      >\n        <div className=\"p-3 bg-white dark:bg-gray-800\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfigCard;\n","import React, { useEffect, useState } from 'react';\n\nexport type ToastType = 'success' | 'error' | 'warning' | 'info';\n\ninterface ToastProps {\n  type: ToastType;\n  message: string;\n  onClose: () => void;\n  duration?: number;\n}\n\nconst Toast: React.FC<ToastProps> = ({\n  type,\n  message,\n  onClose,\n  duration = 4000\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    setIsVisible(true);\n    \n    const timer = setTimeout(() => {\n      setIsVisible(false);\n      setTimeout(onClose, 300); // Allow for fade-out animation\n    }, duration);\n    \n    return () => clearTimeout(timer);\n  }, [duration, onClose]);\n\n  // Determine icon and colors based on type\n  const getTypeConfig = () => {\n    switch (type) {\n      case 'success':\n        return {\n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n          ),\n          color: 'text-green-500 dark:text-green-400',\n          border: 'border-l-4 border-green-500 dark:border-green-400'\n        };\n      case 'error':\n        return {\n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          ),\n          color: 'text-red-500 dark:text-red-400',\n          border: 'border-l-4 border-red-500 dark:border-red-400'\n        };\n      case 'warning':\n        return {\n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n            </svg>\n          ),\n          color: 'text-yellow-500 dark:text-yellow-400',\n          border: 'border-l-4 border-yellow-500 dark:border-yellow-400'\n        };\n      case 'info':\n      default:\n        return {\n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          ),\n          color: 'text-blue-500 dark:text-blue-400',\n          border: 'border-l-4 border-blue-500 dark:border-blue-400'\n        };\n    }\n  };\n\n  const { icon, color, border } = getTypeConfig();\n\n  return (\n    <div\n      className={`fixed right-5 transition-all duration-300 ease-in-out transform ${\n        isVisible ? 'translate-x-0 opacity-100' : 'translate-x-full opacity-0'\n      } ${border} bg-white dark:bg-gray-800 rounded-r shadow-lg p-4 mb-4 flex items-center max-w-sm`}\n      style={{ bottom: '20px' }}\n    >\n      <div className={`mr-3 ${color}`}>\n        {icon}\n      </div>\n      <div className=\"flex-grow text-gray-800 dark:text-gray-200\">\n        {message}\n      </div>\n      <button\n        onClick={() => {\n          setIsVisible(false);\n          setTimeout(onClose, 300);\n        }}\n        className=\"ml-3 text-gray-400 hover:text-gray-500 dark:text-gray-500 dark:hover:text-gray-400\"\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\n// Toast container component to manage multiple toasts\ninterface ToastItem {\n  id: string;\n  type: ToastType;\n  message: string;\n}\n\ninterface ToastContainerProps {\n  toasts: ToastItem[];\n  onRemoveToast: (id: string) => void;\n}\n\nexport const ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemoveToast }) => {\n  return (\n    <div className=\"toast-container\" style={{ zIndex: 9999 }}>\n      {toasts.map(toast => (\n        <Toast\n          key={toast.id}\n          type={toast.type}\n          message={toast.message}\n          onClose={() => onRemoveToast(toast.id)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Toast;\n","import React from 'react';\nimport { DashboardCard, TabPanel, ConfigCard, LoadingOverlay } from '../ui';\n\nconst Dashboard = () => {\n  return (\n    <div className=\"dashboard p-4\">\n      <h1 className=\"text-2xl font-bold mb-6\">Portnox TCO Analysis Dashboard</h1>\n      \n      {/* TCO Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n        <DashboardCard \n          title=\"Total Cost Savings\" \n          value=\"$245,000\" \n          subtitle=\"Over 3 Years\"\n          trend={{ value: \"15% improvement\", direction: \"up\" }}\n          highlight={true}\n        />\n        \n        <DashboardCard \n          title=\"Implementation Time\" \n          value=\"14 days\" \n          subtitle=\"vs. 45+ days with competitors\"\n          trend={{ value: \"68% faster\", direction: \"up\" }}\n        />\n        \n        <DashboardCard \n          title=\"Security Improvement\" \n          value=\"73%\" \n          subtitle=\"Risk reduction vs. baseline\"\n          trend={{ value: \"22% better than competitors\", direction: \"up\" }}\n        />\n      </div>\n      \n      {/* Configuration Section with TabPanel */}\n      <TabPanel\n        tabs={[\n          { id: 'financial', label: 'Financial Impact' },\n          { id: 'security', label: 'Security Benefits' },\n          { id: 'operational', label: 'Operational Efficiency' }\n        ]}\n        activeTab=\"financial\"\n        onTabChange={(tab) => console.log(`Switched to ${tab} tab`)}\n      >\n        <div className=\"p-4\">\n          <ConfigCard\n            title=\"Financial Impact Analysis\"\n            initiallyExpanded={true}\n            icon={\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n              </svg>\n            }\n          >\n            <div className=\"space-y-4\">\n              <p className=\"text-gray-700 dark:text-gray-300\">\n                The Portnox solution offers significant financial benefits compared to traditional NAC solutions:\n              </p>\n              <ul className=\"list-disc pl-5 space-y-2 text-gray-700 dark:text-gray-300\">\n                <li>Lower total cost of ownership by eliminating hardware requirements</li>\n                <li>Subscription-based pricing provides predictable budgeting</li>\n                <li>Reduced maintenance and operational costs</li>\n                <li>Faster time-to-value with rapid deployment</li>\n              </ul>\n            </div>\n          </ConfigCard>\n        </div>\n      </TabPanel>\n      \n      {/* Loading Overlay Example (Initially hidden) */}\n      {false && <LoadingOverlay isLoading={true} message=\"Calculating TCO savings...\" />}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","// @ts-nocheck\nimport React, { createContext, useReducer, useContext } from 'react';\n\n// Define initial state type\nexport interface CalculatorState {\n  selectedVendors: string[];\n  industry: string;\n  complianceRequirements: {\n    [key: string]: boolean;\n  };\n  riskProfile: string;\n  organizationSize: string;\n  deviceCount: number;\n  locations: number;\n  networkRequirements: {\n    [key: string]: boolean;\n  };\n  yearsToProject: number;\n  costParameters: {\n    [key: string]: number;\n  };\n  calculationResults: any | null;\n  currentView: string;\n  currentPanel: string;\n}\n\n// Define initial state\nconst initialState: CalculatorState = {\n  // Selected vendors (Portnox is always selected by default)\n  selectedVendors: ['portnox'],\n  \n  // Industry & Compliance\n  industry: '',\n  complianceRequirements: {\n    pci: false,\n    hipaa: false,\n    nist: false,\n    gdpr: false,\n    iso: false,\n    cmmc: false,\n    ferpa: false,\n    sox: false\n  },\n  riskProfile: 'standard',\n  \n  // Organization\n  organizationSize: 'small',\n  deviceCount: 500,\n  locations: 2,\n  networkRequirements: {\n    cloudIntegration: false,\n    legacyDevices: false,\n    byodSupport: true,\n    iotSupport: false,\n    wirelessSupport: true,\n    remoteWork: true\n  },\n  yearsToProject: 3,\n  \n  // Cost Parameters\n  costParameters: {\n    portnoxBasePricePerDevice: 3.00,\n    portnoxDiscount: 15,\n    fteCost: 100000,\n    fteAllocation: 25,\n    maintenancePercentage: 18,\n    downtimeCost: 5000,\n    riskReduction: 35,\n    insuranceReduction: 10,\n  },\n  \n  // UI State\n  currentView: 'executive',\n  currentPanel: 'executive-summary',\n  \n  // Calculation Results (populated after calculation)\n  calculationResults: null\n};\n\n// Define action types\ntype CalculatorAction = \n  | { type: 'SELECT_VENDOR', payload: string }\n  | { type: 'UNSELECT_VENDOR', payload: string }\n  | { type: 'SET_INDUSTRY', payload: string }\n  | { type: 'TOGGLE_COMPLIANCE', payload: { requirement: string, value: boolean } }\n  | { type: 'SET_RISK_PROFILE', payload: string }\n  | { type: 'SET_ORGANIZATION_SIZE', payload: string }\n  | { type: 'SET_DEVICE_COUNT', payload: number }\n  | { type: 'SET_LOCATIONS', payload: number }\n  | { type: 'TOGGLE_NETWORK_REQUIREMENT', payload: { requirement: string, value: boolean } }\n  | { type: 'SET_YEARS_TO_PROJECT', payload: number }\n  | { type: 'SET_COST_PARAMETER', payload: { parameter: string, value: number } }\n  | { type: 'SET_VIEW', payload: string }\n  | { type: 'SET_PANEL', payload: string }\n  | { type: 'CALCULATE_RESULTS' }\n  | { type: 'SET_CALCULATION_RESULTS', payload: any }\n  | { type: 'RESET_CALCULATOR' };\n\n// Create reducer function\nfunction calculatorReducer(state: CalculatorState, action: CalculatorAction): CalculatorState {\n  switch (action.type) {\n    case 'SELECT_VENDOR':\n      return {\n        ...state,\n        selectedVendors: [...state.selectedVendors, action.payload]\n      };\n    case 'UNSELECT_VENDOR':\n      // Ensure Portnox is always selected\n      if (action.payload === 'portnox') {\n        return state;\n      }\n      return {\n        ...state,\n        selectedVendors: state.selectedVendors.filter(vendor => vendor !== action.payload)\n      };\n    case 'SET_INDUSTRY':\n      return {\n        ...state,\n        industry: action.payload\n      };\n    case 'TOGGLE_COMPLIANCE':\n      return {\n        ...state,\n        complianceRequirements: {\n          ...state.complianceRequirements,\n          [action.payload.requirement]: action.payload.value\n        }\n      };\n    case 'SET_RISK_PROFILE':\n      return {\n        ...state,\n        riskProfile: action.payload\n      };\n    case 'SET_ORGANIZATION_SIZE':\n      // Also adjust device count based on organization size\n      let deviceCount = state.deviceCount;\n      switch (action.payload) {\n        case 'very-small': deviceCount = 250; break;\n        case 'small': deviceCount = 500; break;\n        case 'medium': deviceCount = 3000; break;\n        case 'large': deviceCount = 7500; break;\n        case 'enterprise': deviceCount = 15000; break;\n      }\n      \n      return {\n        ...state,\n        organizationSize: action.payload,\n        deviceCount\n      };\n    case 'SET_DEVICE_COUNT':\n      return {\n        ...state,\n        deviceCount: action.payload\n      };\n    case 'SET_LOCATIONS':\n      return {\n        ...state,\n        locations: action.payload\n      };\n    case 'TOGGLE_NETWORK_REQUIREMENT':\n      return {\n        ...state,\n        networkRequirements: {\n          ...state.networkRequirements,\n          [action.payload.requirement]: action.payload.value\n        }\n      };\n    case 'SET_YEARS_TO_PROJECT':\n      return {\n        ...state,\n        yearsToProject: action.payload\n      };\n    case 'SET_COST_PARAMETER':\n      return {\n        ...state,\n        costParameters: {\n          ...state.costParameters,\n          [action.payload.parameter]: action.payload.value\n        }\n      };\n    case 'SET_VIEW':\n      return {\n        ...state,\n        currentView: action.payload,\n        currentPanel: action.payload + '-summary' // Reset to default panel for the view\n      };\n    case 'SET_PANEL':\n      return {\n        ...state,\n        currentPanel: action.payload\n      };\n    case 'CALCULATE_RESULTS':\n      // We'll implement the actual calculation logic later\n      // For now, just return the state as is\n      return state;\n    case 'SET_CALCULATION_RESULTS':\n      return {\n        ...state,\n        calculationResults: action.payload\n      };\n    case 'RESET_CALCULATOR':\n      return {\n        ...initialState,\n        currentView: state.currentView, // Preserve current view\n        currentPanel: state.currentPanel // Preserve current panel\n      };\n    default:\n      return state;\n  }\n}\n\n// Create context\ninterface CalculatorContextType {\n  state: CalculatorState;\n  dispatch: React.Dispatch<CalculatorAction>;\n}\n\nconst CalculatorContext = createContext<CalculatorContextType | undefined>(undefined);\n\n// Create provider component\nexport const CalculatorProvider: React.FC<{children: React.ReactNode}> = ({ children }) => {\n  const [state, dispatch] = useReducer(calculatorReducer, initialState);\n  \n  return (\n    <CalculatorContext.Provider value={{ state, dispatch }}>\n      {children}\n    </CalculatorContext.Provider>\n  );\n};\n\n// Create custom hook for using the context\nexport const useCalculator = () => {\n  const context = useContext(CalculatorContext);\n  if (context === undefined) {\n    throw new Error('useCalculator must be used within a CalculatorProvider');\n  }\n  return context;\n};\n","import React, { createContext, useState, useContext, useCallback } from 'react';\nimport { ToastContainer, ToastType } from '../components/ui/Toast';\n\n// Unique ID generator for toasts\nconst generateId = () => `toast-${Math.random().toString(36).substr(2, 9)}`;\n\ninterface ToastContextType {\n  addToast: (message: string, type: ToastType) => void;\n  removeToast: (id: string) => void;\n}\n\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\n\nexport const ToastProvider: React.FC<{children: React.ReactNode}> = ({ children }) => {\n  const [toasts, setToasts] = useState<Array<{id: string; message: string; type: ToastType}>>([]);\n\n  const addToast = useCallback((message: string, type: ToastType) => {\n    const id = generateId();\n    setToasts(prev => [...prev, { id, message, type }]);\n  }, []);\n\n  const removeToast = useCallback((id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer toasts={toasts} onRemoveToast={removeToast} />\n    </ToastContext.Provider>\n  );\n};\n\nexport const useToast = () => {\n  const context = useContext(ToastContext);\n  if (context === undefined) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  return context;\n};\n","import React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport RouterConfig from './utils/RouterConfig';\nimport Header from './components/layout/Header';\nimport Sidebar from './components/layout/Sidebar';\nimport Footer from './components/layout/Footer';\nimport Dashboard from './components/views/Dashboard';\nimport { CalculatorProvider } from './context/CalculatorContext';\nimport { ThemeProvider } from './context/ThemeContext';\nimport { ToastProvider } from './context/ToastContext';\nimport environment from './config/environment';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  \n  const toggleSidebar = () => {\n    setSidebarOpen(!sidebarOpen);\n  };\n  \n  return (\n    <ThemeProvider>\n      <CalculatorProvider>\n        <ToastProvider>\n          <RouterConfig>\n            <div className=\"app-container\">\n              <Header toggleSidebar={toggleSidebar} />\n              <div className=\"main-content\">\n                <Sidebar isOpen={sidebarOpen} />\n                <div className=\"content-area\">\n                  <Routes>\n                    <Route path=\"/\" element={<Dashboard />} />\n                    {/* More routes will be added later */}\n                  </Routes>\n                </div>\n              </div>\n              <Footer />\n            </div>\n          </RouterConfig>\n        </ToastProvider>\n      </CalculatorProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './financialReport.css';\nimport './reportStyles.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}