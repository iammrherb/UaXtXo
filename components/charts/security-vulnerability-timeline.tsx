"use client"

import { useMemo } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert"
import {
  LineChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend,
  ResponsiveContainer,
  PieChart,
  Pie,
  Cell,
} from "recharts"
import { Shield, AlertTriangle, CheckCircle2, TrendingUp } from "lucide-react"
import type { CalculationResult } from "@/lib/enhanced-tco-calculator"

interface SecurityVulnerabilityTimelineProps {
  results: CalculationResult[]
}

export default function SecurityVulnerabilityTimeline({ results }: SecurityVulnerabilityTimelineProps) {
  const securityData = useMemo(() => {
    return results.map((result) => ({
      vendor: result.vendorName,
      cveCount: result.vendorData.security.cveCount,
      securityScore: result.risk.securityScore,
      zeroTrustMaturity: result.vendorData.security.zeroTrustMaturity,
      complianceScore: result.vendorData.compliance.score,
      isPortnox: result.vendorId === "portnox",
      riskLevel:
        result.vendorData.security.cveCount === 0
          ? "Zero Risk"
          : result.vendorData.security.cveCount < 10
            ? "Low Risk"
            : result.vendorData.security.cveCount < 30
              ? "Medium Risk"
              : "High Risk",
    }))
  }, [results])

  // Historical CVE data (simulated for demonstration)
  const historicalCveData = useMemo(() => {
    const years = [2020, 2021, 2022, 2023, 2024]
    return years.map((year) => ({
      year,
      Portnox: 0, // Always zero
      "Cisco ISE": Math.floor(Math.random() * 8) + 12, // 12-20 per year
      "Aruba ClearPass": Math.floor(Math.random() * 5) + 6, // 6-11 per year
      Forescout: Math.floor(Math.random() * 6) + 8, // 8-14 per year
      "Market Average": Math.floor(Math.random() * 4) + 10, // 10-14 per year
    }))
  }, [])

  const riskDistribution = useMemo(() => {
    const distribution = securityData.reduce(
      (acc, vendor) => {
        acc[vendor.riskLevel] = (acc[vendor.riskLevel] || 0) + 1
        return acc
      },
      {} as Record<string, number>,
    )

    return Object.entries(distribution).map(([level, count]) => ({
      level,
      count,
      color:
        level === "Zero Risk"
          ? "#10b981"
          : level === "Low Risk"
            ? "#3b82f6"
            : level === "Medium Risk"
              ? "#f59e0b"
              : "#ef4444",
    }))
  }, [securityData])

  const portnoxData = securityData.find((d) => d.isPortnox)
  const highRiskVendors = securityData.filter((d) => d.cveCount > 30)
  const zeroRiskVendors = securityData.filter((d) => d.cveCount === 0)

  return (
    <div className="space-y-6">
      {/* Security Overview Cards */}
      <div className="grid gap-4 md:grid-cols-4">
        <Card className="border-green-200 bg-green-50 dark:bg-green-950/20">
          <CardHeader className="pb-3">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <CheckCircle2 className="h-4 w-4 text-green-600" />
              Zero CVE Vendors
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-3xl font-bold text-green-700">{zeroRiskVendors.length}</div>
            <p className="text-xs text-green-600 mt-1">Perfect security record</p>
            <Badge variant="outline" className="mt-2 text-xs border-green-300 text-green-700">
              Portnox Only
            </Badge>
          </CardContent>
        </Card>

        <Card className="border-red-200 bg-red-50 dark:bg-red-950/20">
          <CardHeader className="pb-3">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <AlertTriangle className="h-4 w-4 text-red-600" />
              High Risk Vendors
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-3xl font-bold text-red-700">{highRiskVendors.length}</div>
            <p className="text-xs text-red-600 mt-1">30+ CVEs each</p>
            <div className="text-xs text-muted-foreground mt-1">{highRiskVendors.map((v) => v.vendor).join(", ")}</div>
          </CardContent>
        </Card>

        <Card className="border-blue-200 bg-blue-50 dark:bg-blue-950/20">
          <CardHeader className="pb-3">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <Shield className="h-4 w-4 text-blue-600" />
              Avg Security Score
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-3xl font-bold text-blue-700">
              {Math.round(securityData.reduce((sum, d) => sum + d.securityScore, 0) / securityData.length)}%
            </div>
            <p className="text-xs text-blue-600 mt-1">market average</p>
            <div className="text-xs text-muted-foreground mt-1">Portnox: {portnoxData?.securityScore}%</div>
          </CardContent>
        </Card>

        <Card className="border-purple-200 bg-purple-50 dark:bg-purple-950/20">
          <CardHeader className="pb-3">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <TrendingUp className="h-4 w-4 text-purple-600" />
              Risk Reduction
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-3xl font-bold text-purple-700">92%</div>
            <p className="text-xs text-purple-600 mt-1">with Portnox vs avg</p>
            <div className="text-xs text-muted-foreground mt-1">Breach probability reduction</div>
          </CardContent>
        </Card>
      </div>

      {/* Historical CVE Timeline */}
      <Card>
        <CardHeader>
          <CardTitle>Security Vulnerability Timeline (2020-2024)</CardTitle>
          <CardDescription>Historical CVE count showing security track record over time</CardDescription>
        </CardHeader>
        <CardContent>
          <ResponsiveContainer width="100%" height={350}>
            <LineChart data={historicalCveData}>
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="year" />
              <YAxis />
              <Tooltip />
              <Legend />
              <Line
                type="monotone"
                dataKey="Portnox"
                stroke="#10b981"
                strokeWidth={4}
                dot={{ fill: "#10b981", strokeWidth: 2, r: 6 }}
              />
              <Line type="monotone" dataKey="Cisco ISE" stroke="#ef4444" strokeWidth={2} strokeDasharray="5 5" />
              <Line type="monotone" dataKey="Aruba ClearPass" stroke="#f59e0b" strokeWidth={2} strokeDasharray="5 5" />
              <Line type="monotone" dataKey="Forescout" stroke="#8b5cf6" strokeWidth={2} strokeDasharray="5 5" />
              <Line type="monotone" dataKey="Market Average" stroke="#6b7280" strokeWidth={2} strokeDasharray="10 5" />
            </LineChart>
          </ResponsiveContainer>
        </CardContent>
      </Card>

      {/* Security Risk Distribution */}
      <div className="grid gap-6 lg:grid-cols-2">
        <Card>
          <CardHeader>
            <CardTitle>Security Risk Distribution</CardTitle>
            <CardDescription>Vendor distribution by risk level</CardDescription>
          </CardHeader>
          <CardContent>
            <ResponsiveContainer width="100%" height={300}>
              <PieChart>
                <Pie
                  data={riskDistribution}
                  cx="50%"
                  cy="50%"
                  labelLine={false}
                  label={({ level, count }) => `${level}: ${count}`}
                  outerRadius={80}
                  fill="#8884d8"
                  dataKey="count"
                >
                  {riskDistribution.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={entry.color} />
                  ))}
                </Pie>
                <Tooltip />
              </PieChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle>Detailed Security Metrics</CardTitle>
            <CardDescription>Comprehensive security assessment</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {securityData
                .sort((a, b) => b.securityScore - a.securityScore)
                .map((vendor) => (
                  <div key={vendor.vendor} className="space-y-2">
                    <div className="flex items-center justify-between">
                      <div className="flex items-center gap-2">
                        <span className="font-medium text-sm">{vendor.vendor}</span>
                        {vendor.isPortnox && (
                          <Badge variant="outline" className="text-xs border-green-300 text-green-700">
                            Zero CVEs
                          </Badge>
                        )}
                        {vendor.cveCount > 50 && (
                          <Badge variant="destructive" className="text-xs">
                            Critical Risk
                          </Badge>
                        )}
                      </div>
                      <div className="text-right text-sm">
                        <div className="font-medium">{vendor.securityScore}%</div>
                        <div className="text-muted-foreground">{vendor.cveCount} CVEs</div>
                      </div>
                    </div>
                    <div className="grid grid-cols-3 gap-2">
                      <div>
                        <div className="text-xs text-muted-foreground mb-1">Security</div>
                        <div className="h-2 bg-gray-200 rounded-full overflow-hidden">
                          <div
                            className={`h-full ${vendor.isPortnox ? "bg-green-500" : "bg-blue-500"}`}
                            style={{ width: `${vendor.securityScore}%` }}
                          />
                        </div>
                      </div>
                      <div>
                        <div className="text-xs text-muted-foreground mb-1">Zero Trust</div>
                        <div className="h-2 bg-gray-200 rounded-full overflow-hidden">
                          <div
                            className={`h-full ${vendor.isPortnox ? "bg-green-500" : "bg-purple-500"}`}
                            style={{ width: `${vendor.zeroTrustMaturity}%` }}
                          />
                        </div>
                      </div>
                      <div>
                        <div className="text-xs text-muted-foreground mb-1">Compliance</div>
                        <div className="h-2 bg-gray-200 rounded-full overflow-hidden">
                          <div
                            className={`h-full ${vendor.isPortnox ? "bg-green-500" : "bg-orange-500"}`}
                            style={{ width: `${vendor.complianceScore}%` }}
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Security Alerts */}
      <div className="grid gap-4 lg:grid-cols-2">
        <Alert className="border-green-200 bg-green-50 dark:bg-green-950/20">
          <CheckCircle2 className="h-4 w-4" />
          <AlertTitle className="text-green-900 dark:text-green-100">Portnox Security Excellence</AlertTitle>
          <AlertDescription className="text-green-800 dark:text-green-200">
            <strong>Zero CVEs since inception.</strong> Portnox CLEAR maintains a perfect security record with no known
            vulnerabilities, providing unmatched protection against cyber threats. Built with security-first
            architecture and continuous monitoring.
          </AlertDescription>
        </Alert>

        <Alert className="border-red-200 bg-red-50 dark:bg-red-950/20">
          <AlertTriangle className="h-4 w-4" />
          <AlertTitle className="text-red-900 dark:text-red-100">Competitor Security Risks</AlertTitle>
          <AlertDescription className="text-red-800 dark:text-red-200">
            <strong>High vulnerability exposure.</strong> Traditional NAC vendors average 15+ CVEs annually, with some
            experiencing active exploitation. Legacy architectures create ongoing security risks that require constant
            patching and monitoring.
          </AlertDescription>
        </Alert>
      </div>
    </div>
  )
}
