class HighchartsManager{constructor(config={}){this.config={colors:ChartConfig.colors,...config};this.charts={};this.initHighchartsGlobalOptions()}initHighchartsGlobalOptions(){Highcharts.setOptions({colors:this.config.colors.chart,chart:{style:{fontFamily:ChartConfig.defaults.fontFamily,fontSize:ChartConfig.defaults.fontSize+"px"},animation:{duration:1e3},backgroundColor:null,borderRadius:8,spacing:[20,20,20,20]},title:{style:{fontFamily:ChartConfig.defaults.fontFamily,fontSize:"16px",fontWeight:"600"}},subtitle:{style:{fontFamily:ChartConfig.defaults.fontFamily,fontSize:"13px"}},xAxis:{labels:{style:{fontFamily:ChartConfig.defaults.fontFamily,fontSize:"12px"}}},yAxis:{labels:{style:{fontFamily:ChartConfig.defaults.fontFamily,fontSize:"12px"}},title:{style:{fontFamily:ChartConfig.defaults.fontFamily,fontSize:"13px",fontWeight:"600"}}},legend:{itemStyle:{fontFamily:ChartConfig.defaults.fontFamily,fontSize:"12px"},itemHoverStyle:{color:"#555"}},credits:{enabled:false}})}createRiskComparisonChart(data,elementId,chartId){const vendors=Object.keys(data.security).filter(v=>v!=="no-nac");const series=vendors.map(vendorId=>{const security=data.security[vendorId];const vendor=VENDORS[vendorId];return{name:vendor.name,data:[security.securityScores.zeroTrust,security.securityScores.deviceAuth,security.securityScores.riskAssessment,100-security.securityScores.remediationSpeed/2,security.compliance.coverage],pointPlacement:"on",color:ChartConfig.getVendorColor(vendorId)}});const options={chart:{type:"radar",height:500},title:{text:"Security Capability Comparison",align:"center"},pane:{size:"80%"},xAxis:{categories:["Zero Trust Architecture","Device Authentication","Risk Assessment","Remediation Speed","Compliance Coverage"],tickmarkPlacement:"on",lineWidth:0},yAxis:{gridLineInterpolation:"polygon",lineWidth:0,min:0,max:100,labels:{format:"{value}%"}},tooltip:{shared:true,pointFormat:'<span style="color:{series.color}">{series.name}: <b>{point.y:,.0f}%</b><br/>'},series:series,responsive:{rules:[{condition:{maxWidth:500},chartOptions:{legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},pane:{size:"70%"}}}]}};const element=document.getElementById(elementId);if(element){if(this.charts[chartId]&&this.charts[chartId].destroy){this.charts[chartId].destroy()}this.charts[chartId]=Highcharts.chart(element,options)}return this.charts[chartId]}createBreachImpactChart(data,elementId,chartId){const industryBreachCost=data.calculator?data.calculator.getIndustryBreachCost():45e5;const breachProbability=data.calculator?data.calculator.getBreachProbability():.15;const withoutNacCost=industryBreachCost*breachProbability;const vendors=Object.keys(data.security).filter(v=>v!=="no-nac");const vendorBreachCosts={};vendors.forEach(vendorId=>{const security=data.security[vendorId];const riskReduction=security.improvements.overall/100;vendorBreachCosts[vendorId]=withoutNacCost*(1-riskReduction)});const drilldownData={};vendors.forEach(vendorId=>{drilldownData[vendorId]={name:VENDORS[vendorId].name,id:vendorId,data:[["Expected Loss",vendorBreachCosts[vendorId]],["Breach Cost Avoided",withoutNacCost-vendorBreachCosts[vendorId]]]}});const mainData=vendors.map(vendorId=>({name:VENDORS[vendorId].name,y:vendorBreachCosts[vendorId],color:ChartConfig.getVendorColor(vendorId),drilldown:vendorId}));mainData.push({name:"No NAC",y:withoutNacCost,color:ChartConfig.getVendorColor("no-nac"),drilldown:null});const options={chart:{type:"column",height:400},title:{text:"Potential Breach Impact Analysis"},subtitle:{text:"Click on columns to view detailed breakdown"},xAxis:{type:"category"},yAxis:{title:{text:"Expected Annual Loss ($)"},labels:{formatter:function(){return"$"+Highcharts.numberFormat(this.value,0,".",",")}}},legend:{enabled:false},plotOptions:{series:{borderWidth:0,dataLabels:{enabled:true,formatter:function(){return"$"+Highcharts.numberFormat(this.y,0,".",",")}}}},tooltip:{headerFormat:'<span style="font-size:11px">{series.name}</span><br>',pointFormat:'<span style="color:{point.color}">{point.name}</span>: <b>${point.y:,.0f}</b><br/>'},series:[{name:"Expected Annual Loss",colorByPoint:true,data:mainData}],drilldown:{series:Object.values(drilldownData)}};const element=document.getElementById(elementId);if(element){if(this.charts[chartId]&&this.charts[chartId].destroy){this.charts[chartId].destroy()}this.charts[chartId]=Highcharts.chart(element,options)}return this.charts[chartId]}createFeatureRadarChart(data,elementId,chartId){const vendors=Object.keys(data.vendors).filter(v=>v!=="no-nac");const features=["Cloud Integration","Legacy Device Support","BYOD Support","IoT Support","Wireless Support","Remote Work Support"];const featureMapping={"Cloud Integration":"cloudIntegration","Legacy Device Support":"legacyDevices","BYOD Support":"byod","IoT Support":"iot","Wireless Support":"wireless","Remote Work Support":"remoteUsers"};const series=vendors.map(vendorId=>{const vendor=VENDORS[vendorId];const featureScores=features.map(feature=>{const prop=featureMapping[feature];return vendor.features[prop]?100:0});return{name:vendor.name,data:featureScores,pointPlacement:"on",color:ChartConfig.getVendorColor(vendorId)}});const options={chart:{type:"radar",height:500},title:{text:"Feature Comparison",align:"center"},pane:{size:"80%"},xAxis:{categories:features,tickmarkPlacement:"on",lineWidth:0},yAxis:{gridLineInterpolation:"polygon",lineWidth:0,min:0,max:100,labels:{formatter:function(){return this.value===0?"No":this.value===100?"Yes":""}}},tooltip:{shared:true,pointFormat:'<span style="color:{series.color}">{series.name}: <b>{point.y === 100 ? "Supported" : "Not Supported"}</b><br/>'},series:series,responsive:{rules:[{condition:{maxWidth:500},chartOptions:{legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},pane:{size:"70%"}}}]}};const element=document.getElementById(elementId);if(element){if(this.charts[chartId]&&this.charts[chartId].destroy){this.charts[chartId].destroy()}this.charts[chartId]=Highcharts.chart(element,options)}return this.charts[chartId]}createArchitectureChart(data,elementId,chartId){const vendors=Object.keys(data.vendors).filter(v=>v!=="no-nac");const architectureCounts={cloud:{count:0,vendors:[]},"on-premises":{count:0,vendors:[]},hybrid:{count:0,vendors:[]}};vendors.forEach(vendorId=>{const architecture=VENDORS[vendorId].architecture;if(architectureCounts[architecture]){architectureCounts[architecture].count++;architectureCounts[architecture].vendors.push(VENDORS[vendorId].name)}});const categories=["Cloud-Native","On-Premises","Hybrid"];const seriesData=[architectureCounts["cloud"].count,architectureCounts["on-premises"].count,architectureCounts["hybrid"].count];const options={chart:{type:"column",height:400},title:{text:"Architecture Comparison"},subtitle:{text:"Distribution of NAC architectures"},xAxis:{categories:categories,crosshair:true},yAxis:{min:0,title:{text:"Number of Vendors"}},tooltip:{headerFormat:'<span style="font-size:10px">{point.key}</span><table>',pointFormat:'<tr><td style="color:{series.color};padding:0">{series.name}: </td>'+'<td style="padding:0"><b>{point.y} vendors</b></td></tr>'+'<tr><td colspan="2" style="padding:0">{point.vendors}</td></tr>',footerFormat:"</table>",shared:true,useHTML:true},plotOptions:{column:{pointPadding:.2,borderWidth:0,colorByPoint:true,colors:["#2ecc71","#e74c3c","#f39c12"],dataLabels:{enabled:true}}},series:[{name:"Architecture Type",data:[{y:seriesData[0],vendors:architectureCounts["cloud"].vendors.join(", "),color:"#2ecc71"},{y:seriesData[1],vendors:architectureCounts["on-premises"].vendors.join(", "),color:"#e74c3c"},{y:seriesData[2],vendors:architectureCounts["hybrid"].vendors.join(", "),color:"#f39c12"}]}]};const element=document.getElementById(elementId);if(element){if(this.charts[chartId]&&this.charts[chartId].destroy){this.charts[chartId].destroy()}this.charts[chartId]=Highcharts.chart(element,options)}return this.charts[chartId]}createNistFrameworkChart(data,elementId,chartId){const vendors=Object.keys(data.security).filter(v=>v!=="no-nac");const nistCategories=["Identify","Protect","Detect","Respond","Recover"];const series=vendors.map(vendorId=>{const security=data.security[vendorId];const vendor=VENDORS[vendorId];const nistScores=[security.securityScores.zeroTrust*.8,security.securityScores.deviceAuth,security.securityScores.riskAssessment,Math.max(0,100-security.securityScores.remediationSpeed*2),vendor.architecture==="cloud"?85:70];return{name:vendor.name,data:nistScores,pointPlacement:"on",color:ChartConfig.getVendorColor(vendorId)}});const options={chart:{type:"radar",height:500},title:{text:"NIST Cybersecurity Framework Alignment"},pane:{size:"80%"},xAxis:{categories:nistCategories,tickmarkPlacement:"on",lineWidth:0},yAxis:{gridLineInterpolation:"polygon",lineWidth:0,min:0,max:100,labels:{format:"{value}%"}},tooltip:{shared:true,pointFormat:'<span style="color:{series.color}">{series.name}: <b>{point.y:,.0f}%</b><br/>'},series:series,responsive:{rules:[{condition:{maxWidth:500},chartOptions:{legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},pane:{size:"70%"}}}]}};const element=document.getElementById(elementId);if(element){if(this.charts[chartId]&&this.charts[chartId].destroy){this.charts[chartId].destroy()}this.charts[chartId]=Highcharts.chart(element,options)}return this.charts[chartId]}createInsuranceImpactChart(data,elementId,chartId){const vendors=Object.keys(data.roi).filter(v=>v!=="no-nac");const basePremium=data.calculator?data.calculator.getInsurancePremium()*data.calculator.config.years:37500;const seriesData=vendors.map(vendorId=>{const roi=data.roi[vendorId];return{name:VENDORS[vendorId].name,y:roi.insuranceSavings,color:ChartConfig.getVendorColor(vendorId)}});const options={chart:{type:"column",height:300},title:{text:"Cybersecurity Insurance Premium Savings"},subtitle:{text:`Base annual premium: ${ChartConfig.formatCurrency(basePremium/data.calculator.config.years)}`},xAxis:{type:"category"},yAxis:{title:{text:"Premium Savings ($)"},labels:{formatter:function(){return"$"+Highcharts.numberFormat(this.value,0,".",",")}}},legend:{enabled:false},tooltip:{pointFormat:"<b>{point.y:,.0f}</b> ({point.percentage:.1f}% of base premium)"},plotOptions:{series:{borderWidth:0,dataLabels:{enabled:true,formatter:function(){return"$"+Highcharts.numberFormat(this.y,0,".",",")}}}},series:[{name:"Insurance Savings",colorByPoint:true,data:seriesData}]};const element=document.getElementById(elementId);if(element){if(this.charts[chartId]&&this.charts[chartId].destroy){this.charts[chartId].destroy()}this.charts[chartId]=Highcharts.chart(element,options)}return this.charts[chartId]}initSecurityCharts(resultsData){this.destroyCharts(["riskComparisonChart","breachImpactChart","insuranceImpactChart","nistFrameworkChart"]);this.createRiskComparisonChart(resultsData,"risk-comparison-chart","riskComparisonChart");this.createBreachImpactChart(resultsData,"breach-impact-chart","breachImpactChart");this.createInsuranceImpactChart(resultsData,"insurance-impact-chart","insuranceImpactChart");this.createNistFrameworkChart(resultsData,"nist-framework-chart","nistFrameworkChart");return this.charts}initTechnicalCharts(resultsData){this.destroyCharts(["architectureChart","featureRadarChart"]);this.createArchitectureChart(resultsData,"architecture-chart","architectureChart");this.createFeatureRadarChart(resultsData,"feature-radar-chart","featureRadarChart");return this.charts}destroyCharts(chartIds){chartIds.forEach(id=>{if(this.charts[id]&&this.charts[id].destroy){this.charts[id].destroy();delete this.charts[id]}})}}if(typeof module!=="undefined"&&module.exports){module.exports={HighchartsManager:HighchartsManager}}