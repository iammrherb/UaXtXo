/**
 * Zero Trust Total Cost Analyzer - Enhanced Executive Intelligence Platform
 * Comprehensive analytics with detailed charts, compliance mappings, and real-time calculations
 */

class ZeroTrustExecutivePlatform {
    constructor() {
        this.initialized = false;
        this.currentTab = 'overview';
        this.selectedVendors = ['portnox']; // Default to Portnox only
        this.chartInstances = {};
        this.calculationCache = {};
        this.debugMode = false; // Less aggressive debugging
        
        // Enhanced configuration with baseline 300 devices
        this.config = {
            deviceCount: 300, // Small business baseline
            analysisPeriod: 3,
            riskFactor: 1.0,
            industry: 'technology',
            companySize: 'small',
            fteCost: 85000,
            breachCost: 4350000,
            downtimeCost: 5000,
            deploymentType: 'cloud', // cloud, hybrid, on-premises
            complianceFrameworks: [], // Selected compliance requirements
            securityPosture: 'standard', // low, standard, elevated, critical
            insurancePremium: 50000, // Annual cyber insurance
            includeAddOns: false,
            includeHardware: true,
            includeMaintenance: true,
            includeTraining: true,
            includeSupport: true
        };
        
        // Initialize comprehensive vendor data with all 10 vendors
        this.vendorData = this.initializeComprehensiveVendorData();
        this.industryData = this.initializeEnhancedIndustryData();
        this.complianceData = this.initializeDetailedComplianceData();
        this.securityControls = this.initializeSecurityControls();
        this.attackFramework = this.initializeMitreAttackMapping();
        this.features = this.initializeNACFeatures();
    }
    
    initializeComprehensiveVendorData() {
        return {
            'portnox': {
                name: 'Portnox Cloud',
                shortName: 'Portnox',
                logo: './img/vendors/portnox-logo.png',
                color: '#1a5a96',
                architecture: 'Cloud-Native',
                deploymentModel: 'SaaS',
                
                // Detailed pricing structure
                pricing: {
                    model: 'subscription',
                    basePrice: 20, // Per device per month
                    minimumDevices: 50,
                    volumeDiscounts: [
                        { min: 50, max: 250, discount: 0 },
                        { min: 251, max: 500, discount: 10 },
                        { min: 501, max: 1000, discount: 15 },
                        { min: 1001, max: 5000, discount: 20 },
                        { min: 5001, max: Infinity, discount: 25 }
                    ],
                    includedFeatures: [
                        'Zero Trust Network Access',
                        'Conditional Access for Applications',
                        'PKI Certificate Services',
                        'IoT Device Profiling',
                        'TACACS+ Authentication',
                        'Cloud RADIUS',
                        'Guest Access Management',
                        'BYOD Support',
                        '24/7 Support',
                        'Onboarding Assistance',
                        'Regular Updates',
                        'API Access',
                        'Multi-tenancy',
                        'Compliance Reporting'
                    ],
                    hiddenCosts: 'None - All-inclusive pricing'
                },
                
                // Detailed cost breakdown
                costs: {
                    hardware: 0,
                    software: 0,
                    implementation: 5000, // One-time
                    training: 0, // Included
                    support: 0, // Included
                    maintenance: 0, // Cloud-managed
                    infrastructure: 0, // No infrastructure needed
                    personnelPerYear: 25000, // 0.25 FTE
                    downtimePerYear: 2000, // Minimal downtime
                    patchingPerYear: 0, // Automated
                    upgradesCycle: 0, // Continuous updates
                    energyCosts: 0, // No on-premises equipment
                    rackSpace: 0,
                    networkBandwidth: 0,
                    backupStorage: 0,
                    disasterRecovery: 0
                },
                
                // Comprehensive metrics
                metrics: {
                    deploymentTime: 1, // Days
                    timeToValue: 7, // Days
                    fteRequired: 0.25,
                    mttr: 0.5, // Hours
                    availability: 99.99, // %
                    scalability: 'Unlimited',
                    performanceImpact: 'Minimal',
                    userSatisfaction: 94,
                    npsScore: 72,
                    supportResponseTime: 15, // Minutes
                    updateFrequency: 'Continuous',
                    patchingEffort: 'Zero',
                    integrationEffort: 'Low'
                },
                
                // Security capabilities
                security: {
                    zeroTrustScore: 98,
                    deviceAuthMethods: 10,
                    riskAssessmentReal: true,
                    automatedRemediation: true,
                    threatIntelligence: true,
                    behavioralAnalytics: true,
                    microsegmentation: true,
                    encryptionStandards: ['TLS 1.3', 'AES-256', 'RSA-4096'],
                    certifications: ['SOC 2', 'ISO 27001', 'CSA STAR'],
                    vulnerabilityManagement: 'Automated',
                    incidentResponse: 'Automated + Expert Support',
                    forensicsCapability: true,
                    dlpIntegration: true
                },
                
                // Compliance coverage
                compliance: {
                    frameworks: {
                        'nist-csf': { coverage: 94, controls: 98 },
                        'pci-dss': { coverage: 91, controls: 12 },
                        'hipaa': { coverage: 89, controls: 54 },
                        'gdpr': { coverage: 93, controls: 35 },
                        'iso27001': { coverage: 90, controls: 114 },
                        'sox': { coverage: 88, controls: 20 },
                        'fedramp': { coverage: 85, controls: 325 },
                        'fisma': { coverage: 87, controls: 200 },
                        'ccpa': { coverage: 91, controls: 10 },
                        'cis': { coverage: 93, controls: 153 },
                        'cmmc': { coverage: 88, controls: 130 },
                        'nerc-cip': { coverage: 82, controls: 45 }
                    },
                    reportingCapabilities: 'Automated',
                    auditTrail: 'Complete',
                    dataResidency: 'Multi-region',
                    dataRetention: 'Configurable'
                },
                
                // Features and capabilities
                features: {
                    // Core NAC Features
                    deviceVisibility: true,
                    deviceProfiling: true,
                    networkAccessControl: true,
                    guestAccess: true,
                    byod: true,
                    iotSupport: true,
                    
                    // Advanced Features
                    conditionalAccess: true,
                    applicationControl: true,
                    pkiServices: true,
                    cloudRadius: true,
                    tacacs: true,
                    samlIntegration: true,
                    mfaSupport: true,
                    
                    // Operational Features
                    centralizedManagement: true,
                    multiTenancy: true,
                    roleBasedAccess: true,
                    apiAvailable: true,
                    customIntegrations: true,
                    
                    // Automation
                    automatedOnboarding: true,
                    selfServicePortal: true,
                    automatedCompliance: true,
                    workflowAutomation: true
                },
                
                // Risk reduction metrics
                riskReduction: {
                    breachProbabilityReduction: 85, // %
                    dataExfiltrationPrevention: 92, // %
                    lateralMovementPrevention: 95, // %
                    unauthorizedAccessPrevention: 98, // %
                    malwareSpreadPrevention: 90, // %
                    insiderThreatMitigation: 88, // %
                    complianceViolationReduction: 93, // %
                    shadowITDiscovery: 96, // %
                    
                    // Financial impact
                    avgBreachCostReduction: 3200000, // $
                    insurancePremiumReduction: 25, // %
                    compliancePenaltyAvoidance: 95, // %
                    operationalLossReduction: 80 // %
                }
            },
            
            'cisco': {
                name: 'Cisco Identity Services Engine (ISE)',
                shortName: 'Cisco ISE',
                logo: './img/vendors/cisco-logo.png',
                color: '#00bceb',
                architecture: 'On-Premises',
                deploymentModel: 'Appliance/VM',
                
                pricing: {
                    model: 'perpetual',
                    basePrice: 150, // Per device one-time
                    minimumDevices: 100,
                    volumeDiscounts: [
                        { min: 100, max: 500, discount: 0 },
                        { min: 501, max: 1000, discount: 5 },
                        { min: 1001, max: 5000, discount: 10 },
                        { min: 5001, max: Infinity, discount: 15 }
                    ],
                    includedFeatures: [
                        'Basic NAC',
                        'RADIUS Services',
                        'Device Profiling',
                        'Guest Access',
                        'Basic Reporting'
                    ],
                    additionalCosts: [
                        'Hardware appliances',
                        'Annual maintenance (20%)',
                        'Professional services',
                        'Training',
                        'Upgrades',
                        'Additional modules'
                    ],
                    hiddenCosts: 'Hardware refresh, licensing complexity, professional services'
                },
                
                costs: {
                    hardware: 120000, // For 300 devices
                    software: 45000, // Base licenses
                    implementation: 75000,
                    training: 25000,
                    support: 24000, // Annual
                    maintenance: 33000, // Annual
                    infrastructure: 15000, // Annual
                    personnelPerYear: 150000, // 1.5 FTE
                    downtimePerYear: 40000,
                    patchingPerYear: 20000,
                    upgradesCycle: 50000, // Every 3 years
                    energyCosts: 8000, // Annual
                    rackSpace: 6000, // Annual
                    networkBandwidth: 4000, // Annual
                    backupStorage: 5000, // Annual
                    disasterRecovery: 15000 // Annual
                },
                
                metrics: {
                    deploymentTime: 90,
                    timeToValue: 120,
                    fteRequired: 1.5,
                    mttr: 4,
                    availability: 99.5,
                    scalability: 'Limited by hardware',
                    performanceImpact: 'Moderate',
                    userSatisfaction: 72,
                    npsScore: -5,
                    supportResponseTime: 60,
                    updateFrequency: 'Quarterly',
                    patchingEffort: 'High',
                    integrationEffort: 'High'
                },
                
                security: {
                    zeroTrustScore: 75,
                    deviceAuthMethods: 6,
                    riskAssessmentReal: false,
                    automatedRemediation: false,
                    threatIntelligence: false,
                    behavioralAnalytics: false,
                    microsegmentation: true,
                    encryptionStandards: ['TLS 1.2', 'AES-256'],
                    certifications: ['Common Criteria'],
                    vulnerabilityManagement: 'Manual',
                    incidentResponse: 'Manual',
                    forensicsCapability: false,
                    dlpIntegration: false
                },
                
                compliance: {
                    frameworks: {
                        'nist-csf': { coverage: 85, controls: 85 },
                        'pci-dss': { coverage: 88, controls: 12 },
                        'hipaa': { coverage: 82, controls: 45 },
                        'gdpr': { coverage: 75, controls: 25 },
                        'iso27001': { coverage: 85, controls: 100 },
                        'sox': { coverage: 80, controls: 18 },
                        'fedramp': { coverage: 90, controls: 300 },
                        'fisma': { coverage: 88, controls: 180 }
                    },
                    reportingCapabilities: 'Manual',
                    auditTrail: 'Basic',
                    dataResidency: 'On-premises only',
                    dataRetention: 'Manual configuration'
                },
                
                features: {
                    deviceVisibility: true,
                    deviceProfiling: true,
                    networkAccessControl: true,
                    guestAccess: true,
                    byod: true,
                    iotSupport: false,
                    conditionalAccess: false,
                    applicationControl: false,
                    pkiServices: true,
                    cloudRadius: false,
                    tacacs: true,
                    samlIntegration: false,
                    mfaSupport: true,
                    centralizedManagement: true,
                    multiTenancy: false,
                    roleBasedAccess: true,
                    apiAvailable: true,
                    customIntegrations: false,
                    automatedOnboarding: false,
                    selfServicePortal: true,
                    automatedCompliance: false,
                    workflowAutomation: false
                },
                
                riskReduction: {
                    breachProbabilityReduction: 65,
                    dataExfiltrationPrevention: 70,
                    lateralMovementPrevention: 75,
                    unauthorizedAccessPrevention: 80,
                    malwareSpreadPrevention: 60,
                    insiderThreatMitigation: 65,
                    complianceViolationReduction: 70,
                    shadowITDiscovery: 60,
                    avgBreachCostReduction: 1800000,
                    insurancePremiumReduction: 10,
                    compliancePenaltyAvoidance: 75,
                    operationalLossReduction: 50
                }
            },
            
            'aruba': {
                name: 'Aruba ClearPass',
                shortName: 'Aruba',
                logo: './img/vendors/aruba-logo.png',
                color: '#ff6900',
                architecture: 'On-Premises/Virtual',
                deploymentModel: 'Appliance/VM',
                
                pricing: {
                    model: 'perpetual',
                    basePrice: 120,
                    minimumDevices: 100,
                    volumeDiscounts: [
                        { min: 100, max: 500, discount: 0 },
                        { min: 501, max: 1000, discount: 5 },
                        { min: 1001, max: 5000, discount: 8 },
                        { min: 5001, max: Infinity, discount: 12 }
                    ],
                    includedFeatures: [
                        'NAC',
                        'Guest Access',
                        'Device Profiling',
                        'BYOD Onboarding',
                        'Basic Reporting'
                    ],
                    additionalCosts: [
                        'Hardware appliances',
                        'Annual support (18%)',
                        'Implementation services',
                        'Training',
                        'Add-on modules'
                    ],
                    hiddenCosts: 'Complex licensing, hardware dependencies'
                },
                
                costs: {
                    hardware: 85000,
                    software: 36000,
                    implementation: 55000,
                    training: 18000,
                    support: 18000,
                    maintenance: 25000,
                    infrastructure: 12000,
                    personnelPerYear: 125000, // 1.25 FTE
                    downtimePerYear: 30000,
                    patchingPerYear: 15000,
                    upgradesCycle: 40000,
                    energyCosts: 6000,
                    rackSpace: 4500,
                    networkBandwidth: 3000,
                    backupStorage: 4000,
                    disasterRecovery: 12000
                },
                
                metrics: {
                    deploymentTime: 60,
                    timeToValue: 90,
                    fteRequired: 1.25,
                    mttr: 3,
                    availability: 99.0,
                    scalability: 'Hardware limited',
                    performanceImpact: 'Moderate',
                    userSatisfaction: 75,
                    npsScore: 10,
                    supportResponseTime: 45,
                    updateFrequency: 'Quarterly',
                    patchingEffort: 'Moderate',
                    integrationEffort: 'Moderate'
                },
                
                security: {
                    zeroTrustScore: 70,
                    deviceAuthMethods: 5,
                    riskAssessmentReal: false,
                    automatedRemediation: false,
                    threatIntelligence: false,
                    behavioralAnalytics: false,
                    microsegmentation: true,
                    encryptionStandards: ['TLS 1.2', 'AES-256'],
                    certifications: ['Common Criteria'],
                    vulnerabilityManagement: 'Semi-manual',
                    incidentResponse: 'Manual',
                    forensicsCapability: false,
                    dlpIntegration: false
                },
                
                compliance: {
                    frameworks: {
                        'nist-csf': { coverage: 82, controls: 80 },
                        'pci-dss': { coverage: 85, controls: 11 },
                        'hipaa': { coverage: 78, controls: 42 },
                        'gdpr': { coverage: 72, controls: 22 },
                        'iso27001': { coverage: 83, controls: 95 }
                    }
                },
                
                features: {
                    deviceVisibility: true,
                    deviceProfiling: true,
                    networkAccessControl: true,
                    guestAccess: true,
                    byod: true,
                    iotSupport: false,
                    conditionalAccess: false,
                    applicationControl: false,
                    pkiServices: true,
                    cloudRadius: false,
                    tacacs: false,
                    samlIntegration: false,
                    mfaSupport: true,
                    centralizedManagement: true,
                    multiTenancy: false,
                    roleBasedAccess: true,
                    apiAvailable: true,
                    customIntegrations: false,
                    automatedOnboarding: true,
                    selfServicePortal: true,
                    automatedCompliance: false,
                    workflowAutomation: false
                },
                
                riskReduction: {
                    breachProbabilityReduction: 60,
                    dataExfiltrationPrevention: 65,
                    lateralMovementPrevention: 70,
                    unauthorizedAccessPrevention: 75,
                    malwareSpreadPrevention: 55,
                    insiderThreatMitigation: 60,
                    complianceViolationReduction: 65,
                    shadowITDiscovery: 55,
                    avgBreachCostReduction: 1500000,
                    insurancePremiumReduction: 8,
                    compliancePenaltyAvoidance: 70,
                    operationalLossReduction: 45
                }
            },
            
            'forescout': {
                name: 'Forescout Platform',
                shortName: 'Forescout',
                logo: './img/vendors/forescout-logo.png',
                color: '#7a2a90',
                architecture: 'On-Premises/Virtual',
                deploymentModel: 'Appliance/VM',
                
                pricing: {
                    model: 'perpetual',
                    basePrice: 100,
                    minimumDevices: 100,
                    volumeDiscounts: [
                        { min: 100, max: 1000, discount: 0 },
                        { min: 1001, max: 5000, discount: 10 },
                        { min: 5001, max: Infinity, discount: 15 }
                    ],
                    includedFeatures: [
                        'Agentless NAC',
                        'Device Discovery',
                        'Network Segmentation',
                        'Compliance',
                        'Orchestration'
                    ],
                    additionalCosts: [
                        'CounterACT appliances',
                        'Annual maintenance (20%)',
                        'Professional services',
                        'Training',
                        'eyeExtend modules'
                    ]
                },
                
                costs: {
                    hardware: 70000,
                    software: 30000,
                    implementation: 45000,
                    training: 15000,
                    support: 16000,
                    maintenance: 20000,
                    infrastructure: 10000,
                    personnelPerYear: 100000,
                    downtimePerYear: 25000,
                    patchingPerYear: 12000,
                    upgradesCycle: 35000,
                    energyCosts: 5000,
                    rackSpace: 3500,
                    networkBandwidth: 2500,
                    backupStorage: 3500,
                    disasterRecovery: 10000
                },
                
                metrics: {
                    deploymentTime: 45,
                    timeToValue: 60,
                    fteRequired: 1.0,
                    mttr: 2.5,
                    availability: 99.2,
                    scalability: 'Good',
                    performanceImpact: 'Low',
                    userSatisfaction: 78,
                    npsScore: 25,
                    supportResponseTime: 30,
                    updateFrequency: 'Monthly',
                    patchingEffort: 'Moderate',
                    integrationEffort: 'Low'
                },
                
                security: {
                    zeroTrustScore: 72,
                    deviceAuthMethods: 4,
                    riskAssessmentReal: true,
                    automatedRemediation: true,
                    threatIntelligence: false,
                    behavioralAnalytics: false,
                    microsegmentation: true,
                    encryptionStandards: ['TLS 1.2', 'AES-256'],
                    certifications: ['ISO 27001'],
                    vulnerabilityManagement: 'Automated',
                    incidentResponse: 'Semi-automated',
                    forensicsCapability: false,
                    dlpIntegration: false
                },
                
                compliance: {
                    frameworks: {
                        'nist-csf': { coverage: 85, controls: 82 },
                        'pci-dss': { coverage: 82, controls: 11 },
                        'hipaa': { coverage: 88, controls: 48 },
                        'gdpr': { coverage: 80, controls: 28 },
                        'iso27001': { coverage: 84, controls: 98 }
                    }
                },
                
                features: {
                    deviceVisibility: true,
                    deviceProfiling: true,
                    networkAccessControl: true,
                    guestAccess: false,
                    byod: true,
                    iotSupport: true,
                    conditionalAccess: false,
                    applicationControl: false,
                    pkiServices: false,
                    cloudRadius: false,
                    tacacs: false,
                    samlIntegration: false,
                    mfaSupport: false,
                    centralizedManagement: true,
                    multiTenancy: false,
                    roleBasedAccess: true,
                    apiAvailable: true,
                    customIntegrations: true,
                    automatedOnboarding: false,
                    selfServicePortal: false,
                    automatedCompliance: true,
                    workflowAutomation: true
                },
                
                riskReduction: {
                    breachProbabilityReduction: 68,
                    dataExfiltrationPrevention: 72,
                    lateralMovementPrevention: 78,
                    unauthorizedAccessPrevention: 82,
                    malwareSpreadPrevention: 65,
                    insiderThreatMitigation: 70,
                    complianceViolationReduction: 75,
                    shadowITDiscovery: 85,
                    avgBreachCostReduction: 1800000,
                    insurancePremiumReduction: 12,
                    compliancePenaltyAvoidance: 80,
                    operationalLossReduction: 55
                }
            },
            
            'fortinet': {
                name: 'FortiNAC',
                shortName: 'FortiNAC',
                logo: './img/vendors/fortinet-logo.png',
                color: '#ee3124',
                architecture: 'On-Premises/Virtual',
                deploymentModel: 'Appliance/VM',
                
                pricing: {
                    model: 'perpetual',
                    basePrice: 85,
                    minimumDevices: 100,
                    volumeDiscounts: [
                        { min: 100, max: 1000, discount: 0 },
                        { min: 1001, max: 5000, discount: 8 },
                        { min: 5001, max: Infinity, discount: 12 }
                    ],
                    includedFeatures: [
                        'NAC',
                        'IoT Security',
                        'Guest Management',
                        'BYOD',
                        'Integration with FortiGate'
                    ],
                    additionalCosts: [
                        'FortiNAC appliances',
                        'Annual FortiCare (20%)',
                        'Implementation',
                        'Training'
                    ]
                },
                
                costs: {
                    hardware: 60000,
                    software: 25500,
                    implementation: 40000,
                    training: 12000,
                    support: 14000,
                    maintenance: 17000,
                    infrastructure: 9000,
                    personnelPerYear: 85000,
                    downtimePerYear: 20000,
                    patchingPerYear: 10000,
                    upgradesCycle: 30000,
                    energyCosts: 4500,
                    rackSpace: 3000,
                    networkBandwidth: 2000,
                    backupStorage: 3000,
                    disasterRecovery: 9000
                },
                
                metrics: {
                    deploymentTime: 45,
                    timeToValue: 60,
                    fteRequired: 0.85,
                    mttr: 2,
                    availability: 99.3,
                    scalability: 'Good',
                    performanceImpact: 'Low',
                    userSatisfaction: 76,
                    npsScore: 20,
                    supportResponseTime: 30,
                    updateFrequency: 'Monthly',
                    patchingEffort: 'Low',
                    integrationEffort: 'Low'
                },
                
                security: {
                    zeroTrustScore: 68,
                    deviceAuthMethods: 4,
                    riskAssessmentReal: false,
                    automatedRemediation: true,
                    threatIntelligence: true,
                    behavioralAnalytics: false,
                    microsegmentation: true,
                    encryptionStandards: ['TLS 1.2', 'AES-256'],
                    certifications: ['Common Criteria', 'ICSA Labs'],
                    vulnerabilityManagement: 'Semi-automated',
                    incidentResponse: 'Semi-automated',
                    forensicsCapability: false,
                    dlpIntegration: false
                },
                
                compliance: {
                    frameworks: {
                        'nist-csf': { coverage: 80, controls: 78 },
                        'pci-dss': { coverage: 85, controls: 11 },
                        'hipaa': { coverage: 82, controls: 45 },
                        'gdpr': { coverage: 78, controls: 26 },
                        'iso27001': { coverage: 81, controls: 92 }
                    }
                },
                
                features: {
                    deviceVisibility: true,
                    deviceProfiling: true,
                    networkAccessControl: true,
                    guestAccess: true,
                    byod: true,
                    iotSupport: true,
                    conditionalAccess: false,
                    applicationControl: false,
                    pkiServices: false,
                    cloudRadius: false,
                    tacacs: false,
                    samlIntegration: false,
                    mfaSupport: true,
                    centralizedManagement: true,
                    multiTenancy: false,
                    roleBasedAccess: true,
                    apiAvailable: true,
                    customIntegrations: true,
                    automatedOnboarding: false,
                    selfServicePortal: true,
                    automatedCompliance: false,
                    workflowAutomation: true
                },
                
                riskReduction: {
                    breachProbabilityReduction: 62,
                    dataExfiltrationPrevention: 68,
                    lateralMovementPrevention: 72,
                    unauthorizedAccessPrevention: 78,
                    malwareSpreadPrevention: 70,
                    insiderThreatMitigation: 65,
                    complianceViolationReduction: 70,
                    shadowITDiscovery: 75,
                    avgBreachCostReduction: 1600000,
                    insurancePremiumReduction: 10,
                    compliancePenaltyAvoidance: 75,
                    operationalLossReduction: 50
                }
            },
            
            'juniper': {
                name: 'Juniper Mist Access Assurance',
                shortName: 'Juniper Mist',
                logo: './img/vendors/juniper-logo.png',
                color: '#84bd00',
                architecture: 'Cloud-Managed',
                deploymentModel: 'Hybrid',
                
                pricing: {
                    model: 'subscription',
                    basePrice: 35,
                    minimumDevices: 50,
                    volumeDiscounts: [
                        { min: 50, max: 500, discount: 0 },
                        { min: 501, max: 1000, discount: 10 },
                        { min: 1001, max: 5000, discount: 15 },
                        { min: 5001, max: Infinity, discount: 20 }
                    ],
                    includedFeatures: [
                        'AI-Driven NAC',
                        'Cloud Management',
                        'Marvis Virtual Network Assistant',
                        'Location Services',
                        'Premium Analytics'
                    ],
                    additionalCosts: [
                        'Edge hardware (optional)',
                        'Professional services',
                        'Advanced features'
                    ]
                },
                
                costs: {
                    hardware: 30000, // Edge devices
                    software: 0,
                    implementation: 25000,
                    training: 8000,
                    support: 0, // Included
                    maintenance: 0, // Cloud-managed
                    infrastructure: 5000,
                    personnelPerYear: 50000, // 0.5 FTE
                    downtimePerYear: 10000,
                    patchingPerYear: 0, // Automated
                    upgradesCycle: 0, // Continuous
                    energyCosts: 2000,
                    rackSpace: 1000,
                    networkBandwidth: 0,
                    backupStorage: 0,
                    disasterRecovery: 0
                },
                
                metrics: {
                    deploymentTime: 30,
                    timeToValue: 45,
                    fteRequired: 0.5,
                    mttr: 1,
                    availability: 99.9,
                    scalability: 'Excellent',
                    performanceImpact: 'Minimal',
                    userSatisfaction: 82,
                    npsScore: 45,
                    supportResponseTime: 20,
                    updateFrequency: 'Continuous',
                    patchingEffort: 'Zero',
                    integrationEffort: 'Low'
                },
                
                security: {
                    zeroTrustScore: 78,
                    deviceAuthMethods: 6,
                    riskAssessmentReal: true,
                    automatedRemediation: true,
                    threatIntelligence: true,
                    behavioralAnalytics: true,
                    microsegmentation: true,
                    encryptionStandards: ['TLS 1.3', 'AES-256'],
                    certifications: ['SOC 2'],
                    vulnerabilityManagement: 'Automated',
                    incidentResponse: 'AI-assisted',
                    forensicsCapability: true,
                    dlpIntegration: false
                },
                
                compliance: {
                    frameworks: {
                        'nist-csf': { coverage: 78, controls: 75 },
                        'pci-dss': { coverage: 75, controls: 10 },
                        'hipaa': { coverage: 72, controls: 40 },
                        'gdpr': { coverage: 80, controls: 28 },
                        'iso27001': { coverage: 77, controls: 88 }
                    }
                },
                
                features: {
                    deviceVisibility: true,
                    deviceProfiling: true,
                    networkAccessControl: true,
                    guestAccess: true,
                    byod: true,
                    iotSupport: true,
                    conditionalAccess: false,
                    applicationControl: false,
                    pkiServices: false,
                    cloudRadius: true,
                    tacacs: false,
                    samlIntegration: true,
                    mfaSupport: true,
                    centralizedManagement: true,
                    multiTenancy: true,
                    roleBasedAccess: true,
                    apiAvailable: true,
                    customIntegrations: true,
                    automatedOnboarding: true,
                    selfServicePortal: true,
                    automatedCompliance: false,
                    workflowAutomation: true
                },
                
                riskReduction: {
                    breachProbabilityReduction: 70,
                    dataExfiltrationPrevention: 75,
                    lateralMovementPrevention: 80,
                    unauthorizedAccessPrevention: 85,
                    malwareSpreadPrevention: 68,
                    insiderThreatMitigation: 72,
                    complianceViolationReduction: 68,
                    shadowITDiscovery: 88,
                    avgBreachCostReduction: 2000000,
                    insurancePremiumReduction: 15,
                    compliancePenaltyAvoidance: 70,
                    operationalLossReduction: 60
                }
            },
            
            'arista': {
                name: 'Arista CloudVision',
                shortName: 'Arista',
                logo: './img/vendors/arista-logo.png',
                color: '#ff6600',
                architecture: 'Cloud-Managed',
                deploymentModel: 'Hybrid',
                
                pricing: {
                    model: 'subscription',
                    basePrice: 30,
                    minimumDevices: 100,
                    volumeDiscounts: [
                        { min: 100, max: 1000, discount: 0 },
                        { min: 1001, max: 5000, discount: 10 },
                        { min: 5001, max: Infinity, discount: 15 }
                    ],
                    includedFeatures: [
                        'Network-wide NAC',
                        'CloudVision Portal',
                        'Cognitive Campus',
                        'Network Telemetry',
                        'Automation'
                    ],
                    additionalCosts: [
                        'Arista switches',
                        'Professional services',
                        'Advanced analytics'
                    ]
                },
                
                costs: {
                    hardware: 40000, // Some edge equipment
                    software: 0,
                    implementation: 30000,
                    training: 10000,
                    support: 0,
                    maintenance: 0,
                    infrastructure: 6000,
                    personnelPerYear: 60000,
                    downtimePerYear: 12000,
                    patchingPerYear: 0,
                    upgradesCycle: 0,
                    energyCosts: 3000,
                    rackSpace: 2000,
                    networkBandwidth: 0,
                    backupStorage: 0,
                    disasterRecovery: 0
                },
                
                metrics: {
                    deploymentTime: 30,
                    timeToValue: 45,
                    fteRequired: 0.6,
                    mttr: 1.5,
                    availability: 99.8,
                    scalability: 'Very Good',
                    performanceImpact: 'Low',
                    userSatisfaction: 79,
                    npsScore: 35,
                    supportResponseTime: 25,
                    updateFrequency: 'Continuous',
                    patchingEffort: 'Minimal',
                    integrationEffort: 'Moderate'
                },
                
                security: {
                    zeroTrustScore: 72,
                    deviceAuthMethods: 5,
                    riskAssessmentReal: false,
                    automatedRemediation: true,
                    threatIntelligence: false,
                    behavioralAnalytics: true,
                    microsegmentation: true,
                    encryptionStandards: ['TLS 1.2', 'AES-256'],
                    certifications: ['SOC 2'],
                    vulnerabilityManagement: 'Semi-automated',
                    incidentResponse: 'Semi-automated',
                    forensicsCapability: true,
                    dlpIntegration: false
                },
                
                compliance: {
                    frameworks: {
                        'nist-csf': { coverage: 75, controls: 72 },
                        'pci-dss': { coverage: 78, controls: 10 },
                        'hipaa': { coverage: 74, controls: 38 },
                        'gdpr': { coverage: 76, controls: 25 },
                        'iso27001': { coverage: 77, controls: 85 }
                    }
                },
                
                features: {
                    deviceVisibility: true,
                    deviceProfiling: true,
                    networkAccessControl: true,
                    guestAccess: false,
                    byod: true,
                    iotSupport: true,
                    conditionalAccess: false,
                    applicationControl: false,
                    pkiServices: false,
                    cloudRadius: false,
                    tacacs: false,
                    samlIntegration: true,
                    mfaSupport: false,
                    centralizedManagement: true,
                    multiTenancy: true,
                    roleBasedAccess: true,
                    apiAvailable: true,
                    customIntegrations: true,
                    automatedOnboarding: false,
                    selfServicePortal: false,
                    automatedCompliance: false,
                    workflowAutomation: true
                },
                
                riskReduction: {
                    breachProbabilityReduction: 65,
                    dataExfiltrationPrevention: 70,
                    lateralMovementPrevention: 75,
                    unauthorizedAccessPrevention: 78,
                    malwareSpreadPrevention: 60,
                    insiderThreatMitigation: 65,
                    complianceViolationReduction: 65,
                    shadowITDiscovery: 80,
                    avgBreachCostReduction: 1700000,
                    insurancePremiumReduction: 10,
                    compliancePenaltyAvoidance: 70,
                    operationalLossReduction: 50
                }
            },
            
            'microsoft': {
                name: 'Microsoft Network Policy Server',
                shortName: 'Microsoft NPS',
                logo: './img/vendors/microsoft-logo.png',
                color: '#00bcf2',
                architecture: 'On-Premises',
                deploymentModel: 'Software',
                
                pricing: {
                    model: 'included',
                    basePrice: 10, // Minimal cost with Windows Server
                    minimumDevices: 0,
                    volumeDiscounts: [],
                    includedFeatures: [
                        'Basic RADIUS',
                        'Network Policies',
                        'Windows Integration',
                        'Basic Authentication'
                    ],
                    additionalCosts: [
                        'Windows Server licenses',
                        'CALs',
                        'Hardware',
                        'Administration'
                    ]
                },
                
                costs: {
                    hardware: 20000,
                    software: 3000, // Windows licenses
                    implementation: 15000,
                    training: 5000,
                    support: 10000,
                    maintenance: 8000,
                    infrastructure: 5000,
                    personnelPerYear: 75000,
                    downtimePerYear: 30000,
                    patchingPerYear: 15000,
                    upgradesCycle: 20000,
                    energyCosts: 2000,
                    rackSpace: 1500,
                    networkBandwidth: 1000,
                    backupStorage: 2000,
                    disasterRecovery: 5000
                },
                
                metrics: {
                    deploymentTime: 21,
                    timeToValue: 30,
                    fteRequired: 0.75,
                    mttr: 6,
                    availability: 98.5,
                    scalability: 'Limited',
                    performanceImpact: 'High',
                    userSatisfaction: 65,
                    npsScore: -10,
                    supportResponseTime: 120,
                    updateFrequency: 'Monthly patches',
                    patchingEffort: 'High',
                    integrationEffort: 'Low (Windows only)'
                },
                
                security: {
                    zeroTrustScore: 45,
                    deviceAuthMethods: 3,
                    riskAssessmentReal: false,
                    automatedRemediation: false,
                    threatIntelligence: false,
                    behavioralAnalytics: false,
                    microsegmentation: false,
                    encryptionStandards: ['TLS 1.2'],
                    certifications: ['Microsoft'],
                    vulnerabilityManagement: 'Manual',
                    incidentResponse: 'Manual',
                    forensicsCapability: false,
                    dlpIntegration: false
                },
                
                compliance: {
                    frameworks: {
                        'nist-csf': { coverage: 60, controls: 55 },
                        'pci-dss': { coverage: 65, controls: 8 },
                        'hipaa': { coverage: 60, controls: 30 },
                        'gdpr': { coverage: 58, controls: 18 },
                        'iso27001': { coverage: 62, controls: 65 }
                    }
                },
                
                features: {
                    deviceVisibility: false,
                    deviceProfiling: false,
                    networkAccessControl: true,
                    guestAccess: false,
                    byod: false,
                    iotSupport: false,
                    conditionalAccess: false,
                    applicationControl: false,
                    pkiServices: true,
                    cloudRadius: false,
                    tacacs: false,
                    samlIntegration: false,
                    mfaSupport: true,
                    centralizedManagement: false,
                    multiTenancy: false,
                    roleBasedAccess: true,
                    apiAvailable: false,
                    customIntegrations: false,
                    automatedOnboarding: false,
                    selfServicePortal: false,
                    automatedCompliance: false,
                    workflowAutomation: false
                },
                
                riskReduction: {
                    breachProbabilityReduction: 40,
                    dataExfiltrationPrevention: 45,
                    lateralMovementPrevention: 50,
                    unauthorizedAccessPrevention: 55,
                    malwareSpreadPrevention: 35,
                    insiderThreatMitigation: 40,
                    complianceViolationReduction: 45,
                    shadowITDiscovery: 30,
                    avgBreachCostReduction: 800000,
                    insurancePremiumReduction: 3,
                    compliancePenaltyAvoidance: 50,
                    operationalLossReduction: 25
                }
            },
            
            'securew2': {
                name: 'SecureW2',
                shortName: 'SecureW2',
                logo: './img/vendors/securew2-logo.png',
                color: '#2c5aa0',
                architecture: 'Cloud',
                deploymentModel: 'SaaS',
                
                pricing: {
                    model: 'subscription',
                    basePrice: 15,
                    minimumDevices: 25,
                    volumeDiscounts: [
                        { min: 25, max: 500, discount: 0 },
                        { min: 501, max: 1000, discount: 10 },
                        { min: 1001, max: Infinity, discount: 15 }
                    ],
                    includedFeatures: [
                        'Certificate-based Auth',
                        'Cloud RADIUS',
                        'PKI Services',
                        'Device Onboarding',
                        'Basic Reporting'
                    ],
                    additionalCosts: [
                        'Advanced features',
                        'Professional services',
                        'Custom integrations'
                    ]
                },
                
                costs: {
                    hardware: 0,
                    software: 0,
                    implementation: 8000,
                    training: 3000,
                    support: 0,
                    maintenance: 0,
                    infrastructure: 0,
                    personnelPerYear: 40000,
                    downtimePerYear: 5000,
                    patchingPerYear: 0,
                    upgradesCycle: 0,
                    energyCosts: 0,
                    rackSpace: 0,
                    networkBandwidth: 0,
                    backupStorage: 0,
                    disasterRecovery: 0
                },
                
                metrics: {
                    deploymentTime: 14,
                    timeToValue: 21,
                    fteRequired: 0.4,
                    mttr: 1,
                    availability: 99.5,
                    scalability: 'Good',
                    performanceImpact: 'Minimal',
                    userSatisfaction: 76,
                    npsScore: 30,
                    supportResponseTime: 30,
                    updateFrequency: 'Continuous',
                    patchingEffort: 'Zero',
                    integrationEffort: 'Low'
                },
                
                security: {
                    zeroTrustScore: 65,
                    deviceAuthMethods: 4,
                    riskAssessmentReal: false,
                    automatedRemediation: false,
                    threatIntelligence: false,
                    behavioralAnalytics: false,
                    microsegmentation: false,
                    encryptionStandards: ['TLS 1.3', 'AES-256'],
                    certifications: ['SOC 2'],
                    vulnerabilityManagement: 'Basic',
                    incidentResponse: 'Manual',
                    forensicsCapability: false,
                    dlpIntegration: false
                },
                
                compliance: {
                    frameworks: {
                        'nist-csf': { coverage: 70, controls: 68 },
                        'pci-dss': { coverage: 72, controls: 9 },
                        'hipaa': { coverage: 68, controls: 35 },
                        'gdpr': { coverage: 74, controls: 22 },
                        'iso27001': { coverage: 71, controls: 78 }
                    }
                },
                
                features: {
                    deviceVisibility: false,
                    deviceProfiling: false,
                    networkAccessControl: true,
                    guestAccess: true,
                    byod: true,
                    iotSupport: false,
                    conditionalAccess: false,
                    applicationControl: false,
                    pkiServices: true,
                    cloudRadius: true,
                    tacacs: false,
                    samlIntegration: true,
                    mfaSupport: true,
                    centralizedManagement: true,
                    multiTenancy: true,
                    roleBasedAccess: true,
                    apiAvailable: true,
                    customIntegrations: false,
                    automatedOnboarding: true,
                    selfServicePortal: true,
                    automatedCompliance: false,
                    workflowAutomation: false
                },
                
                riskReduction: {
                    breachProbabilityReduction: 55,
                    dataExfiltrationPrevention: 60,
                    lateralMovementPrevention: 58,
                    unauthorizedAccessPrevention: 70,
                    malwareSpreadPrevention: 45,
                    insiderThreatMitigation: 50,
                    complianceViolationReduction: 55,
                    shadowITDiscovery: 40,
                    avgBreachCostReduction: 1200000,
                    insurancePremiumReduction: 5,
                    compliancePenaltyAvoidance: 60,
                    operationalLossReduction: 35
                }
            },
            
            'foxpass': {
                name: 'Foxpass',
                shortName: 'Foxpass',
                logo: './img/vendors/foxpass-logo.png',
                color: '#ff4444',
                architecture: 'Cloud',
                deploymentModel: 'SaaS',
                
                pricing: {
                    model: 'subscription',
                    basePrice: 12,
                    minimumDevices: 10,
                    volumeDiscounts: [
                        { min: 10, max: 100, discount: 0 },
                        { min: 101, max: 500, discount: 10 },
                        { min: 501, max: Infinity, discount: 20 }
                    ],
                    includedFeatures: [
                        'Cloud RADIUS',
                        'LDAP',
                        'Basic Auth',
                        'API Access',
                        'Basic Support'
                    ],
                    additionalCosts: [
                        'Enterprise features',
                        'Premium support',
                        'Custom development'
                    ]
                },
                
                costs: {
                    hardware: 0,
                    software: 0,
                    implementation: 5000,
                    training: 2000,
                    support: 0,
                    maintenance: 0,
                    infrastructure: 0,
                    personnelPerYear: 35000,
                    downtimePerYear: 8000,
                    patchingPerYear: 0,
                    upgradesCycle: 0,
                    energyCosts: 0,
                    rackSpace: 0,
                    networkBandwidth: 0,
                    backupStorage: 0,
                    disasterRecovery: 0
                },
                
                metrics: {
                    deploymentTime: 7,
                    timeToValue: 14,
                    fteRequired: 0.35,
                    mttr: 2,
                    availability: 99.0,
                    scalability: 'Good',
                    performanceImpact: 'Minimal',
                    userSatisfaction: 73,
                    npsScore: 25,
                    supportResponseTime: 60,
                    updateFrequency: 'Weekly',
                    patchingEffort: 'Zero',
                    integrationEffort: 'Low'
                },
                
                security: {
                    zeroTrustScore: 55,
                    deviceAuthMethods: 3,
                    riskAssessmentReal: false,
                    automatedRemediation: false,
                    threatIntelligence: false,
                    behavioralAnalytics: false,
                    microsegmentation: false,
                    encryptionStandards: ['TLS 1.2', 'AES-256'],
                    certifications: [],
                    vulnerabilityManagement: 'Basic',
                    incidentResponse: 'Manual',
                    forensicsCapability: false,
                    dlpIntegration: false
                },
                
                compliance: {
                    frameworks: {
                        'nist-csf': { coverage: 65, controls: 60 },
                        'pci-dss': { coverage: 62, controls: 8 },
                        'hipaa': { coverage: 60, controls: 32 },
                        'gdpr': { coverage: 68, controls: 20 },
                        'iso27001': { coverage: 64, controls: 70 }
                    }
                },
                
                features: {
                    deviceVisibility: false,
                    deviceProfiling: false,
                    networkAccessControl: true,
                    guestAccess: false,
                    byod: true,
                    iotSupport: false,
                    conditionalAccess: false,
                    applicationControl: false,
                    pkiServices: false,
                    cloudRadius: true,
                    tacacs: false,
                    samlIntegration: true,
                    mfaSupport: true,
                    centralizedManagement: true,
                    multiTenancy: false,
                    roleBasedAccess: true,
                    apiAvailable: true,
                    customIntegrations: false,
                    automatedOnboarding: false,
                    selfServicePortal: false,
                    automatedCompliance: false,
                    workflowAutomation: false
                },
                
                riskReduction: {
                    breachProbabilityReduction: 48,
                    dataExfiltrationPrevention: 52,
                    lateralMovementPrevention: 50,
                    unauthorizedAccessPrevention: 60,
                    malwareSpreadPrevention: 40,
                    insiderThreatMitigation: 45,
                    complianceViolationReduction: 50,
                    shadowITDiscovery: 35,
                    avgBreachCostReduction: 1000000,
                    insurancePremiumReduction: 4,
                    compliancePenaltyAvoidance: 55,
                    operationalLossReduction: 30
                }
            }
        };
    }
    
    initializeEnhancedIndustryData() {
        return {
            'technology': {
                name: 'Technology & Software',
                riskMultiplier: 1.2,
                complianceWeight: 0.9,
                breachCost: 4350000,
                avgDevices: 2500,
                regulatoryRequirements: ['GDPR', 'CCPA', 'SOX', 'ISO 27001'],
                specificRisks: ['IP theft', 'Data breaches', 'Insider threats', 'Supply chain attacks'],
                nacPriorities: ['Cloud integration', 'API security', 'Developer access', 'Zero trust'],
                typicalArchitecture: 'cloud'
            },
            'healthcare': {
                name: 'Healthcare & Life Sciences',
                riskMultiplier: 1.8,
                complianceWeight: 1.5,
                breachCost: 10930000,
                avgDevices: 1800,
                regulatoryRequirements: ['HIPAA', 'GDPR', 'FDA 21 CFR Part 11', 'HITECH'],
                specificRisks: ['PHI exposure', 'Medical device vulnerabilities', 'Ransomware', 'Third-party access'],
                nacPriorities: ['Medical device security', 'PHI protection', 'Compliance automation', 'Vendor access'],
                typicalArchitecture: 'hybrid'
            },
            'finance': {
                name: 'Financial Services & Banking',
                riskMultiplier: 2.0,
                complianceWeight: 1.8,
                breachCost: 5970000,
                avgDevices: 3200,
                regulatoryRequirements: ['PCI DSS', 'SOX', 'GLBA', 'GDPR', 'NYDFS'],
                specificRisks: ['Financial fraud', 'Account takeover', 'Money laundering', 'Regulatory penalties'],
                nacPriorities: ['Transaction security', 'Privileged access', 'Real-time monitoring', 'Compliance reporting'],
                typicalArchitecture: 'on-premises'
            },
            'government': {
                name: 'Government & Public Sector',
                riskMultiplier: 1.5,
                complianceWeight: 2.0,
                breachCost: 4910000,
                avgDevices: 2800,
                regulatoryRequirements: ['FISMA', 'FedRAMP', 'NIST 800-171', 'CJIS', 'StateRAMP'],
                specificRisks: ['Nation-state attacks', 'Critical infrastructure', 'Citizen data', 'Classified information'],
                nacPriorities: ['Security clearance verification', 'Classified network separation', 'Audit trails', 'Zero trust architecture'],
                typicalArchitecture: 'on-premises'
            },
            'education': {
                name: 'Education & Research',
                riskMultiplier: 1.1,
                complianceWeight: 1.2,
                breachCost: 3860000,
                avgDevices: 1500,
                regulatoryRequirements: ['FERPA', 'COPPA', 'GDPR', 'State privacy laws'],
                specificRisks: ['Student data privacy', 'Research IP theft', 'Campus network abuse', 'BYOD challenges'],
                nacPriorities: ['Student device management', 'Guest access', 'Research data protection', 'Campus-wide visibility'],
                typicalArchitecture: 'hybrid'
            },
            'retail': {
                name: 'Retail & E-commerce',
                riskMultiplier: 1.3,
                complianceWeight: 1.1,
                breachCost: 3280000,
                avgDevices: 2200,
                regulatoryRequirements: ['PCI DSS', 'GDPR', 'CCPA', 'State breach laws'],
                specificRisks: ['Payment card theft', 'POS malware', 'Supply chain attacks', 'Customer data breaches'],
                nacPriorities: ['POS security', 'Store network segmentation', 'Vendor access', 'IoT device management'],
                typicalArchitecture: 'cloud'
            },
            'manufacturing': {
                name: 'Manufacturing & Industrial',
                riskMultiplier: 1.4,
                complianceWeight: 1.0,
                breachCost: 4450000,
                avgDevices: 1900,
                regulatoryRequirements: ['ISO 27001', 'NIST CSF', 'IEC 62443', 'Industry standards'],
                specificRisks: ['OT/IT convergence', 'Industrial espionage', 'Supply chain disruption', 'Safety systems'],
                nacPriorities: ['OT security', 'Segmentation', 'Vendor access', 'Legacy system protection'],
                typicalArchitecture: 'on-premises'
            },
            'energy': {
                name: 'Energy & Utilities',
                riskMultiplier: 1.6,
                complianceWeight: 1.4,
                breachCost: 4650000,
                avgDevices: 2600,
                regulatoryRequirements: ['NERC CIP', 'TSA Pipeline', 'NIST CSF', 'DOE requirements'],
                specificRisks: ['Critical infrastructure attacks', 'SCADA vulnerabilities', 'Physical safety', 'Grid stability'],
                nacPriorities: ['Critical asset protection', 'OT/IT separation', 'Compliance automation', 'Real-time monitoring'],
                typicalArchitecture: 'on-premises'
            },
            'telecommunications': {
                name: 'Telecommunications',
                riskMultiplier: 1.5,
                complianceWeight: 1.3,
                breachCost: 3680000,
                avgDevices: 3500,
                regulatoryRequirements: ['CPNI', 'GDPR', 'FCC regulations', 'CALEA'],
                specificRisks: ['Network infrastructure attacks', 'Customer data breaches', 'Service disruption', 'Espionage'],
                nacPriorities: ['Network infrastructure security', 'Customer data protection', 'Service availability', 'Regulatory compliance'],
                typicalArchitecture: 'hybrid'
            },
            'pharmaceuticals': {
                name: 'Pharmaceuticals & Biotech',
                riskMultiplier: 1.7,
                complianceWeight: 1.6,
                breachCost: 5010000,
                avgDevices: 1600,
                regulatoryRequirements: ['FDA 21 CFR Part 11', 'GDPR', 'HIPAA', 'GxP'],
                specificRisks: ['IP theft', 'Clinical trial data', 'Manufacturing integrity', 'Supply chain'],
                nacPriorities: ['Research data protection', 'Manufacturing security', 'Compliance validation', 'Partner access'],
                typicalArchitecture: 'hybrid'
            }
        };
    }
    
    initializeDetailedComplianceData() {
        return {
            'nist-csf': {
                name: 'NIST Cybersecurity Framework',
                version: '1.1',
                categories: {
                    'identify': {
                        name: 'Identify',
                        functions: ['Asset Management', 'Risk Assessment', 'Governance'],
                        nacControls: [
                            'Automated device discovery and inventory',
                            'Real-time asset visibility',
                            'Risk-based access policies',
                            'Continuous compliance monitoring'
                        ]
                    },
                    'protect': {
                        name: 'Protect',
                        functions: ['Access Control', 'Data Security', 'Protective Technology'],
                        nacControls: [
                            'Zero Trust Network Access',
                            'Multi-factor authentication',
                            'Network segmentation',
                            'Encryption enforcement'
                        ]
                    },
                    'detect': {
                        name: 'Detect',
                        functions: ['Anomalies and Events', 'Continuous Monitoring', 'Detection Processes'],
                        nacControls: [
                            'Behavioral analytics',
                            'Real-time threat detection',
                            'Anomaly detection',
                            'Security event logging'
                        ]
                    },
                    'respond': {
                        name: 'Respond',
                        functions: ['Response Planning', 'Communications', 'Mitigation'],
                        nacControls: [
                            'Automated remediation',
                            'Incident response workflows',
                            'Quarantine capabilities',
                            'Alert management'
                        ]
                    },
                    'recover': {
                        name: 'Recover',
                        functions: ['Recovery Planning', 'Communications'],
                        nacControls: [
                            'Access restoration procedures',
                            'Backup access methods',
                            'Business continuity support'
                        ]
                    }
                }
            },
            'pci-dss': {
                name: 'Payment Card Industry Data Security Standard',
                version: '4.0',
                requirements: {
                    'requirement1': {
                        title: 'Install and maintain network security controls',
                        nacControls: [
                            'Network segmentation between CDE and other networks',
                            'Restrict inbound and outbound traffic',
                            'Document and approve all connections'
                        ]
                    },
                    'requirement2': {
                        title: 'Apply secure configurations',
                        nacControls: [
                            'Change default credentials',
                            'Remove unnecessary services',
                            'Implement security hardening'
                        ]
                    },
                    'requirement7': {
                        title: 'Restrict access by business need-to-know',
                        nacControls: [
                            'Role-based access control',
                            'Least privilege enforcement',
                            'Access approval workflows'
                        ]
                    },
                    'requirement8': {
                        title: 'Identify users and authenticate access',
                        nacControls: [
                            'Unique user identification',
                            'Multi-factor authentication',
                            'Strong password policies'
                        ]
                    },
                    'requirement10': {
                        title: 'Log and monitor all access',
                        nacControls: [
                            'Comprehensive logging',
                            'Log retention and protection',
                            'Daily log review',
                            'Audit trail maintenance'
                        ]
                    }
                }
            },
            'hipaa': {
                name: 'Health Insurance Portability and Accountability Act',
                categories: {
                    'administrative': {
                        title: 'Administrative Safeguards',
                        nacControls: [
                            'Access control management',
                            'Workforce training tracking',
                            'Access authorization procedures',
                            'Audit controls'
                        ]
                    },
                    'physical': {
                        title: 'Physical Safeguards',
                        nacControls: [
                            'Facility access controls',
                            'Workstation security',
                            'Device and media controls'
                        ]
                    },
                    'technical': {
                        title: 'Technical Safeguards',
                        nacControls: [
                            'Unique user identification',
                            'Automatic logoff',
                            'Encryption and decryption',
                            'Audit logs',
                            'Integrity controls',
                            'Transmission security'
                        ]
                    }
                }
            },
            'gdpr': {
                name: 'General Data Protection Regulation',
                principles: {
                    'lawfulness': {
                        title: 'Lawfulness, fairness and transparency',
                        nacControls: [
                            'Consent management',
                            'Purpose limitation enforcement',
                            'Transparent access policies'
                        ]
                    },
                    'minimization': {
                        title: 'Data minimization',
                        nacControls: [
                            'Least privilege access',
                            'Need-to-know enforcement',
                            'Data access restrictions'
                        ]
                    },
                    'security': {
                        title: 'Integrity and confidentiality',
                        nacControls: [
                            'Encryption enforcement',
                            'Access control',
                            'Network security',
                            'Incident detection and response'
                        ]
                    },
                    'accountability': {
                        title: 'Accountability',
                        nacControls: [
                            'Audit logging',
                            'Compliance reporting',
                            'Data processing records',
                            'Access certification'
                        ]
                    }
                },
                rights: {
                    'access': 'Right of access - NAC provides access logs and reports',
                    'rectification': 'Right to rectification - Update user attributes and access',
                    'erasure': 'Right to erasure - Remove user access and logs as required',
                    'portability': 'Data portability - Export access data and configurations'
                }
            },
            'iso27001': {
                name: 'ISO/IEC 27001:2022',
                controls: {
                    'A.5': {
                        title: 'Organizational controls',
                        nacControls: [
                            'Information security policies',
                            'Roles and responsibilities',
                            'Segregation of duties',
                            'Management commitment'
                        ]
                    },
                    'A.6': {
                        title: 'People controls',
                        nacControls: [
                            'Background verification',
                            'Terms and conditions',
                            'Information security awareness',
                            'Access rights management'
                        ]
                    },
                    'A.7': {
                        title: 'Physical controls',
                        nacControls: [
                            'Physical entry controls',
                            'Physical security monitoring',
                            'Protection against threats'
                        ]
                    },
                    'A.8': {
                        title: 'Technological controls',
                        nacControls: [
                            'User endpoint devices',
                            'Privileged access rights',
                            'Information access restriction',
                            'Access control',
                            'Authentication',
                            'Capacity management',
                            'Protection against malware',
                            'Technical vulnerability management',
                            'Configuration management',
                            'Information deletion',
                            'Data masking',
                            'Data leakage prevention',
                            'Information backup',
                            'Redundancy',
                            'Logging and monitoring',
                            'Network security',
                            'Security of applications',
                            'Secure development',
                            'Security testing'
                        ]
                    }
                }
            },
            'sox': {
                name: 'Sarbanes-Oxley Act',
                sections: {
                    'section302': {
                        title: 'Corporate Responsibility',
                        nacControls: [
                            'Access certification',
                            'Segregation of duties',
                            'Audit trails',
                            'Change management'
                        ]
                    },
                    'section404': {
                        title: 'Internal Controls',
                        nacControls: [
                            'Access control documentation',
                            'Control testing evidence',
                            'Continuous monitoring',
                            'Automated compliance reporting'
                        ]
                    }
                }
            },
            'fedramp': {
                name: 'Federal Risk and Authorization Management Program',
                levels: {
                    'low': {
                        controls: 125,
                        nacControls: [
                            'Basic access control',
                            'Authentication',
                            'Audit logging',
                            'Baseline configuration'
                        ]
                    },
                    'moderate': {
                        controls: 325,
                        nacControls: [
                            'Enhanced access control',
                            'Continuous monitoring',
                            'Advanced authentication',
                            'Comprehensive auditing',
                            'Network segmentation'
                        ]
                    },
                    'high': {
                        controls: 421,
                        nacControls: [
                            'Zero trust architecture',
                            'Real-time monitoring',
                            'Advanced threat detection',
                            'Automated response',
                            'Microsegmentation'
                        ]
                    }
                }
            },
            'cmmc': {
                name: 'Cybersecurity Maturity Model Certification',
                levels: {
                    'level1': {
                        title: 'Foundational',
                        practices: 17,
                        nacControls: [
                            'Basic access control',
                            'User identification',
                            'Device identification'
                        ]
                    },
                    'level2': {
                        title: 'Advanced',
                        practices: 110,
                        nacControls: [
                            'Multi-factor authentication',
                            'Least privilege',
                            'Secure configurations',
                            'Audit logging'
                        ]
                    },
                    'level3': {
                        title: 'Expert',
                        practices: 130,
                        nacControls: [
                            'Risk-based access',
                            'Continuous monitoring',
                            'Advanced authentication',
                            'Behavioral analytics'
                        ]
                    }
                }
            },
            'nerc-cip': {
                name: 'NERC Critical Infrastructure Protection',
                standards: {
                    'CIP-004': {
                        title: 'Personnel & Training',
                        nacControls: [
                            'Personnel risk assessment',
                            'Training verification',
                            'Access management',
                            'Quarterly reviews'
                        ]
                    },
                    'CIP-005': {
                        title: 'Electronic Security Perimeters',
                        nacControls: [
                            'Electronic access points',
                            'Perimeter monitoring',
                            'Access control',
                            'Remote access management'
                        ]
                    },
                    'CIP-007': {
                        title: 'System Security Management',
                        nacControls: [
                            'Security patches',
                            'Malware prevention',
                            'Security event monitoring',
                            'System access control'
                        ]
                    }
                }
            }
        };
    }
    
    initializeSecurityControls() {
        return {
            'access-control': {
                name: 'Access Control',
                description: 'Limit information system access to authorized users',
                nacImplementation: {
                    'portnox': {
                        implementation: 'Cloud-based zero trust with continuous verification',
                        effectiveness: 98,
                        features: ['Conditional access', 'Risk-based authentication', 'Real-time policy enforcement']
                    },
                    'cisco': {
                        implementation: 'Policy-based access control with ISE',
                        effectiveness: 85,
                        features: ['802.1X', 'MAB', 'Web authentication']
                    },
                    'others': {
                        implementation: 'Basic network access control',
                        effectiveness: 70,
                        features: ['Standard authentication', 'Static policies']
                    }
                }
            },
            'device-visibility': {
                name: 'Asset Visibility',
                description: 'Maintain inventory of all connected devices',
                nacImplementation: {
                    'portnox': {
                        implementation: 'Agentless discovery with AI-powered profiling',
                        effectiveness: 96,
                        features: ['Real-time discovery', 'Automated classification', 'Risk scoring']
                    },
                    'cisco': {
                        implementation: 'Device profiling with manual classification',
                        effectiveness: 80,
                        features: ['DHCP fingerprinting', 'NMAP scanning', 'Manual updates']
                    },
                    'others': {
                        implementation: 'Basic device discovery',
                        effectiveness: 65,
                        features: ['Periodic scanning', 'Limited profiling']
                    }
                }
            },
            'network-segmentation': {
                name: 'Network Segmentation',
                description: 'Isolate network segments based on risk and function',
                nacImplementation: {
                    'portnox': {
                        implementation: 'Dynamic microsegmentation with zero trust',
                        effectiveness: 95,
                        features: ['User-based segmentation', 'Application-aware policies', 'Dynamic VLANs']
                    },
                    'cisco': {
                        implementation: 'VLAN-based segmentation',
                        effectiveness: 82,
                        features: ['Static VLANs', 'SGT tagging', 'TrustSec']
                    },
                    'others': {
                        implementation: 'Basic VLAN segmentation',
                        effectiveness: 70,
                        features: ['Static VLANs', 'Manual configuration']
                    }
                }
            },
            'continuous-monitoring': {
                name: 'Continuous Monitoring',
                description: 'Monitor and analyze security events in real-time',
                nacImplementation: {
                    'portnox': {
                        implementation: 'AI-driven continuous monitoring and analytics',
                        effectiveness: 94,
                        features: ['Real-time analytics', 'Behavioral analysis', 'Automated alerts']
                    },
                    'cisco': {
                        implementation: 'Event monitoring with manual analysis',
                        effectiveness: 75,
                        features: ['Log collection', 'Basic alerting', 'Manual investigation']
                    },
                    'others': {
                        implementation: 'Basic logging and monitoring',
                        effectiveness: 60,
                        features: ['Event logs', 'Threshold alerts']
                    }
                }
            },
            'incident-response': {
                name: 'Incident Response',
                description: 'Detect, respond to, and recover from security incidents',
                nacImplementation: {
                    'portnox': {
                        implementation: 'Automated response with self-healing capabilities',
                        effectiveness: 92,
                        features: ['Auto-remediation', 'Quarantine', 'Policy adjustment', 'Forensics']
                    },
                    'cisco': {
                        implementation: 'Manual response with CoA support',
                        effectiveness: 70,
                        features: ['Manual quarantine', 'CoA', 'Basic remediation']
                    },
                    'others': {
                        implementation: 'Manual incident handling',
                        effectiveness: 55,
                        features: ['Manual processes', 'Limited automation']
                    }
                }
            }
        };
    }
    
    initializeMitreAttackMapping() {
        return {
            'initial-access': {
                name: 'Initial Access',
                techniques: {
                    'valid-accounts': {
                        name: 'Valid Accounts',
                        mitigation: 'NAC prevents unauthorized use of valid credentials through continuous verification and risk assessment'
                    },
                    'supply-chain': {
                        name: 'Supply Chain Compromise',
                        mitigation: 'NAC controls vendor and partner access with strict policies and monitoring'
                    }
                }
            },
            'lateral-movement': {
                name: 'Lateral Movement',
                techniques: {
                    'remote-services': {
                        name: 'Remote Services',
                        mitigation: 'NAC restricts and monitors all remote access with zero trust policies'
                    },
                    'use-of-credentials': {
                        name: 'Use of Alternate Authentication',
                        mitigation: 'NAC enforces consistent authentication across all access methods'
                    }
                }
            },
            'persistence': {
                name: 'Persistence',
                techniques: {
                    'account-manipulation': {
                        name: 'Account Manipulation',
                        mitigation: 'NAC monitors account changes and enforces access policies'
                    },
                    'implant-container': {
                        name: 'Implant Internal Image',
                        mitigation: 'NAC controls device trust and monitors for unauthorized changes'
                    }
                }
            }
        };
    }
    
    initializeNACFeatures() {
        return {
            'core-features': {
                'device-visibility': {
                    name: 'Device Visibility & Discovery',
                    description: 'Discover and profile all connected devices',
                    businessValue: 'Complete visibility into network assets',
                    vendors: {
                        'portnox': { capability: 98, method: 'Agentless AI-powered discovery' },
                        'cisco': { capability: 85, method: 'DHCP and NMAP profiling' },
                        'forescout': { capability: 90, method: 'Passive and active discovery' },
                        'others': { capability: 70, method: 'Basic discovery methods' }
                    }
                },
                'access-control': {
                    name: 'Network Access Control',
                    description: 'Control who and what can access the network',
                    businessValue: 'Prevent unauthorized access',
                    vendors: {
                        'portnox': { capability: 98, method: 'Cloud-based zero trust' },
                        'cisco': { capability: 88, method: '802.1X and MAB' },
                        'others': { capability: 75, method: 'Traditional NAC' }
                    }
                },
                'guest-management': {
                    name: 'Guest Access Management',
                    description: 'Secure guest and visitor network access',
                    businessValue: 'Provide secure guest access without compromising security',
                    vendors: {
                        'portnox': { capability: 95, method: 'Self-service portal with sponsorship' },
                        'cisco': { capability: 85, method: 'Guest portal with sponsor approval' },
                        'others': { capability: 70, method: 'Basic guest access' }
                    }
                },
                'byod': {
                    name: 'BYOD Support',
                    description: 'Enable secure bring-your-own-device',
                    businessValue: 'Support modern workforce without security risks',
                    vendors: {
                        'portnox': { capability: 96, method: 'Automated onboarding with compliance' },
                        'aruba': { capability: 88, method: 'ClearPass onboarding' },
                        'others': { capability: 70, method: 'Manual BYOD processes' }
                    }
                },
                'iot-security': {
                    name: 'IoT Device Security',
                    description: 'Secure and manage IoT devices',
                    businessValue: 'Enable IoT initiatives securely',
                    vendors: {
                        'portnox': { capability: 92, method: 'AI-powered IoT profiling and segmentation' },
                        'forescout': { capability: 85, method: 'IoT device classification' },
                        'fortinet': { capability: 82, method: 'FortiNAC IoT security' },
                        'others': { capability: 60, method: 'Limited IoT support' }
                    }
                }
            },
            'advanced-features': {
                'conditional-access': {
                    name: 'Conditional Access for Applications',
                    description: 'Control application access based on device compliance',
                    businessValue: 'Extend zero trust to applications',
                    vendors: {
                        'portnox': { capability: 95, method: 'SAML-based conditional access', included: true },
                        'others': { capability: 0, method: 'Not available', included: false }
                    }
                },
                'pki-services': {
                    name: 'PKI Certificate Services',
                    description: 'Automated certificate lifecycle management',
                    businessValue: 'Strong authentication without complexity',
                    vendors: {
                        'portnox': { capability: 94, method: 'Cloud PKI with auto-enrollment', included: true },
                        'cisco': { capability: 80, method: 'Requires separate CA', included: false },
                        'securew2': { capability: 85, method: 'Cloud PKI service', included: true }
                    }
                },
                'cloud-radius': {
                    name: 'Cloud RADIUS',
                    description: 'Cloud-hosted RADIUS authentication',
                    businessValue: 'No infrastructure, global availability',
                    vendors: {
                        'portnox': { capability: 98, method: 'Global cloud RADIUS', included: true },
                        'securew2': { capability: 90, method: 'Cloud RADIUS', included: true },
                        'juniper': { capability: 85, method: 'Mist Edge RADIUS', included: true },
                        'others': { capability: 0, method: 'On-premises only', included: false }
                    }
                },
                'tacacs': {
                    name: 'TACACS+ Services',
                    description: 'Network device administration',
                    businessValue: 'Centralized network device management',
                    vendors: {
                        'portnox': { capability: 92, method: 'Cloud TACACS+', included: true },
                        'cisco': { capability: 95, method: 'ISE TACACS+', included: true },
                        'others': { capability: 0, method: 'Not available', included: false }
                    }
                },
                'risk-assessment': {
                    name: 'Continuous Risk Assessment',
                    description: 'Real-time device and user risk scoring',
                    businessValue: 'Proactive security posture',
                    vendors: {
                        'portnox': { capability: 93, method: 'AI-driven risk scoring', included: true },
                        'forescout': { capability: 80, method: 'Policy-based risk', included: true },
                        'others': { capability: 50, method: 'Basic risk assessment', included: false }
                    }
                }
            }
        };
    }
    
    // Calculate real-time TCO based on configuration
    calculateRealTimeTCO(vendorId) {
        const vendor = this.vendorData[vendorId];
        if (!vendor) return null;
        
        const years = this.config.analysisPeriod;
        const devices = this.config.deviceCount;
        
        let tco = {
            capex: 0,
            opex: 0,
            year1: 0,
            year3: 0,
            year5: 0,
            monthly: 0,
            perDevice: 0,
            breakdown: {}
        };
        
        // Calculate based on pricing model
        if (vendor.pricing.model === 'subscription') {
            // Calculate subscription costs
            const basePrice = this.getVolumePrice(vendor, devices);
            const monthlyLicense = basePrice * devices;
            const yearlyLicense = monthlyLicense * 12;
            
            tco.breakdown.subscription = yearlyLicense * years;
            tco.opex = yearlyLicense;
            tco.monthly = monthlyLicense;
            
            // One-time costs
            tco.breakdown.implementation = vendor.costs.implementation;
            tco.breakdown.training = vendor.costs.training;
            tco.capex = tco.breakdown.implementation + tco.breakdown.training;
            
        } else if (vendor.pricing.model === 'perpetual') {
            // Perpetual license costs
            const basePrice = this.getVolumePrice(vendor, devices);
            const licenseCost = basePrice * devices;
            
            tco.breakdown.software = licenseCost;
            tco.breakdown.hardware = this.scaleHardwareCost(vendor.costs.hardware, devices);
            tco.breakdown.implementation = vendor.costs.implementation;
            tco.breakdown.training = vendor.costs.training;
            
            tco.capex = tco.breakdown.software + tco.breakdown.hardware + 
                        tco.breakdown.implementation + tco.breakdown.training;
            
            // Annual costs
            tco.breakdown.support = vendor.costs.support * years;
            tco.breakdown.maintenance = vendor.costs.maintenance * years;
            tco.opex = (vendor.costs.support + vendor.costs.maintenance) / years;
        }
        
        // Common operational costs
        tco.breakdown.personnel = vendor.costs.personnelPerYear * years;
        tco.breakdown.downtime = vendor.costs.downtimePerYear * years;
        tco.breakdown.infrastructure = (vendor.costs.infrastructure || 0) * years;
        tco.breakdown.energy = (vendor.costs.energyCosts || 0) * years;
        
        // Calculate totals
        tco.year1 = tco.capex + tco.opex + vendor.costs.personnelPerYear + 
                    vendor.costs.downtimePerYear + (vendor.costs.infrastructure || 0);
        
        tco.year3 = tco.capex + (tco.opex * 3) + (vendor.costs.personnelPerYear * 3) + 
                    (vendor.costs.downtimePerYear * 3) + ((vendor.costs.infrastructure || 0) * 3);
        
        tco.year5 = tco.capex + (tco.opex * 5) + (vendor.costs.personnelPerYear * 5) + 
                    (vendor.costs.downtimePerYear * 5) + ((vendor.costs.infrastructure || 0) * 5);
        
        tco.perDevice = tco.year3 / devices / 3;
        
        return tco;
    }
    
    getVolumePrice(vendor, deviceCount) {
        const basePrice = vendor.pricing.basePrice;
        const discounts = vendor.pricing.volumeDiscounts;
        
        if (!discounts || discounts.length === 0) return basePrice;
        
        const tier = discounts.find(d => deviceCount >= d.min && deviceCount <= d.max);
        if (tier) {
            return basePrice * (1 - tier.discount / 100);
        }
        
        return basePrice;
    }
    
    scaleHardwareCost(baseCost, devices) {
        // Scale hardware costs based on device count
        // Assuming base cost is for 300 devices
        const scaleFactor = devices / 300;
        return Math.round(baseCost * scaleFactor);
    }
    
    calculateROI(vendorId) {
        const vendor = this.vendorData[vendorId];
        const tco = this.calculateRealTimeTCO(vendorId);
        const industry = this.industryData[this.config.industry];
        
        if (!vendor || !tco) return null;
        
        const roi = {
            breachRiskReduction: 0,
            operationalSavings: 0,
            complianceSavings: 0,
            insuranceSavings: 0,
            productivityGains: 0,
            totalBenefit: 0,
            netBenefit: 0,
            roiPercentage: 0,
            paybackMonths: 0
        };
        
        // Calculate risk reduction benefit
        const breachProbability = 0.28; // 28% annual breach probability
        const riskReduction = vendor.riskReduction.breachProbabilityReduction / 100;
        roi.breachRiskReduction = industry.breachCost * breachProbability * riskReduction * this.config.analysisPeriod;
        
        // Calculate operational savings (vs. average competitor)
        const competitorAvg = this.calculateAverageCompetitorTCO();
        roi.operationalSavings = Math.max(0, competitorAvg - tco.year3);
        
        // Calculate compliance savings
        const compliancePenaltyRisk = 500000; // Average compliance penalty
        const complianceReduction = vendor.riskReduction.complianceViolationReduction / 100;
        roi.complianceSavings = compliancePenaltyRisk * complianceReduction * this.config.analysisPeriod;
        
        // Calculate insurance premium reduction
        const currentPremium = this.config.insurancePremium;
        const premiumReduction = vendor.riskReduction.insurancePremiumReduction / 100;
        roi.insuranceSavings = currentPremium * premiumReduction * this.config.analysisPeriod;
        
        // Calculate productivity gains
        const downtimeReduction = (competitorAvg - tco.year3) > 0 ? 0.5 : 0; // 50% downtime reduction
        const productivityValue = this.config.downtimeCost * 8 * 20; // Hours per month
        roi.productivityGains = productivityValue * downtimeReduction * 12 * this.config.analysisPeriod;
        
        // Calculate totals
        roi.totalBenefit = roi.breachRiskReduction + roi.operationalSavings + 
                          roi.complianceSavings + roi.insuranceSavings + roi.productivityGains;
        
        roi.netBenefit = roi.totalBenefit - tco.year3;
        roi.roiPercentage = Math.round((roi.netBenefit / tco.year3) * 100);
        roi.paybackMonths = Math.round((tco.year1 / (roi.totalBenefit / this.config.analysisPeriod)) * 12);
        
        return roi;
    }
    
    calculateAverageCompetitorTCO() {
        const competitors = Object.keys(this.vendorData)
            .filter(id => id !== 'portnox')
            .map(id => this.calculateRealTimeTCO(id))
            .filter(tco => tco !== null);
        
        if (competitors.length === 0) return 0;
        
        const total = competitors.reduce((sum, tco) => sum + tco.year3, 0);
        return Math.round(total / competitors.length);
    }
    
    // Initialize the platform
    init() {
        if (this.initialized) return this;
        
        console.log("🚀 Initializing Enhanced Zero Trust Executive Platform...");
        
        try {
            this.createPlatformStructure();
            this.bindEventListeners();
            this.loadInitialData();
            this.createInitialCharts();
            
            // Less aggressive debugging - only log errors
            if (this.debugMode) {
                console.log("✅ Platform initialized with debugging enabled");
            }
            
            this.initialized = true;
            
            // Hide loading indicator
            const loadingElement = document.querySelector('.initial-loading');
            if (loadingElement) {
                loadingElement.style.display = 'none';
            }
            
            console.log("✅ Zero Trust Executive Platform ready");
            return this;
            
        } catch (error) {
            console.error("❌ Platform initialization failed:", error);
            this.showErrorMessage("Platform initialization failed. Please refresh the page.");
            return null;
        }
    }
    
    // Create the platform UI structure
    createPlatformStructure() {
        const container = document.querySelector('#executive-view .view-content');
        if (!container) return;
        
        container.innerHTML = `
            <div class="executive-command-center fade-in">
                <!-- Header Section -->
                <div class="command-header">
                    <div class="executive-branding">
                        <img src="./img/vendors/portnox-logo.png" alt="Portnox" class="brand-logo">
                        <div class="brand-text">
                            <h1>Zero Trust NAC Executive Intelligence Platform</h1>
                            <p>Comprehensive Total Cost Analysis & Strategic Decision Support</p>
                        </div>
                    </div>
                    <div class="command-actions">
                        <button class="cmd-btn primary" id="calculate-btn">
                            <i class="fas fa-calculator"></i> Calculate Analysis
                        </button>
                        <button class="cmd-btn secondary" id="export-executive">
                            <i class="fas fa-file-export"></i> Export Report
                        </button>
                        <button class="cmd-btn utility" id="reset-analysis">
                            <i class="fas fa-redo"></i> Reset
                        </button>
                    </div>
                </div>
                
                <!-- Configuration Section -->
                <div class="configuration-section">
                    <h2 class="section-title">
                        <i class="fas fa-cogs"></i>
                        Analysis Configuration
                    </h2>
                    
                    <div class="config-grid">
                        <!-- Vendor Selection -->
                        <div class="config-card">
                            <h3>Select NAC Vendors for Comparison</h3>
                            <div class="vendor-selection-grid">
                                ${this.createVendorSelectionGrid()}
                            </div>
                            <div class="vendor-summary">
                                <span class="selected-count">${this.selectedVendors.length}</span> vendors selected
                                <button class="btn-link" id="select-all-vendors">Select All</button>
                                <button class="btn-link" id="select-cloud-only">Cloud Only</button>
                            </div>
                        </div>
                        
                        <!-- Organization Configuration -->
                        <div class="config-card">
                            <h3>Organization Profile</h3>
                            <div class="form-grid">
                                <div class="form-group">
                                    <label>Industry</label>
                                    <select id="industry-select" class="form-control">
                                        ${Object.entries(this.industryData).map(([key, data]) => 
                                            `<option value="${key}" ${key === this.config.industry ? 'selected' : ''}>${data.name}</option>`
                                        ).join('')}
                                    </select>
                                </div>
                                
                                <div class="form-group">
                                    <label>Device Count</label>
                                    <input type="number" id="device-count" class="form-control" 
                                           value="${this.config.deviceCount}" min="10" max="100000">
                                    <small>Minimum purchase: Varies by vendor</small>
                                </div>
                                
                                <div class="form-group">
                                    <label>Analysis Period</label>
                                    <select id="analysis-period" class="form-control">
                                        <option value="1">1 Year</option>
                                        <option value="3" selected>3 Years</option>
                                        <option value="5">5 Years</option>
                                    </select>
                                </div>
                                
                                <div class="form-group">
                                    <label>Deployment Preference</label>
                                    <select id="deployment-type" class="form-control">
                                        <option value="cloud">Cloud-First</option>
                                        <option value="hybrid">Hybrid</option>
                                        <option value="on-premises">On-Premises</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Compliance Requirements -->
                        <div class="config-card">
                            <h3>Compliance Requirements</h3>
                            <div class="compliance-selection">
                                ${this.createComplianceSelection()}
                            </div>
                        </div>
                        
                        <!-- Advanced Settings -->
                        <div class="config-card">
                            <h3>Cost Parameters</h3>
                            <div class="form-grid">
                                <div class="form-group">
                                    <label>Average FTE Cost ($/year)</label>
                                    <input type="number" id="fte-cost" class="form-control" 
                                           value="${this.config.fteCost}" min="50000" max="200000">
                                </div>
                                
                                <div class="form-group">
                                    <label>Potential Breach Cost ($)</label>
                                    <input type="number" id="breach-cost" class="form-control" 
                                           value="${this.config.breachCost}" min="100000" max="20000000">
                                </div>
                                
                                <div class="form-group">
                                    <label>Downtime Cost ($/hour)</label>
                                    <input type="number" id="downtime-cost" class="form-control" 
                                           value="${this.config.downtimeCost}" min="1000" max="50000">
                                </div>
                                
                                <div class="form-group">
                                    <label>Cyber Insurance Premium ($/year)</label>
                                    <input type="number" id="insurance-premium" class="form-control" 
                                           value="${this.config.insurancePremium}" min="10000" max="500000">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Results Section -->
                <div class="results-section" id="results-section" style="display: none;">
                    <!-- Executive Summary KPIs -->
                    <div class="executive-kpis" id="executive-kpis"></div>
                    
                    <!-- Analysis Tabs -->
                    <div class="analysis-tabs">
                        <div class="tab-navigation">
                            <button class="tab-btn active" data-tab="overview">
                                <i class="fas fa-chart-line"></i> Executive Overview
                            </button>
                            <button class="tab-btn" data-tab="financial">
                                <i class="fas fa-dollar-sign"></i> Financial Analysis
                            </button>
                            <button class="tab-btn" data-tab="security">
                                <i class="fas fa-shield-alt"></i> Security & Risk
                            </button>
                            <button class="tab-btn" data-tab="compliance">
                                <i class="fas fa-clipboard-check"></i> Compliance Coverage
                            </button>
                            <button class="tab-btn" data-tab="features">
                                <i class="fas fa-list-check"></i> Feature Comparison
                            </button>
                            <button class="tab-btn" data-tab="implementation">
                                <i class="fas fa-rocket"></i> Implementation
                            </button>
                        </div>
                        
                        <div class="tab-content">
                            <!-- Overview Tab -->
                            <div class="tab-panel active" data-panel="overview">
                                <div class="panel-content" id="overview-content"></div>
                            </div>
                            
                            <!-- Financial Tab -->
                            <div class="tab-panel" data-panel="financial">
                                <div class="panel-content" id="financial-content"></div>
                            </div>
                            
                            <!-- Security Tab -->
                            <div class="tab-panel" data-panel="security">
                                <div class="panel-content" id="security-content"></div>
                            </div>
                            
                            <!-- Compliance Tab -->
                            <div class="tab-panel" data-panel="compliance">
                                <div class="panel-content" id="compliance-content"></div>
                            </div>
                            
                            <!-- Features Tab -->
                            <div class="tab-panel" data-panel="features">
                                <div class="panel-content" id="features-content"></div>
                            </div>
                            
                            <!-- Implementation Tab -->
                            <div class="tab-panel" data-panel="implementation">
                                <div class="panel-content" id="implementation-content"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }
    
    createVendorSelectionGrid() {
        return Object.entries(this.vendorData).map(([vendorId, vendor]) => {
            const isSelected = this.selectedVendors.includes(vendorId);
            const isPortnox = vendorId === "portnox";
            return `
                <div class="vendor-select-card ${isSelected ? "selected" : ""}" data-vendor="${vendorId}">
                    <img src="${vendor.logo}" alt="${vendor.name}" class="vendor-logo-sm">
                    <div class="vendor-name-sm">${vendor.shortName}</div>
                    ${isPortnox ? '<span class="recommended-badge">Recommended</span>' : ""}
                </div>
            `;
        }).join("");
    }
    
    createComplianceSelection() {
        return Object.entries(this.complianceData).map(([compId, comp]) => {
            const isSelected = this.config.complianceFrameworks.includes(compId);
            return `
                <label class="compliance-checkbox">
                    <input type="checkbox" value="${compId}" ${isSelected ? 'checked' : ''}>
                    <span class="checkbox-label">${comp.name}</span>
                </label>
            `;
        }).join('');
    }
    
    bindEventListeners() {
        // Vendor selection
        document.addEventListener('click', (e) => {
            if (e.target.closest('.vendor-select-card')) {
                const card = e.target.closest('.vendor-select-card');
                const vendorId = card.dataset.vendor;
                this.toggleVendorSelection(vendorId);
            }
        });
        
        // Select all vendors
        document.getElementById('select-all-vendors')?.addEventListener('click', () => {
            this.selectedVendors = Object.keys(this.vendorData);
            this.updateVendorSelection();
        });
        
        // Select cloud only
        document.getElementById('select-cloud-only')?.addEventListener('click', () => {
            this.selectedVendors = Object.entries(this.vendorData)
                .filter(([id, vendor]) => vendor.architecture === 'Cloud-Native' || vendor.architecture === 'Cloud')
                .map(([id]) => id);
            this.updateVendorSelection();
        });
        
        // Calculate button
        document.getElementById('calculate-btn')?.addEventListener('click', () => {
            this.performCalculations();
        });
        
        // Export button
        document.getElementById('export-executive')?.addEventListener('click', () => {
            this.exportReport();
        });
        
        // Reset button
        document.getElementById('reset-analysis')?.addEventListener('click', () => {
            this.resetAnalysis();
        });
        
        // Tab navigation
        document.addEventListener('click', (e) => {
            if (e.target.closest('.tab-btn')) {
                const tab = e.target.closest('.tab-btn');
                this.switchTab(tab.dataset.tab);
            }
        });
        
        // Configuration changes
        const configInputs = document.querySelectorAll('.form-control');
        configInputs.forEach(input => {
            input.addEventListener('change', () => {
                this.updateConfiguration();
            });
        });
        
        // Compliance checkboxes
        document.addEventListener('change', (e) => {
            if (e.target.closest('.compliance-checkbox input')) {
                this.updateComplianceSelection();
            }
        });
    }
    
    toggleVendorSelection(vendorId) {
        const index = this.selectedVendors.indexOf(vendorId);
        if (index > -1) {
            this.selectedVendors.splice(index, 1);
        } else {
            this.selectedVendors.push(vendorId);
        }
        this.updateVendorSelection();
    }
    
    updateVendorSelection() {
        document.querySelectorAll('.vendor-select-card').forEach(card => {
            const vendorId = card.dataset.vendor;
            if (this.selectedVendors.includes(vendorId)) {
                card.classList.add('selected');
            } else {
                card.classList.remove('selected');
            }
        });
        
        const countElement = document.querySelector('.selected-count');
        if (countElement) {
            countElement.textContent = this.selectedVendors.length;
        }
    }
    
    updateConfiguration() {
        this.config.industry = document.getElementById('industry-select')?.value || 'technology';
        this.config.deviceCount = parseInt(document.getElementById('device-count')?.value) || 300;
        this.config.analysisPeriod = parseInt(document.getElementById('analysis-period')?.value) || 3;
        this.config.deploymentType = document.getElementById('deployment-type')?.value || 'cloud';
        this.config.fteCost = parseInt(document.getElementById('fte-cost')?.value) || 85000;
        this.config.breachCost = parseInt(document.getElementById('breach-cost')?.value) || 4350000;
        this.config.downtimeCost = parseInt(document.getElementById('downtime-cost')?.value) || 5000;
        this.config.insurancePremium = parseInt(document.getElementById('insurance-premium')?.value) || 50000;
    }
    
    updateComplianceSelection() {
        const selectedCompliance = [];
        document.querySelectorAll('.compliance-checkbox input:checked').forEach(checkbox => {
            selectedCompliance.push(checkbox.value);
        });
        this.config.complianceFrameworks = selectedCompliance;
    }
    
    performCalculations() {
        console.log("🧮 Performing comprehensive calculations...");
        
        if (this.selectedVendors.length === 0) {
            this.showNotification('Please select at least one vendor for comparison', 'warning');
            return;
        }
        
        this.updateConfiguration();
        this.updateComplianceSelection();
        
        this.calculationCache = {};
        
        document.getElementById('results-section').style.display = 'block';
        
        this.generateExecutiveKPIs();
        this.refreshCurrentTab();
        
        document.getElementById('results-section').scrollIntoView({ behavior: 'smooth' });
        
        this.showNotification('Analysis completed successfully!', 'success');
    }
    
    generateExecutiveKPIs() {
        const container = document.getElementById('executive-kpis');
        if (!container) return;
        
        const portnoxTCO = this.calculateRealTimeTCO('portnox');
        const competitorAvg = this.calculateAverageCompetitorTCO();
        const portnoxROI = this.calculateROI('portnox');
        
        const savings = competitorAvg - (portnoxTCO?.year3 || 0);
        const savingsPercent = Math.round((savings / competitorAvg) * 100);
        
        container.innerHTML = `
            <h2 class="section-title">
                <i class="fas fa-chart-line"></i>
                Executive Summary - Key Performance Indicators
            </h2>
            
            <div class="kpi-grid">
                <div class="kpi-card highlight">
                    <div class="kpi-icon"><i class="fas fa-piggy-bank"></i></div>
                    <div class="kpi-content">
                        <div class="kpi-value">$${(savings / 1000).toFixed(0)}K</div>
                        <div class="kpi-label">Total Savings vs Competition</div>
                        <div class="kpi-detail">${savingsPercent}% cost reduction over ${this.config.analysisPeriod} years</div>
                    </div>
                </div>
                
                <div class="kpi-card">
                    <div class="kpi-icon"><i class="fas fa-chart-line"></i></div>
                    <div class="kpi-content">
                        <div class="kpi-value">${portnoxROI?.roiPercentage || 0}%</div>
                        <div class="kpi-label">Return on Investment</div>
                        <div class="kpi-detail">${portnoxROI?.paybackMonths || 0} month payback period</div>
                    </div>
                </div>
                
                <div class="kpi-card">
                    <div class="kpi-icon"><i class="fas fa-shield-check"></i></div>
                    <div class="kpi-content">
                        <div class="kpi-value">${this.vendorData.portnox.riskReduction.breachProbabilityReduction}%</div>
                        <div class="kpi-label">Risk Reduction</div>
                        <div class="kpi-detail">Breach probability reduction</div>
                    </div>
                </div>
                
                <div class="kpi-card">
                    <div class="kpi-icon"><i class="fas fa-rocket"></i></div>
                    <div class="kpi-content">
                        <div class="kpi-value">${this.vendorData.portnox.metrics.deploymentTime}</div>
                        <div class="kpi-label">Days to Deploy</div>
                        <div class="kpi-detail">Fastest implementation time</div>
                    </div>
                </div>
            </div>
        `;
    }
    
    refreshCurrentTab() {
        this.switchTab(this.currentTab);
    }
    
    switchTab(tabId) {
        this.currentTab = tabId;
        
        // Update active tab
        document.querySelectorAll('.tab-btn').forEach(btn => {
            btn.classList.remove('active');
        });
        document.querySelector(`[data-tab="${tabId}"]`)?.classList.add('active');
        
        // Update active panel
        document.querySelectorAll('.tab-panel').forEach(panel => {
            panel.classList.remove('active');
        });
        document.querySelector(`[data-panel="${tabId}"]`)?.classList.add('active');
        
        // Generate content for the selected tab
        switch(tabId) {
            case 'overview':
                this.generateOverviewContent();
                break;
            case 'financial':
                this.generateFinancialContent();
                break;
            case 'security':
                this.generateSecurityContent();
                break;
            case 'compliance':
                this.generateComplianceContent();
                break;
            case 'features':
                this.generateFeaturesContent();
                break;
            case 'implementation':
                this.generateImplementationContent();
                break;
        }
    }
    
    generateOverviewContent() {
        const container = document.getElementById('overview-content');
        if (!container) return;
        
        container.innerHTML = `
            <div class="overview-section">
                <h3>Total Cost of Ownership Comparison</h3>
                <div class="chart-container">
                    <canvas id="tco-comparison-chart"></canvas>
                </div>
                
                <h3>Return on Investment Analysis</h3>
                <div class="chart-container">
                    <canvas id="roi-analysis-chart"></canvas>
                </div>
                
                <h3>Executive Decision Matrix</h3>
                <div class="decision-matrix">
                    ${this.generateDecisionMatrix()}
                </div>
            </div>
        `;
        
        this.createTCOComparisonChart();
        this.createROIAnalysisChart();
    }
    
    generateFinancialContent() {
        const container = document.getElementById('financial-content');
        if (!container) return;
        
        container.innerHTML = `
            <div class="financial-section">
                <h3>Detailed Cost Breakdown</h3>
                <div class="cost-breakdown-table">
                    ${this.generateCostBreakdownTable()}
                </div>
            </div>
        `;
    }
    
    generateSecurityContent() {
        const container = document.getElementById('security-content');
        if (!container) return;
        
        container.innerHTML = `
            <div class="security-section">
                <h3>Security Capabilities Comparison</h3>
                <div class="chart-container">
                    <canvas id="security-radar-chart"></canvas>
                </div>
                
                <h3>Risk Reduction Analysis</h3>
                <div class="risk-matrix">
                    ${this.generateRiskReductionMatrix()}
                </div>
            </div>
        `;
        
        this.createSecurityRadarChart();
    }
    
    generateComplianceContent() {
        const container = document.getElementById('compliance-content');
        if (!container) return;
        
        container.innerHTML = `
            <div class="compliance-section">
                <h3>Compliance Framework Coverage</h3>
                <div class="compliance-heatmap">
                    ${this.generateComplianceHeatmap()}
                </div>
            </div>
        `;
    }
    
    generateFeaturesContent() {
        const container = document.getElementById('features-content');
        if (!container) return;
        
        container.innerHTML = `
            <div class="features-section">
                <h3>Feature Comparison Matrix</h3>
                <div class="features-matrix">
                    ${this.generateFeaturesMatrix()}
                </div>
            </div>
        `;
    }
    
    generateImplementationContent() {
        const container = document.getElementById('implementation-content');
        if (!container) return;
        
        container.innerHTML = `
            <div class="implementation-section">
                <h3>Implementation Timeline</h3>
                <div class="chart-container">
                    <canvas id="implementation-timeline-chart"></canvas>
                </div>
            </div>
        `;
        
        this.createImplementationTimelineChart();
    }
    
    // Chart creation methods
    createTCOComparisonChart() {
        const ctx = document.getElementById('tco-comparison-chart')?.getContext('2d');
        if (!ctx) return;
        
        const data = this.selectedVendors.map(vendorId => {
            const vendor = this.vendorData[vendorId];
            const tco = this.calculateRealTimeTCO(vendorId);
            return {
                vendor: vendor.shortName,
                tco: tco?.year3 || 0,
                color: vendor.color
            };
        });
        
        data.sort((a, b) => a.tco - b.tco);
        
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: data.map(d => d.vendor),
                datasets: [{
                    label: '3-Year TCO',
                    data: data.map(d => d.tco),
                    backgroundColor: data.map(d => d.color),
                    borderColor: data.map(d => d.color),
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    title: {
                        display: true,
                        text: `Total Cost of Ownership - ${this.config.deviceCount} Devices Over ${this.config.analysisPeriod} Years`
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: (value) => '$' + (value / 1000).toFixed(0) + 'K'
                        }
                    }
                }
            }
        });
    }
    
    createROIAnalysisChart() {
        const ctx = document.getElementById('roi-analysis-chart')?.getContext('2d');
        if (!ctx) return;
        
        const data = this.selectedVendors.map(vendorId => {
            const vendor = this.vendorData[vendorId];
            const roi = this.calculateROI(vendorId);
            return {
                vendor: vendor.shortName,
                roi: roi?.roiPercentage || 0,
                color: vendor.color
            };
        });
        
        data.sort((a, b) => b.roi - a.roi);
        
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: data.map(d => d.vendor),
                datasets: [{
                    label: 'ROI %',
                    data: data.map(d => d.roi),
                    backgroundColor: data.map(d => d.color + '80'),
                    borderColor: data.map(d => d.color),
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    title: {
                        display: true,
                        text: 'Return on Investment Comparison'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: (value) => value + '%'
                        }
                    }
                }
            }
        });
    }
    
    createSecurityRadarChart() {
        const ctx = document.getElementById('security-radar-chart')?.getContext('2d');
        if (!ctx) return;
        
        const categories = ['Zero Trust Score', 'Device Auth', 'Risk Assessment', 'Auto Remediation', 'Threat Intel'];
        
        const datasets = this.selectedVendors.map(vendorId => {
            const vendor = this.vendorData[vendorId];
            const security = vendor.security;
            
            return {
                label: vendor.shortName,
                data: [
                    security.zeroTrustScore || 0,
                    security.deviceAuthMethods ? security.deviceAuthMethods * 10 : 0,
                    security.riskAssessmentReal ? 90 : 50,
                    security.automatedRemediation ? 90 : 40,
                    security.threatIntelligence ? 85 : 30
                ],
                borderColor: vendor.color,
                backgroundColor: vendor.color + '40'
            };
        });
        
        new Chart(ctx, {
            type: 'radar',
            data: {
                labels: categories,
                datasets: datasets
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    r: {
                        beginAtZero: true,
                        max: 100
                    }
                }
            }
        });
    }
    
    createImplementationTimelineChart() {
        const ctx = document.getElementById('implementation-timeline-chart')?.getContext('2d');
        if (!ctx) return;
        
        const data = this.selectedVendors.map(vendorId => {
            const vendor = this.vendorData[vendorId];
            return {
                vendor: vendor.shortName,
                deployment: vendor.metrics.deploymentTime,
                timeToValue: vendor.metrics.timeToValue,
                color: vendor.color
            };
        });
        
        data.sort((a, b) => a.deployment - b.deployment);
        
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: data.map(d => d.vendor),
                datasets: [{
                    label: 'Days to Deploy',
                    data: data.map(d => d.deployment),
                    backgroundColor: data.map(d => d.color),
                    borderColor: data.map(d => d.color),
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Days'
                        }
                    }
                }
            }
        });
    }
    
    // Table generation methods
    generateDecisionMatrix() {
        return `<table class="decision-matrix-table">
            <thead>
                <tr>
                    <th>Vendor</th>
                    <th>3-Year TCO</th>
                    <th>ROI %</th>
                    <th>Deploy Time</th>
                    <th>Risk Reduction</th>
                    <th>Score</th>
                </tr>
            </thead>
            <tbody>
                ${this.selectedVendors.map(vendorId => {
                    const vendor = this.vendorData[vendorId];
                    const tco = this.calculateRealTimeTCO(vendorId);
                    const roi = this.calculateROI(vendorId);
                    
                    return `
                        <tr class="${vendorId === 'portnox' ? 'highlight-row' : ''}">
                            <td>${vendor.shortName}</td>
                            <td>$${(tco.year3 / 1000).toFixed(0)}K</td>
                            <td>${roi?.roiPercentage || 0}%</td>
                            <td>${vendor.metrics.deploymentTime} days</td>
                            <td>${vendor.riskReduction.breachProbabilityReduction}%</td>
                            <td>${this.calculateVendorScore(vendorId)}</td>
                        </tr>
                    `;
                }).join('')}
            </tbody>
        </table>`;
    }
    
    generateCostBreakdownTable() {
        return `<table class="cost-breakdown-table">
            <thead>
                <tr>
                    <th>Cost Category</th>
                    ${this.selectedVendors.map(vendorId => 
                        `<th>${this.vendorData[vendorId].shortName}</th>`
                    ).join('')}
                </tr>
            </thead>
            <tbody>
                ${this.generateCostRows()}
            </tbody>
        </table>`;
    }
    
    generateCostRows() {
        const categories = [
            { key: 'hardware', label: 'Hardware' },
            { key: 'software', label: 'Software' },
            { key: 'implementation', label: 'Implementation' },
            { key: 'personnel', label: 'Personnel' },
            { key: 'downtime', label: 'Downtime' }
        ];
        
        return categories.map(category => {
            return `<tr>
                <td>${category.label}</td>
                ${this.selectedVendors.map(vendorId => {
                    const tco = this.calculateRealTimeTCO(vendorId);
                    const value = tco?.breakdown[category.key] || 0;
                    return `<td>$${(value / 1000).toFixed(0)}K</td>`;
                }).join('')}
            </tr>`;
        }).join('');
    }
    
    generateRiskReductionMatrix() {
        return `<table class="risk-matrix-table">
            <thead>
                <tr>
                    <th>Risk Type</th>
                    ${this.selectedVendors.map(vendorId => 
                        `<th>${this.vendorData[vendorId].shortName}</th>`
                    ).join('')}
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Breach Probability</td>
                    ${this.selectedVendors.map(vendorId => 
                        `<td>${this.vendorData[vendorId].riskReduction.breachProbabilityReduction}%</td>`
                    ).join('')}
                </tr>
                <tr>
                    <td>Data Exfiltration</td>
                    ${this.selectedVendors.map(vendorId => 
                        `<td>${this.vendorData[vendorId].riskReduction.dataExfiltrationPrevention}%</td>`
                    ).join('')}
                </tr>
                <tr>
                    <td>Lateral Movement</td>
                    ${this.selectedVendors.map(vendorId => 
                        `<td>${this.vendorData[vendorId].riskReduction.lateralMovementPrevention}%</td>`
                    ).join('')}
                </tr>
            </tbody>
        </table>`;
    }
    
    generateComplianceHeatmap() {
        return `<table class="compliance-heatmap-table">
            <thead>
                <tr>
                    <th>Framework</th>
                    ${this.selectedVendors.map(vendorId => 
                        `<th>${this.vendorData[vendorId].shortName}</th>`
                    ).join('')}
                </tr>
            </thead>
            <tbody>
                ${Object.entries(this.complianceData).map(([compId, comp]) => {
                    return `<tr>
                        <td>${comp.name}</td>
                        ${this.selectedVendors.map(vendorId => {
                            const coverage = this.vendorData[vendorId].compliance.frameworks[compId]?.coverage || 0;
                            const cellClass = coverage >= 90 ? 'excellent' :
                                            coverage >= 80 ? 'very-good' :
                                            coverage >= 70 ? 'good' : 'moderate';
                            return `<td class="${cellClass}">${coverage}%</td>`;
                        }).join('')}
                    </tr>`;
                }).join('')}
            </tbody>
        </table>`;
    }
    
    generateFeaturesMatrix() {
        const features = Object.entries(this.features['core-features']);
        
        return `<table class="features-matrix-table">
            <thead>
                <tr>
                    <th>Feature</th>
                    ${this.selectedVendors.map(vendorId => 
                        `<th>${this.vendorData[vendorId].shortName}</th>`
                    ).join('')}
                </tr>
            </thead>
            <tbody>
                ${features.map(([featureId, feature]) => {
                    return `<tr>
                        <td>${feature.name}</td>
                        ${this.selectedVendors.map(vendorId => {
                            const vendorFeature = this.vendorData[vendorId].features[featureId];
                            return `<td class="${vendorFeature ? 'has-feature' : 'no-feature'}">
                                ${vendorFeature ? '✓' : '✗'}
                            </td>`;
                        }).join('')}
                    </tr>`;
                }).join('')}
            </tbody>
        </table>`;
    }
    
    calculateVendorScore(vendorId) {
        const vendor = this.vendorData[vendorId];
        const tco = this.calculateRealTimeTCO(vendorId);
        const roi = this.calculateROI(vendorId);
        
        // Weighted scoring
        const tcoScore = 100 - (tco.year3 / 10000); // Normalize
        const roiScore = Math.min(100, (roi.roiPercentage + 100) / 4);
        const deployScore = 100 - vendor.metrics.deploymentTime;
        const securityScore = vendor.security.zeroTrustScore;
        
        const totalScore = (tcoScore * 0.3) + (roiScore * 0.3) + 
                          (deployScore * 0.2) + (securityScore * 0.2);
        
        return Math.round(totalScore);
    }
    
    calculateComplianceCoverage(vendorId) {
        const vendor = this.vendorData[vendorId];
        const frameworks = this.config.complianceFrameworks;
        
        if (frameworks.length === 0) return 0;
        
        const totalCoverage = frameworks.reduce((sum, frameworkId) => {
            return sum + (vendor.compliance.frameworks[frameworkId]?.coverage || 0);
        }, 0);
        
        return Math.round(totalCoverage / frameworks.length);
    }
    
    showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.innerHTML = `
            <i class="fas fa-${type === 'success' ? 'check-circle' : 
                            type === 'warning' ? 'exclamation-triangle' : 
                            type === 'error' ? 'times-circle' : 'info-circle'}"></i>
            <span>${message}</span>
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.classList.add('show');
        }, 100);
        
        setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => {
                document.body.removeChild(notification);
            }, 300);
        }, 3000);
    }
    
    exportReport() {
        console.log("📤 Exporting comprehensive report...");
        this.showNotification('Report export feature coming soon!', 'info');
    }
    
    resetAnalysis() {
        if (confirm('Are you sure you want to reset all analysis parameters?')) {
            this.selectedVendors = ['portnox'];
            this.config = {
                deviceCount: 300,
                analysisPeriod: 3,
                riskFactor: 1.0,
                industry: 'technology',
                companySize: 'small',
                fteCost: 85000,
                breachCost: 4350000,
                downtimeCost: 5000,
                deploymentType: 'cloud',
                complianceFrameworks: [],
                insurancePremium: 50000
            };
            
            location.reload();
        }
    }
    
    loadInitialData() {
        console.log("📊 Initial data loaded");
    }
    
    createInitialCharts() {
        console.log("📈 Initial charts created");
    }
    
    showErrorMessage(message) {
        const container = document.querySelector('#executive-view .view-content');
        if (container) {
            container.innerHTML = `
                <div class="error-message">
                    <i class="fas fa-exclamation-triangle"></i>
                    <h2>${message}</h2>
                    <button onclick="location.reload()" class="btn btn-primary">
                        <i class="fas fa-redo"></i> Reload Page
                    </button>
                </div>
            `;
        }
    }
}

// Initialize platform when DOM is ready
document.addEventListener('DOMContentLoaded', function() {
    console.log("🌟 DOM Ready - Initializing Zero Trust Executive Platform...");
    
    if (typeof Chart === 'undefined') {
        console.error("❌ Chart.js not loaded!");
        return;
    }
    
    window.zeroTrustExecutivePlatform = new ZeroTrustExecutivePlatform();
    window.zeroTrustExecutivePlatform.init();
});

// Export for global access
window.ZeroTrustExecutivePlatform = ZeroTrustExecutivePlatform;
