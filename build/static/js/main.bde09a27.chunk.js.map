{"version":3,"sources":["utils/RouterConfig.tsx","context/ThemeContext.tsx","components/layout/Header.tsx","components/layout/Sidebar.tsx","config/environment.ts","components/layout/Footer.tsx","context/CalculatorContext.tsx","api/vendorData.ts","hooks/useCalculations.ts","utils/calculationEngine.ts","components/views/Dashboard.tsx","components/ui/Toast.tsx","context/ToastContext.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RouterConfig","_ref","children","React","createElement","HashRouter","ThemeContext","createContext","undefined","ThemeProvider","darkMode","setDarkMode","useState","savedPreference","localStorage","getItem","JSON","parse","useEffect","document","documentElement","classList","add","remove","setItem","stringify","Provider","value","toggleDarkMode","Header","toggleSidebar","useTheme","context","useContext","Error","className","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","src","alt","fillRule","clipRule","Sidebar","isOpen","concat","environment","env","process","apiUrl","version","basename","Footer","Date","getFullYear","href","initialState","selectedVendors","industry","complianceRequirements","pci","hipaa","nist","gdpr","iso","cmmc","ferpa","sox","riskProfile","organizationSize","deviceCount","locations","networkRequirements","cloudIntegration","legacyDevices","byodSupport","iotSupport","wirelessSupport","remoteWork","yearsToProject","costParameters","portnoxBasePricePerDevice","portnoxDiscount","fteCost","fteAllocation","maintenancePercentage","downtimeCost","riskReduction","insuranceReduction","currentView","currentPanel","calculationResults","calculatorReducer","state","action","type","_objectSpread","payload","filter","vendor","[object Object]","requirement","parameter","CalculatorContext","CalculatorProvider","dispatch","useReducer","useCalculator","vendorData","portnox","id","name","description","logo","badge","badgeClass","deployment","pricing","model","basePrice","getImplementationDays","getImplementationCost","getFteRequired","getHardwareCost","riskReductionEffectiveness","meanTimeToRespond","features","cloudNative","zeroTrust","deploymentSpeed","managementSimplicity","scalability","remoteAccess","compliance","costEffectiveness","threatPrevention","deviceDiscovery","userExperience","thirdPartyIntegration","marketPosition","marketShare","customerSatisfaction","analystRating","yearsFounded","targetMarket","strengthsWeaknesses","strengths","weaknesses","bestFitFor","challenges","cisco","aruba","forescout","fortinac","juniper","extreme","securew2","arista","foxpass","microsoft","no-nac","useCalculations","runCalculations","useCallback","_state$costParameters","_state$costParameters2","_state$costParameters3","_state$costParameters4","_state$costParameters5","_state$costParameters6","_state$costParameters7","_state$costParameters8","_state$costParameters9","_state$costParameters0","_state$costParameters1","_state$costParameters10","_state$networkRequire","_state$networkRequire2","_state$networkRequire3","_state$networkRequire4","_state$networkRequire5","_state$networkRequire6","length","results","params","console","log","vendorResults","map","vendorId","index","_vendorInfo$deploymen","vendorInfo","find","v","deploymentTypes","baseCost","isPortnox","baseSecurityScore","totalSavings","totalTco","roi","paybackPeriod","implementationDays","securityImprovement","riskReductionValue","cumulativeCosts","initial","year1","year2","year3","costBreakdown","licenses","maintenance","implementation","operations","hardware","infrastructure","featureScores","complianceScores","overall","portnoxResult","r","otherResults","potentialSavings","reduce","sum","avgSecurityImprovement","calculateTco","laborCostPerHour","itStaffCount","avgBreachCost","securityIncidentsPerYear","Dashboard","Math","round","toLocaleString","disabled","Toast","message","onClose","duration","isVisible","setIsVisible","timer","setTimeout","clearTimeout","icon","color","border","getTypeConfig","style","bottom","ToastContainer","_ref2","toasts","onRemoveToast","zIndex","toast","key","ToastContext","ToastProvider","setToasts","addToast","random","toString","substr","prev","removeToast","App","sidebarOpen","setSidebarOpen","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bde09a27.chunk.js","sourcesContent":["import React from 'react';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\ninterface RouterConfigProps {\n    children: React.ReactNode;\n}\n\nconst RouterConfig: React.FC<RouterConfigProps> = ({ children }) => {\n    // Check if we're in production (GitHub Pages)\n    const isProduction = process.env.NODE_ENV === 'production';\n    \n    // Get the base URL from package.json's homepage field\n    const homepage = process.env.PUBLIC_URL || '';\n    \n    // Use HashRouter in production (GitHub Pages) and BrowserRouter in development\n    if (isProduction) {\n        return <HashRouter>{children}</HashRouter>;\n    } else {\n        return <BrowserRouter basename={homepage}>{children}</BrowserRouter>;\n    }\n};\n\nexport default RouterConfig;\n","import React, { createContext, useState, useContext, useEffect } from 'react';\n\ninterface ThemeContextType {\n  darkMode: boolean;\n  toggleDarkMode: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeProvider: React.FC<{children: React.ReactNode}> = ({ children }) => {\n  // Check if user has previously set a preference\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedPreference = localStorage.getItem('darkMode');\n    return savedPreference ? JSON.parse(savedPreference) : false;\n  });\n\n  useEffect(() => {\n    // Update HTML element class for global styling\n    if (darkMode) {\n      document.documentElement.classList.add('dark-mode');\n    } else {\n      document.documentElement.classList.remove('dark-mode');\n    }\n    \n    // Save preference to localStorage\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n// Custom hook for using the theme context\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n","import React from 'react';\nimport { useTheme } from '../../context/ThemeContext';\n\ninterface HeaderProps {\n  toggleSidebar: () => void;\n}\n\nconst Header: React.FC<HeaderProps> = ({ toggleSidebar }) => {\n  const { darkMode, toggleDarkMode } = useTheme();\n\n  return (\n    <header className=\"bg-white dark:bg-gray-800 shadow-sm z-10\">\n      <div className=\"container mx-auto px-4 py-3\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center\">\n            <button \n              className=\"block lg:hidden mr-4 text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\n              onClick={toggleSidebar}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            </button>\n            <div className=\"flex items-center\">\n              <img src=\"/img/vendors/portnox-logo.png\" alt=\"Portnox Logo\" className=\"h-8 mr-3\" />\n              <div>\n                <h1 className=\"text-lg font-bold text-gray-800 dark:text-white\">Zero Trust Total Cost Analyzer</h1>\n                <p className=\"text-xs text-gray-600 dark:text-gray-400\">Multi-Vendor NAC Solution Comparison Platform</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"stakeholder-selector hidden md:block\">\n              <div className=\"stakeholder-tabs flex border border-gray-200 dark:border-gray-700 rounded-md overflow-hidden\">\n                <button className=\"stakeholder-tab active px-3 py-1.5 text-sm font-medium bg-portnox-primary text-white\">\n                  <i className=\"fas fa-chart-pie mr-1\"></i> Executive\n                </button>\n                <button className=\"stakeholder-tab px-3 py-1.5 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\">\n                  <i className=\"fas fa-coins mr-1\"></i> Financial\n                </button>\n                <button className=\"stakeholder-tab px-3 py-1.5 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\">\n                  <i className=\"fas fa-shield-alt mr-1\"></i> Security\n                </button>\n                <button className=\"stakeholder-tab px-3 py-1.5 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\">\n                  <i className=\"fas fa-cogs mr-1\"></i> Technical\n                </button>\n              </div>\n            </div>\n            <button className=\"btn btn-primary hidden md:block\">\n              <i className=\"fas fa-calculator mr-1\"></i> Calculate\n            </button>\n            <button className=\"btn btn-outline hidden md:block\">\n              <i className=\"fas fa-file-pdf mr-1\"></i> Export\n            </button>\n            <button className=\"p-2 rounded-full text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\" onClick={toggleDarkMode}>\n              {darkMode ? (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\n                </svg>\n              ) : (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\" clipRule=\"evenodd\" />\n                </svg>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\ninterface SidebarProps {\n  isOpen: boolean;\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ isOpen }) => {\n  return (\n    <aside className={`sidebar bg-white dark:bg-gray-800 shadow-md transition-all duration-300 ${isOpen ? 'translate-x-0' : '-translate-x-full lg:translate-x-0'} fixed lg:relative w-64 h-screen z-20 overflow-y-auto`}>\n      <div className=\"sidebar-content p-4\">\n        <h2 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-white\">Configuration</h2>\n        \n        {/* Vendor Selection */}\n        <div className=\"mb-4\">\n          <div className=\"flex justify-between items-center cursor-pointer bg-gray-50 dark:bg-gray-700 p-3 rounded-md\">\n            <h3 className=\"text-sm font-medium flex items-center text-gray-700 dark:text-gray-300\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2\" />\n              </svg>\n              Select NAC Vendors\n            </h3>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </div>\n          <div className=\"mt-2 px-2\">\n            <p className=\"text-xs text-gray-600 dark:text-gray-400 mb-2\">Choose multiple vendors to compare with Portnox Cloud</p>\n            <div className=\"vendor-grid grid grid-cols-2 gap-2\">\n              {/* Vendor cards will be added dynamically */}\n            </div>\n          </div>\n        </div>\n        \n        {/* Industry & Compliance */}\n        <div className=\"mb-4\">\n          <div className=\"flex justify-between items-center cursor-pointer bg-gray-50 dark:bg-gray-700 p-3 rounded-md\">\n            <h3 className=\"text-sm font-medium flex items-center text-gray-700 dark:text-gray-300\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n              </svg>\n              Industry & Compliance\n            </h3>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </div>\n        </div>\n        \n        {/* Organization */}\n        <div className=\"mb-4\">\n          <div className=\"flex justify-between items-center cursor-pointer bg-gray-50 dark:bg-gray-700 p-3 rounded-md\">\n            <h3 className=\"text-sm font-medium flex items-center text-gray-700 dark:text-gray-300\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n              </svg>\n              Organization\n            </h3>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </div>\n        </div>\n        \n        {/* Cost Parameters */}\n        <div className=\"mb-4\">\n          <div className=\"flex justify-between items-center cursor-pointer bg-gray-50 dark:bg-gray-700 p-3 rounded-md\">\n            <h3 className=\"text-sm font-medium flex items-center text-gray-700 dark:text-gray-300\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              Cost Parameters\n            </h3>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"sidebar-footer p-4 border-t border-gray-200 dark:border-gray-700\">\n        <button className=\"btn btn-primary w-full\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n          </svg>\n          Calculate TCO & ROI\n        </button>\n      </div>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","// Environment configuration\ninterface EnvironmentConfig {\n  env: string;\n  apiUrl: string;\n  version: string;\n  basename: string;\n}\n\nconst environment: EnvironmentConfig = {\n  env: process.env.REACT_APP_ENV || 'development',\n  apiUrl: process.env.REACT_APP_API_URL || '',\n  version: process.env.REACT_APP_VERSION || '0.1.0',\n  basename: process.env.NODE_ENV === 'production' ? '/UaXtXo' : '/',\n};\n\nexport default environment;\n","import React from 'react';\nimport environment from '../../config/environment';\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 py-4 mt-auto\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex flex-col md:flex-row justify-between items-center\">\n          <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-2 md:mb-0\">\n            &copy; {new Date().getFullYear()} Portnox. All rights reserved.\n            <span className=\"ml-2 text-xs text-gray-500 dark:text-gray-500\">v{environment.version}</span>\n          </div>\n          <div className=\"flex space-x-4\">\n            <a href=\"#\" className=\"text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-white\">Privacy Policy</a>\n            <a href=\"#\" className=\"text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-white\">Terms of Service</a>\n            <a href=\"#\" className=\"text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-white\">Contact Us</a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// @ts-nocheck\nimport React, { createContext, useReducer, useContext } from 'react';\n\n// Define initial state type\nexport interface CalculatorState {\n  selectedVendors: string[];\n  industry: string;\n  complianceRequirements: {\n    [key: string]: boolean;\n  };\n  riskProfile: string;\n  organizationSize: string;\n  deviceCount: number;\n  locations: number;\n  networkRequirements: {\n    [key: string]: boolean;\n  };\n  yearsToProject: number;\n  costParameters: {\n    [key: string]: number;\n  };\n  calculationResults: any | null;\n  currentView: string;\n  currentPanel: string;\n}\n\n// Define initial state\nconst initialState: CalculatorState = {\n  // Selected vendors (Portnox is always selected by default)\n  selectedVendors: ['portnox'],\n  \n  // Industry & Compliance\n  industry: '',\n  complianceRequirements: {\n    pci: false,\n    hipaa: false,\n    nist: false,\n    gdpr: false,\n    iso: false,\n    cmmc: false,\n    ferpa: false,\n    sox: false\n  },\n  riskProfile: 'standard',\n  \n  // Organization\n  organizationSize: 'small',\n  deviceCount: 500,\n  locations: 2,\n  networkRequirements: {\n    cloudIntegration: false,\n    legacyDevices: false,\n    byodSupport: true,\n    iotSupport: false,\n    wirelessSupport: true,\n    remoteWork: true\n  },\n  yearsToProject: 3,\n  \n  // Cost Parameters\n  costParameters: {\n    portnoxBasePricePerDevice: 3.00,\n    portnoxDiscount: 15,\n    fteCost: 100000,\n    fteAllocation: 25,\n    maintenancePercentage: 18,\n    downtimeCost: 5000,\n    riskReduction: 35,\n    insuranceReduction: 10,\n  },\n  \n  // UI State\n  currentView: 'executive',\n  currentPanel: 'executive-summary',\n  \n  // Calculation Results (populated after calculation)\n  calculationResults: null\n};\n\n// Define action types\ntype CalculatorAction = \n  | { type: 'SELECT_VENDOR', payload: string }\n  | { type: 'UNSELECT_VENDOR', payload: string }\n  | { type: 'SET_INDUSTRY', payload: string }\n  | { type: 'TOGGLE_COMPLIANCE', payload: { requirement: string, value: boolean } }\n  | { type: 'SET_RISK_PROFILE', payload: string }\n  | { type: 'SET_ORGANIZATION_SIZE', payload: string }\n  | { type: 'SET_DEVICE_COUNT', payload: number }\n  | { type: 'SET_LOCATIONS', payload: number }\n  | { type: 'TOGGLE_NETWORK_REQUIREMENT', payload: { requirement: string, value: boolean } }\n  | { type: 'SET_YEARS_TO_PROJECT', payload: number }\n  | { type: 'SET_COST_PARAMETER', payload: { parameter: string, value: number } }\n  | { type: 'SET_VIEW', payload: string }\n  | { type: 'SET_PANEL', payload: string }\n  | { type: 'CALCULATE_RESULTS' }\n  | { type: 'SET_CALCULATION_RESULTS', payload: any }\n  | { type: 'RESET_CALCULATOR' };\n\n// Create reducer function\nfunction calculatorReducer(state: CalculatorState, action: CalculatorAction): CalculatorState {\n  switch (action.type) {\n    case 'SELECT_VENDOR':\n      return {\n        ...state,\n        selectedVendors: [...state.selectedVendors, action.payload]\n      };\n    case 'UNSELECT_VENDOR':\n      // Ensure Portnox is always selected\n      if (action.payload === 'portnox') {\n        return state;\n      }\n      return {\n        ...state,\n        selectedVendors: state.selectedVendors.filter(vendor => vendor !== action.payload)\n      };\n    case 'SET_INDUSTRY':\n      return {\n        ...state,\n        industry: action.payload\n      };\n    case 'TOGGLE_COMPLIANCE':\n      return {\n        ...state,\n        complianceRequirements: {\n          ...state.complianceRequirements,\n          [action.payload.requirement]: action.payload.value\n        }\n      };\n    case 'SET_RISK_PROFILE':\n      return {\n        ...state,\n        riskProfile: action.payload\n      };\n    case 'SET_ORGANIZATION_SIZE':\n      // Also adjust device count based on organization size\n      let deviceCount = state.deviceCount;\n      switch (action.payload) {\n        case 'very-small': deviceCount = 250; break;\n        case 'small': deviceCount = 500; break;\n        case 'medium': deviceCount = 3000; break;\n        case 'large': deviceCount = 7500; break;\n        case 'enterprise': deviceCount = 15000; break;\n      }\n      \n      return {\n        ...state,\n        organizationSize: action.payload,\n        deviceCount\n      };\n    case 'SET_DEVICE_COUNT':\n      return {\n        ...state,\n        deviceCount: action.payload\n      };\n    case 'SET_LOCATIONS':\n      return {\n        ...state,\n        locations: action.payload\n      };\n    case 'TOGGLE_NETWORK_REQUIREMENT':\n      return {\n        ...state,\n        networkRequirements: {\n          ...state.networkRequirements,\n          [action.payload.requirement]: action.payload.value\n        }\n      };\n    case 'SET_YEARS_TO_PROJECT':\n      return {\n        ...state,\n        yearsToProject: action.payload\n      };\n    case 'SET_COST_PARAMETER':\n      return {\n        ...state,\n        costParameters: {\n          ...state.costParameters,\n          [action.payload.parameter]: action.payload.value\n        }\n      };\n    case 'SET_VIEW':\n      return {\n        ...state,\n        currentView: action.payload,\n        currentPanel: action.payload + '-summary' // Reset to default panel for the view\n      };\n    case 'SET_PANEL':\n      return {\n        ...state,\n        currentPanel: action.payload\n      };\n    case 'CALCULATE_RESULTS':\n      // We'll implement the actual calculation logic later\n      // For now, just return the state as is\n      return state;\n    case 'SET_CALCULATION_RESULTS':\n      return {\n        ...state,\n        calculationResults: action.payload\n      };\n    case 'RESET_CALCULATOR':\n      return {\n        ...initialState,\n        currentView: state.currentView, // Preserve current view\n        currentPanel: state.currentPanel // Preserve current panel\n      };\n    default:\n      return state;\n  }\n}\n\n// Create context\ninterface CalculatorContextType {\n  state: CalculatorState;\n  dispatch: React.Dispatch<CalculatorAction>;\n}\n\nconst CalculatorContext = createContext<CalculatorContextType | undefined>(undefined);\n\n// Create provider component\nexport const CalculatorProvider: React.FC<{children: React.ReactNode}> = ({ children }) => {\n  const [state, dispatch] = useReducer(calculatorReducer, initialState);\n  \n  return (\n    <CalculatorContext.Provider value={{ state, dispatch }}>\n      {children}\n    </CalculatorContext.Provider>\n  );\n};\n\n// Create custom hook for using the context\nexport const useCalculator = () => {\n  const context = useContext(CalculatorContext);\n  if (context === undefined) {\n    throw new Error('useCalculator must be used within a CalculatorProvider');\n  }\n  return context;\n};\n","// Comprehensive vendor data for all NAC solutions\n\n// Define vendor data interface\nexport interface VendorData {\n  id: string;\n  name: string;\n  description: string;\n  logo: string;\n  badge?: string;\n  badgeClass?: string;\n  deployment: 'cloud' | 'on-premises' | 'hybrid';\n  pricing: {\n    model: 'subscription' | 'perpetual' | 'hybrid';\n    basePrice: number;\n    maintenancePercentage?: number;\n    getImplementationDays: (deviceCount: number) => number;\n    getImplementationCost: (deviceCount: number) => number;\n    getFteRequired: (deviceCount: number) => number;\n    getHardwareCost: (deviceCount: number) => number;\n    riskReductionEffectiveness: number;\n    meanTimeToRespond: number;\n  };\n  features: {\n    cloudNative: number;\n    zeroTrust: number;\n    deploymentSpeed: number;\n    managementSimplicity: number;\n    scalability: number;\n    remoteAccess: number;\n    compliance: number;\n    costEffectiveness: number;\n    threatPrevention: number;\n    deviceDiscovery: number;\n    userExperience: number;\n    thirdPartyIntegration: number;\n  };\n  marketPosition: {\n    marketShare: number;\n    customerSatisfaction: number;\n    analystRating: number;\n    yearsFounded: number;\n    targetMarket: string[];\n  };\n  strengthsWeaknesses: {\n    strengths: string[];\n    weaknesses: string[];\n    bestFitFor: string[];\n    challenges: string[];\n  };\n}\n\n// Comprehensive vendor data including all required vendors\nexport const vendorData: Record<string, VendorData> = {\n  portnox: {\n    id: 'portnox',\n    name: 'Portnox Cloud',\n    description: 'Cloud-native NAC',\n    logo: process.env.NODE_ENV === 'production' ? '/UaXtXo/img/vendors/' : '/img/vendors/portnox-logo.png',\n    badge: 'Best Value',\n    badgeClass: 'badge-primary',\n    deployment: 'cloud',\n    pricing: {\n      model: 'subscription',\n      // Base price per device per month (before discounts)\n      basePrice: 3.00,\n      // Implementation days based on device count\n      getImplementationDays: (deviceCount: number) => {\n        if (deviceCount < 1000) return 14;\n        if (deviceCount < 5000) return 21;\n        if (deviceCount < 10000) return 30;\n        return 45;\n      },\n      // Implementation cost calculation\n      getImplementationCost: (deviceCount: number) => {\n        const days = vendorData.portnox.pricing.getImplementationDays(deviceCount);\n        return days * 1500; // Daily implementation rate\n      },\n      // Resources required (FTE percentage)\n      getFteRequired: (deviceCount: number) => {\n        if (deviceCount < 1000) return 0.15;\n        if (deviceCount < 5000) return 0.25;\n        if (deviceCount < 10000) return 0.5;\n        return 0.75;\n      },\n      // Hardware costs (none for cloud)\n      getHardwareCost: () => 0,\n      // Risk reduction effectiveness (%)\n      riskReductionEffectiveness: 85,\n      // Mean time to respond (minutes)\n      meanTimeToRespond: 45,\n    },\n    features: {\n      cloudNative: 10,\n      zeroTrust: 9,\n      deploymentSpeed: 10,\n      managementSimplicity: 9,\n      scalability: 10,\n      remoteAccess: 9,\n      compliance: 8,\n      costEffectiveness: 10,\n      threatPrevention: 8,\n      deviceDiscovery: 9,\n      userExperience: 9,\n      thirdPartyIntegration: 8\n    },\n    marketPosition: {\n      marketShare: 12,\n      customerSatisfaction: 4.7,\n      analystRating: 4.5,\n      yearsFounded: 2007,\n      targetMarket: ['SMB', 'Mid-Market', 'Enterprise']\n    },\n    strengthsWeaknesses: {\n      strengths: [\n        'True cloud-native architecture',\n        'Rapid deployment with minimal infrastructure',\n        'Simple, intuitive management interface',\n        'Strong BYOD and remote access support',\n        'Continuous compliance monitoring'\n      ],\n      weaknesses: [\n        'Newer to enterprise market segment',\n        'Still building brand recognition',\n        'Limited hardware-level integration compared to legacy vendors'\n      ],\n      bestFitFor: [\n        'Cloud-first organizations',\n        'Multi-location enterprises',\n        'Companies prioritizing rapid time-to-security',\n        'Organizations with limited IT resources'\n      ],\n      challenges: [\n        'Competing against established vendor relationships',\n        'Meeting specialized industrial or healthcare requirements'\n      ]\n    }\n  },\n  \n  cisco: {\n    id: 'cisco',\n    name: 'Cisco ISE',\n    description: 'Enterprise NAC',\n    logo: process.env.NODE_ENV === 'production' ? '/UaXtXo/img/vendors/' : '/img/vendors/cisco-logo.png',\n    badge: 'Complex',\n    badgeClass: 'badge-warning',\n    deployment: 'on-premises',\n    pricing: {\n      model: 'perpetual',\n      // Base perpetual license cost per device\n      basePrice: 85.00,\n      // Annual maintenance as percentage of license cost\n      maintenancePercentage: 20,\n      // Implementation days based on device count\n      getImplementationDays: (deviceCount: number) => {\n        if (deviceCount < 1000) return 45;\n        if (deviceCount < 5000) return 90;\n        if (deviceCount < 10000) return 120;\n        return 180;\n      },\n      // Implementation cost calculation\n      getImplementationCost: (deviceCount: number) => {\n        const days = vendorData.cisco.pricing.getImplementationDays(deviceCount);\n        return days * 2000; // Daily implementation rate\n      },\n      // Resources required (FTE percentage)\n      getFteRequired: (deviceCount: number) => {\n        if (deviceCount < 1000) return 0.5;\n        if (deviceCount < 5000) return 1.0;\n        if (deviceCount < 10000) return 1.5;\n        return 2.0;\n      },\n      // Hardware costs\n      getHardwareCost: (deviceCount: number) => {\n        if (deviceCount < 1000) return 50000;\n        if (deviceCount < 5000) return 120000;\n        if (deviceCount < 10000) return 200000;\n        return 350000;\n      },\n      // Risk reduction effectiveness (%)\n      riskReductionEffectiveness: 75,\n      // Mean time to respond (minutes)\n      meanTimeToRespond: 90,\n    },\n    features: {\n      cloudNative: 4,\n      zeroTrust: 7,\n      deploymentSpeed: 3,\n      managementSimplicity: 4,\n      scalability: 8,\n      remoteAccess: 6,\n      compliance: 9,\n      costEffectiveness: 3,\n      threatPrevention: 8,\n      deviceDiscovery: 8,\n      userExperience: 5,\n      thirdPartyIntegration: 9\n    },\n    marketPosition: {\n      marketShare: 35,\n      customerSatisfaction: 3.8,\n      analystRating: 4.1,\n      yearsFounded: 1984,\n      targetMarket: ['Enterprise', 'Global 2000', 'Government']\n    },\n    strengthsWeaknesses: {\n      strengths: [\n        'Market leader with extensive install base',\n        'Deep integration with Cisco networking infrastructure',\n        'Comprehensive policy management',\n        'Strong security ecosystem integration',\n        'Mature compliance reporting'\n      ],\n      weaknesses: [\n        'Complex implementation and management',\n        'High hardware and consulting requirements',\n        'Significant ongoing maintenance costs',\n        'Limited cloud capabilities'\n      ],\n      bestFitFor: [\n        'Existing Cisco networking customers',\n        'Large enterprises with dedicated security teams',\n        'Organizations requiring deep infrastructure integration',\n        'Companies with complex compliance requirements'\n      ],\n      challenges: [\n        'Cloud migration and adoption',\n        'Simplified management for resource-constrained organizations',\n        'Cost justification for smaller enterprises'\n      ]\n    }\n  },\n  \n  aruba: {\n    id: 'aruba',\n    name: 'Aruba ClearPass',\n    description: 'Policy manager',\n    logo: process.env.NODE_ENV === 'production' ? '/UaXtXo/img/vendors/' : '/img/vendors/aruba-logo.png',\n    deployment: 'on-premises',\n    pricing: {\n      model: 'perpetual',\n      basePrice: 70.00,\n      maintenancePercentage: 18,\n      getImplementationDays: (deviceCount: number) => {\n        if (deviceCount < 1000) return 40;\n        if (deviceCount < 5000) return 75;\n        if (deviceCount < 10000) return 100;\n        return 150;\n      },\n      getImplementationCost: (deviceCount: number) => {\n        const days = vendorData.aruba.pricing.getImplementationDays(deviceCount);\n        return days * 1800;\n      },\n      getFteRequired: (deviceCount: number) => {\n        if (deviceCount < 1000) return 0.4;\n        if (deviceCount < 5000) return 0.75;\n        if (deviceCount < 10000) return 1.25;\n        return 1.75;\n      },\n      getHardwareCost: (deviceCount: number) => {\n        if (deviceCount < 1000) return 40000;\n        if (deviceCount < 5000) return 90000;\n        if (deviceCount < 10000) return 150000;\n        return 250000;\n      },\n      riskReductionEffectiveness: 70,\n      meanTimeToRespond: 105,\n    },\n    features: {\n      cloudNative: 5,\n      zeroTrust: 6,\n      deploymentSpeed: 4,\n      managementSimplicity: 5,\n      scalability: 7,\n      remoteAccess: 7,\n      compliance: 8,\n      costEffectiveness: 5,\n      threatPrevention: 7,\n      deviceDiscovery: 8,\n      userExperience: 6,\n      thirdPartyIntegration: 7\n    },\n    marketPosition: {\n      marketShare: 18,\n      customerSatisfaction: 4.0,\n      analystRating: 4.0,\n      yearsFounded: 2002,\n      targetMarket: ['Enterprise', 'Education', 'Healthcare']\n    },\n    strengthsWeaknesses: {\n      strengths: [\n        'Strong wireless integration',\n        'Extensive device profiling',\n        'Solid policy management',\n        'Good API integration options',\n        'HP enterprise backing'\n      ],\n      weaknesses: [\n        'Complex deployment architecture',\n        'Moderate learning curve',\n        'Limited cloud capabilities',\n        'Resource-intensive management'\n      ],\n      bestFitFor: [\n        'Existing HPE/Aruba customers',\n        'Organizations with complex wireless deployments',\n        'Education and healthcare sectors',\n        'Mid to large enterprises'\n      ],\n      challenges: [\n        'Cloud transition and SaaS delivery',\n        'Simplifying management experience',\n        'Reducing total cost of ownership'\n      ]\n    }\n  },\n  \n  forescout: {\n    id: 'forescout',\n    name: 'Forescout',\n    description: 'Device visibility',\n    logo: process.env.NODE_ENV === 'production' ? '/UaXtXo/img/vendors/' : '/img/vendors/forescout-logo.png',\n    deployment: 'on-premises',\n    pricing: {\n      model: 'perpetual',\n      basePrice: 75.00,\n      maintenancePercentage: 22,\n      getImplementationDays: (deviceCount: number) => {\n        if (deviceCount < 1000) return 50;\n        if (deviceCount < 5000) return 90;\n        if (deviceCount < 10000) return 130;\n        return 180;\n      },\n      getImplementationCost: (deviceCount: number) => {\n        const days = vendorData.forescout.pricing.getImplementationDays(deviceCount);\n        return days * 1900;\n      },\n      getFteRequired: (deviceCount: number) => {\n        if (deviceCount < 1000) return 0.5;\n        if (deviceCount < 5000) return 0.8;\n        if (deviceCount < 10000) return 1.3;\n        return 2.0;\n      },\n      getHardwareCost: (deviceCount: number) => {\n        if (deviceCount < 1000) return 45000;\n        if (deviceCount < 5000) return 100000;\n        if (deviceCount < 10000) return 180000;\n        return 300000;\n      },\n      riskReductionEffectiveness: 72,\n      meanTimeToRespond: 95,\n    },\n    features: {\n      cloudNative: 4,\n      zeroTrust: 7,\n      deploymentSpeed: 3,\n      managementSimplicity: 5,\n      scalability: 8,\n      remoteAccess: 4,\n      compliance: 8,\n      costEffectiveness: 4,\n      threatPrevention: 9,\n      deviceDiscovery: 10,\n      userExperience: 5,\n      thirdPartyIntegration: 8\n    },\n    marketPosition: {\n      marketShare: 15,\n      customerSatisfaction: 3.9,\n      analystRating: 4.2,\n      yearsFounded: 2000,\n      targetMarket: ['Enterprise', 'Government', 'Critical Infrastructure']\n    },\n    strengthsWeaknesses: {\n      strengths: [\n        'Superior device discovery capabilities',\n        'Excellent IoT/OT device visibility',\n        'Strong integration ecosystem',\n        'Advanced threat hunting',\n        'Agentless architecture'\n      ],\n      weaknesses: [\n        'High total cost of ownership',\n        'Complex implementation',\n        'Limited cloud options',\n        'Resource-intensive management'\n      ],\n      bestFitFor: [\n        'Large enterprises with diverse device types',\n        'Critical infrastructure providers',\n        'Organizations with significant IoT deployments',\n        'Environments requiring detailed visibility'\n      ],\n      challenges: [\n        'Simplifying deployment complexity',\n        'Improving cloud capabilities',\n        'Reducing management overhead'\n      ]\n    }\n  },\n  \n  fortinac: {\n    id: 'fortinac',\n    name: 'FortiNAC',\n    description: 'Fortinet NAC',\n    logo: process.env.NODE_ENV === 'production' ? '/UaXtXo/img/vendors/' : '/img/vendors/fortinac-logo.png',\n    deployment: 'on-premises',\n    pricing: {\n      model: 'perpetual',\n      basePrice: 60.00,\n      maintenancePercentage: 20,\n      getImplementationDays: (deviceCount: number) => {\n        if (deviceCount < 1000) return 35;\n        if (deviceCount < 5000) return 70;\n        if (deviceCount < 10000) return 100;\n        return 140;\n      },\n      getImplementationCost: (deviceCount: number) => {\n        const days = vendorData.fortinac.pricing.getImplementationDays(deviceCount);\n        return days * 1700;\n      },\n      getFteRequired: (deviceCount: number) => {\n        if (deviceCount < 1000) return 0.4;\n        if (deviceCount < 5000) return 0.7;\n        if (deviceCount < 10000) return 1.2;\n        return 1.8;\n      },\n      getHardwareCost: (deviceCount: number) => {\n        if (deviceCount < 1000) return 30000;\n        if (deviceCount < 5000) return 75000;\n        if (deviceCount < 10000) return 140000;\n        return 220000;\n      },\n      riskReductionEffectiveness: 68,\n      meanTimeToRespond: 110,\n    },\n    features: {\n      cloudNative: 5,\n      zeroTrust: 7,\n      deploymentSpeed: 5,\n      managementSimplicity: 6,\n      scalability: 7,\n      remoteAccess: 6,\n      compliance: 7,\n      costEffectiveness: 6,\n      threatPrevention: 8,\n      deviceDiscovery: 7,\n      userExperience: 6,\n      thirdPartyIntegration: 7\n    },\n    marketPosition: {\n      marketShare: 8,\n      customerSatisfaction: 3.8,\n      analystRating: 3.9,\n      yearsFounded: 2000,\n      targetMarket: ['Enterprise', 'MidMarket', 'Government']\n    },\n    strengthsWeaknesses: {\n      strengths: [\n        'Strong Fortinet security fabric integration',\n        'Good price-to-performance ratio',\n        'Unified security management',\n        'Automated response capabilities',\n        'Improving cloud management'\n      ],\n      weaknesses: [\n        'Limited features compared to specialized NAC vendors',\n        'Less mature than leading competitors',\n        'Integration challenges outside of Fortinet ecosystem',\n        'Limited cloud-native capabilities'\n      ],\n      bestFitFor: [\n        'Existing Fortinet customers',\n        'Organizations seeking integrated security stack',\n        'Medium enterprises with moderate complexity',\n        'Price-sensitive security teams'\n      ],\n      challenges: [\n        'Competing with specialized NAC vendors',\n        'Expanding cloud capabilities',\n        'Feature parity with market leaders'\n      ]\n    }\n  },\n  \n  juniper: {\n    id: 'juniper',\n    name: 'Juniper Mist',\n    description: 'AI-driven NAC',\n    logo: process.env.NODE_ENV === 'production' ? '/UaXtXo/img/vendors/' : '/img/vendors/juniper-logo.png',\n    deployment: 'hybrid',\n    pricing: {\n      model: 'hybrid',\n      basePrice: 50.00,\n      maintenancePercentage: 15,\n      getImplementationDays: (deviceCount: number) => {\n        if (deviceCount < 1000) return 30;\n        if (deviceCount < 5000) return 60;\n        if (deviceCount < 10000) return 90;\n        return 130;\n      },\n      getImplementationCost: (deviceCount: number) => {\n        const days = vendorData.juniper.pricing.getImplementationDays(deviceCount);\n        return days * 1800;\n      },\n      getFteRequired: (deviceCount: number) => {\n        if (deviceCount < 1000) return 0.3;\n        if (deviceCount < 5000) return 0.6;\n        if (deviceCount < 10000) return 1.0;\n        return 1.5;\n      },\n      getHardwareCost: (deviceCount: number) => {\n        if (deviceCount < 1000) return 20000;\n        if (deviceCount < 5000) return 60000;\n        if (deviceCount < 10000) return 100000;\n        return 180000;\n      },\n      riskReductionEffectiveness: 75,\n      meanTimeToRespond: 85,\n    },\n    features: {\n      cloudNative: 7,\n      zeroTrust: 8,\n      deploymentSpeed: 6,\n      managementSimplicity: 7,\n      scalability: 8,\n      remoteAccess: 7,\n      compliance: 7,\n      costEffectiveness: 7,\n      threatPrevention: 7,\n      deviceDiscovery: 8,\n      userExperience: 8,\n      thirdPartyIntegration: 7\n    },\n    marketPosition: {\n      marketShare: 6,\n      customerSatisfaction: 4.3,\n      analystRating: 4.2,\n      yearsFounded: 1996,\n      targetMarket: ['Enterprise', 'Service Provider', 'Education']\n    },\n    strengthsWeaknesses: {\n      strengths: [\n        'Advanced AI-driven insights',\n        'Strong wireless integration',\n        'Good cloud management',\n        'Innovative user experience',\n        'Solid security architecture'\n      ],\n      weaknesses: [\n        'Smaller market share than leaders',\n        'Integration complexity with non-Juniper networks',\n        'Partial cloud transition still in progress',\n        'Less mature NAC specific capabilities'\n      ],\n      bestFitFor: [\n        'Organizations valuing AI-driven insights',\n        'Existing Juniper customers',\n        'Companies focusing on user experience',\n        'Education and healthcare institutions'\n      ],\n      challenges: [\n        'Expanding market presence',\n        'Competing with specialized NAC vendors',\n        'Building comprehensive NAC features'\n      ]\n    }\n  },\n  \n  extreme: {\n    id: 'extreme',\n    name: 'Extreme NAC',\n    description: 'Network security',\n    logo: process.env.NODE_ENV === 'production' ? '/UaXtXo/img/vendors/' : '/img/vendors/extreme-logo.png',\n    deployment: 'on-premises',\n    pricing: {\n      model: 'perpetual',\n      basePrice: 65.00,\n      maintenancePercentage: 18,\n      getImplementationDays: (deviceCount: number) => {\n        if (deviceCount < 1000) return 38;\n        if (deviceCount < 5000) return 75;\n        if (deviceCount < 10000) return 110;\n        return 150;\n      },\n      getImplementationCost: (deviceCount: number) => {\n        const days = vendorData.extreme.pricing.getImplementationDays(deviceCount);\n        return days * 1750;\n      },\n      getFteRequired: (deviceCount: number) => {\n        if (deviceCount < 1000) return 0.45;\n        if (deviceCount < 5000) return 0.8;\n        if (deviceCount < 10000) return 1.3;\n        return 1.8;\n      },\n      getHardwareCost: (deviceCount: number) => {\n        if (deviceCount < 1000) return 35000;\n        if (deviceCount < 5000) return 85000;\n        if (deviceCount < 10000) return 150000;\n        return 270000;\n      },\n      riskReductionEffectiveness: 70,\n      meanTimeToRespond: 100,\n    },\n    features: {\n      cloudNative: 5,\n      zeroTrust: 7,\n      deploymentSpeed: 5,\n      managementSimplicity: 6,\n      scalability: 8,\n      remoteAccess: 6,\n      compliance: 7,\n      costEffectiveness: 6,\n      threatPrevention: 7,\n      deviceDiscovery: 8,\n      userExperience: 6,\n      thirdPartyIntegration: 7\n    },\n    marketPosition: {\n      marketShare: 7,\n      customerSatisfaction: 3.9,\n      analystRating: 3.8,\n      yearsFounded: 1996,\n      targetMarket: ['Enterprise', 'Education', 'Healthcare']\n    },\n    strengthsWeaknesses: {\n      strengths: [\n        'Strong network integration',\n        'Good wired/wireless integration',\n        'Solid policy management',\n        'Decent compliance capabilities',\n        'Improving cloud management'\n      ],\n      weaknesses: [\n        'Complex deployment model',\n        'Limited cloud capabilities',\n        'Management complexity',\n        'More resource-intensive than cloud alternatives'\n      ],\n      bestFitFor: [\n        'Existing Extreme Networks customers',\n        'Organizations with on-premises preference',\n        'Education and healthcare sectors',\n        'Traditional enterprises'\n      ],\n      challenges: [\n        'Cloud transition',\n        'Competing with cloud-native solutions',\n        'Simplifying management experience'\n      ]\n    }\n  },\n  \n  securew2: {\n    id: 'securew2',\n    name: 'SecureW2',\n    description: 'Cloud RADIUS',\n    logo: process.env.NODE_ENV === 'production' ? '/UaXtXo/img/vendors/' : '/img/vendors/securew2-logo.png',\n    deployment: 'cloud',\n    pricing: {\n      model: 'subscription',\n      basePrice: 2.50,\n      getImplementationDays: (deviceCount: number) => {\n        if (deviceCount < 1000) return 20;\n        if (deviceCount < 5000) return 30;\n        if (deviceCount < 10000) return 45;\n        return 60;\n      },\n      getImplementationCost: (deviceCount: number) => {\n        const days = vendorData.securew2.pricing.getImplementationDays(deviceCount);\n        return days * 1500;\n      },\n      getFteRequired: (deviceCount: number) => {\n        if (deviceCount < 1000) return 0.2;\n        if (deviceCount < 5000) return 0.4;\n        if (deviceCount < 10000) return 0.7;\n        return 1.0;\n      },\n      getHardwareCost: () => 0,\n      riskReductionEffectiveness: 65,\n      meanTimeToRespond: 70,\n    },\n    features: {\n      cloudNative: 9,\n      zeroTrust: 6,\n      deploymentSpeed: 8,\n      managementSimplicity: 8,\n      scalability: 7,\n      remoteAccess: 8,\n      compliance: 6,\n      costEffectiveness: 8,\n      threatPrevention: 6,\n      deviceDiscovery: 7,\n      userExperience: 8,\n      thirdPartyIntegration: 7\n    },\n    marketPosition: {\n      marketShare: 3,\n      customerSatisfaction: 4.4,\n      analystRating: 3.6,\n      yearsFounded: 2013,\n      targetMarket: ['SMB', 'Education', 'Mid-Market']\n    },\n    strengthsWeaknesses: {\n      strengths: [\n        'Cloud-native architecture',\n        'Simple deployment model',\n        'Good ease of use',\n        'Solid BYOD support',\n        'Flexible identity provider integration'\n      ],\n      weaknesses: [\n        'Limited enterprise-class features',\n        'Smaller company and market share',\n        'More focused on authentication than full NAC',\n        'Less comprehensive compliance capabilities'\n      ],\n      bestFitFor: [\n        'Small to medium businesses',\n        'Education institutions',\n        'Organizations prioritizing cloud migration',\n        'Environments needing simpler management'\n      ],\n      challenges: [\n        'Expanding enterprise capabilities',\n        'Competing with full-featured NAC vendors',\n        'Building market presence'\n      ]\n    }\n  },\n  \n  arista: {\n    id: 'arista',\n    name: 'Arista Agni',\n    description: 'Network control',\n    logo: process.env.NODE_ENV === 'production' ? '/UaXtXo/img/vendors/' : '/img/vendors/arista-logo.png',\n    deployment: 'on-premises',\n    pricing: {\n      model: 'perpetual',\n      basePrice: 65.00,\n      maintenancePercentage: 18,\n      getImplementationDays: (deviceCount: number) => {\n        if (deviceCount < 1000) return 40;\n        if (deviceCount < 5000) return 80;\n        if (deviceCount < 10000) return 110;\n        return 160;\n      },\n      getImplementationCost: (deviceCount: number) => {\n        const days = vendorData.arista.pricing.getImplementationDays(deviceCount);\n        return days * 1800;\n      },\n      getFteRequired: (deviceCount: number) => {\n        if (deviceCount < 1000) return 0.4;\n        if (deviceCount < 5000) return 0.75;\n        if (deviceCount < 10000) return 1.3;\n        return 1.8;\n      },\n      getHardwareCost: (deviceCount: number) => {\n        if (deviceCount < 1000) return 35000;\n        if (deviceCount < 5000) return 85000;\n        if (deviceCount < 10000) return 150000;\n        return 260000;\n      },\n      riskReductionEffectiveness: 70,\n      meanTimeToRespond: 100,\n    },\n    features: {\n      cloudNative: 5,\n      zeroTrust: 7,\n      deploymentSpeed: 4,\n      managementSimplicity: 5,\n      scalability: 8,\n      remoteAccess: 6,\n      compliance: 7,\n      costEffectiveness: 6,\n      threatPrevention: 7,\n      deviceDiscovery: 8,\n      userExperience: 5,\n      thirdPartyIntegration: 6\n    },\n    marketPosition: {\n      marketShare: 4,\n      customerSatisfaction: 3.8,\n      analystRating: 3.7,\n      yearsFounded: 2004,\n      targetMarket: ['Enterprise', 'DataCenter', 'Service Provider']\n    },\n    strengthsWeaknesses: {\n      strengths: [\n        'Strong network infrastructure integration',\n        'Good scalability features',\n        'Solid data center capabilities',\n        'Deep network visibility',\n        'Quality enterprise support'\n      ],\n      weaknesses: [\n        'Complex deployment model',\n        'Limited cloud capabilities',\n        'Steeper learning curve',\n        'Less intuitive user interface'\n      ],\n      bestFitFor: [\n        'Existing Arista customers',\n        'Data center-focused organizations',\n        'Large enterprises with complex networks',\n        'Technical network teams'\n      ],\n      challenges: [\n        'Broadening beyond network infrastructure',\n        'Simplifying management experience',\n        'Expanding cloud capabilities'\n      ]\n    }\n  },\n  \n  foxpass: {\n    id: 'foxpass',\n    name: 'Foxpass',\n    description: 'Cloud RADIUS/LDAP',\n    logo: process.env.NODE_ENV === 'production' ? '/UaXtXo/img/vendors/' : '/img/vendors/foxpass-logo.png',\n    deployment: 'cloud',\n    pricing: {\n      model: 'subscription',\n      basePrice: 2.00,\n      getImplementationDays: (deviceCount: number) => {\n        if (deviceCount < 1000) return 15;\n        if (deviceCount < 5000) return 25;\n        if (deviceCount < 10000) return 40;\n        return 60;\n      },\n      getImplementationCost: (deviceCount: number) => {\n        const days = vendorData.foxpass.pricing.getImplementationDays(deviceCount);\n        return days * 1400;\n      },\n      getFteRequired: (deviceCount: number) => {\n        if (deviceCount < 1000) return 0.2;\n        if (deviceCount < 5000) return 0.35;\n        if (deviceCount < 10000) return 0.6;\n        return 0.9;\n      },\n      getHardwareCost: () => 0,\n      riskReductionEffectiveness: 60,\n      meanTimeToRespond: 75,\n    },\n    features: {\n      cloudNative: 9,\n      zeroTrust: 6,\n      deploymentSpeed: 8,\n      managementSimplicity: 7,\n      scalability: 7,\n      remoteAccess: 7,\n      compliance: 5,\n      costEffectiveness: 8,\n      threatPrevention: 5,\n      deviceDiscovery: 6,\n      userExperience: 7,\n      thirdPartyIntegration: 7\n    },\n    marketPosition: {\n      marketShare: 2,\n      customerSatisfaction: 4.3,\n      analystRating: 3.4,\n      yearsFounded: 2014,\n      targetMarket: ['SMB', 'Technology', 'Startups']\n    },\n    strengthsWeaknesses: {\n      strengths: [\n        'True cloud-native architecture',\n        'Simple deployment and management',\n        'Developer-friendly approach',\n        'Good API support',\n        'Straightforward pricing'\n      ],\n      weaknesses: [\n        'Limited enterprise-class features',\n        'Smaller market presence',\n        'Less comprehensive than full NAC solutions',\n        'Fewer compliance capabilities'\n      ],\n      bestFitFor: [\n        'Small to medium businesses',\n        'Technology startups',\n        'Developer-focused organizations',\n        'Cloud-first companies'\n      ],\n      challenges: [\n        'Building enterprise capabilities',\n        'Expanding beyond core authentication',\n        'Growing market share'\n      ]\n    }\n  },\n  \n  microsoft: {\n    id: 'microsoft',\n    name: 'Microsoft NPS',\n    description: 'Windows Server NAC',\n    logo: process.env.NODE_ENV === 'production' ? '/UaXtXo/img/vendors/' : '/img/vendors/microsoft-logo.png',\n    deployment: 'on-premises',\n    pricing: {\n      model: 'hybrid',\n      basePrice: 10.00, // Windows Server CAL cost per device\n      maintenancePercentage: 25,\n      getImplementationDays: (deviceCount: number) => {\n        if (deviceCount < 1000) return 25;\n        if (deviceCount < 5000) return 50;\n        if (deviceCount < 10000) return 90;\n        return 140;\n      },\n      getImplementationCost: (deviceCount: number) => {\n        const days = vendorData.microsoft.pricing.getImplementationDays(deviceCount);\n        return days * 1600;\n      },\n      getFteRequired: (deviceCount: number) => {\n        if (deviceCount < 1000) return 0.4;\n        if (deviceCount < 5000) return 0.8;\n        if (deviceCount < 10000) return 1.4;\n        return 2.0;\n      },\n      getHardwareCost: (deviceCount: number) => {\n        if (deviceCount < 1000) return 15000; // Windows Server costs\n        if (deviceCount < 5000) return 40000;\n        if (deviceCount < 10000) return 80000;\n        return 150000;\n      },\n      riskReductionEffectiveness: 55,\n      meanTimeToRespond: 120,\n    },\n    features: {\n      cloudNative: 3,\n      zeroTrust: 5,\n      deploymentSpeed: 4,\n      managementSimplicity: 4,\n      scalability: 7,\n      remoteAccess: 5,\n      compliance: 6,\n      costEffectiveness: 7,\n      threatPrevention: 5,\n      deviceDiscovery: 6,\n      userExperience: 5,\n      thirdPartyIntegration: 7\n    },\n    marketPosition: {\n      marketShare: 12,\n      customerSatisfaction: 3.5,\n      analystRating: 3.2,\n      yearsFounded: 1975,\n      targetMarket: ['Enterprise', 'SMB', 'Government']\n    },\n    strengthsWeaknesses: {\n      strengths: [\n        'Deep Windows integration',\n        'Existing admin familiarity',\n        'Widespread installed base',\n        'Lower incremental cost for Windows shops',\n        'Active Directory integration'\n      ],\n      weaknesses: [\n        'Limited functionality compared to dedicated NAC',\n        'Minimal non-Windows device support',\n        'Complex configuration',\n        'Basic management capabilities',\n        'Limited security controls'\n      ],\n      bestFitFor: [\n        'Windows-centric organizations',\n        'Cost-sensitive environments',\n        'Small to medium businesses',\n        'Organizations with minimal NAC requirements'\n      ],\n      challenges: [\n        'Supporting modern heterogeneous environments',\n        'Competing with dedicated NAC solutions',\n        'Providing comprehensive security controls'\n      ]\n    }\n  },\n  \n  \"no-nac\": {\n    id: 'no-nac',\n    name: 'No NAC',\n    description: 'High risk baseline',\n    badge: 'High Risk',\n    badgeClass: 'badge-danger',\n    logo: process.env.NODE_ENV === 'production' ? '/UaXtXo/img/vendors/' : '/img/vendors/no-nac-icon.png',\n    deployment: 'on-premises',\n    pricing: {\n      model: 'perpetual',\n      basePrice: 0,\n      getImplementationDays: () => 0,\n      getImplementationCost: () => 0,\n      getFteRequired: (deviceCount: number) => {\n        // Still need IT staff to manage network access manually\n        if (deviceCount < 1000) return 0.25;\n        if (deviceCount < 5000) return 0.5;\n        if (deviceCount < 10000) return 1.0;\n        return 2.0;\n      },\n      getHardwareCost: () => 0,\n      riskReductionEffectiveness: 0,\n      meanTimeToRespond: 480, // 8 hours average response time\n    },\n    features: {\n      cloudNative: 0,\n      zeroTrust: 0,\n      deploymentSpeed: 10, // No deployment needed\n      managementSimplicity: 1, // Manual management is complex\n      scalability: 1,\n      remoteAccess: 2,\n      compliance: 1,\n      costEffectiveness: 5, // Low initial cost but high risk\n      threatPrevention: 1,\n      deviceDiscovery: 2,\n      userExperience: 3,\n      thirdPartyIntegration: 1\n    },\n    marketPosition: {\n      marketShare: 30, // Still many organizations without NAC\n      customerSatisfaction: 2.0,\n      analystRating: 1.0,\n      yearsFounded: 0,\n      targetMarket: ['SMB', 'Cost-sensitive', 'Low-security-priority']\n    },\n    strengthsWeaknesses: {\n      strengths: [\n        'No upfront license costs',\n        'No implementation time',\n        'No dedicated hardware required',\n        'Simplicity for very small networks'\n      ],\n      weaknesses: [\n        'No automated security controls',\n        'No visibility into connected devices',\n        'Significant security risk exposure',\n        'Manual incident response',\n        'Non-compliant with most regulations',\n        'High operational burden for IT staff'\n      ],\n      bestFitFor: [\n        'Very small organizations',\n        'Low-value networks with minimal risk',\n        'Environments with no compliance requirements',\n        'Networks with no sensitive data'\n      ],\n      challenges: [\n        'Security incident prevention',\n        'Compliance adherence',\n        'Visibility into network assets',\n        'Automated security control'\n      ]\n    }\n  }\n};\n\n// Industry Risk Profiles\nexport interface IndustryRiskProfile {\n  name: string;\n  baseRiskLevel: 'standard' | 'elevated' | 'high' | 'regulated';\n  complianceRequirements: string[];\n  breachCostPerRecord: number;\n  recommendedControls: string[];\n  incidentProbability: number;\n  averageIncidentCost: number;\n}\n\nexport const industryRiskProfiles: Record<string, IndustryRiskProfile> = {\n  healthcare: {\n    name: 'Healthcare',\n    baseRiskLevel: 'high',\n    complianceRequirements: ['hipaa', 'pci'],\n    breachCostPerRecord: 429, // $429 per record (IBM Cost of Data Breach Report)\n    recommendedControls: [\n      'Multi-factor authentication',\n      'Device health checks',\n      'Network segmentation',\n      'Continuous monitoring'\n    ],\n    incidentProbability: 0.32, // 32% annual probability\n    averageIncidentCost: 9.23e6 // $9.23 million average\n  },\n  financial: {\n    name: 'Financial Services',\n    baseRiskLevel: 'regulated',\n    complianceRequirements: ['pci', 'sox', 'gdpr', 'nist'],\n    breachCostPerRecord: 406, // $406 per record\n    recommendedControls: [\n      'Microsegmentation',\n      'Continuous authentication',\n      'Granular access control',\n      'Real-time monitoring and response'\n    ],\n    incidentProbability: 0.35, // 35% annual probability\n    averageIncidentCost: 5.97e6 // $5.97 million average\n  },\n  education: {\n    name: 'Education',\n    baseRiskLevel: 'standard',\n    complianceRequirements: ['ferpa', 'gdpr'],\n    breachCostPerRecord: 237, // $237 per record\n    recommendedControls: [\n      'BYOD support',\n      'Guest network isolation',\n      'Basic device authentication',\n      'User role-based access'\n    ],\n    incidentProbability: 0.43, // 43% annual probability\n    averageIncidentCost: 3.86e6 // $3.86 million average\n  },\n  government: {\n    name: 'Government',\n    baseRiskLevel: 'high',\n    complianceRequirements: ['nist', 'cmmc', 'gdpr'],\n    breachCostPerRecord: 402, // $402 per record\n    recommendedControls: [\n      'Zero Trust architecture',\n      'Continuous monitoring',\n      'Full device visibility',\n      'Automated quarantine'\n    ],\n    incidentProbability: 0.28, // 28% annual probability\n    averageIncidentCost: 9.48e6 // $9.48 million average\n  },\n  manufacturing: {\n    name: 'Manufacturing',\n    baseRiskLevel: 'elevated',\n    complianceRequirements: ['iso', 'nist'],\n    breachCostPerRecord: 273, // $273 per record\n    recommendedControls: [\n      'IoT device management',\n      'OT network segmentation',\n      'Basic authentication',\n      'Compliance reporting'\n    ],\n    incidentProbability: 0.39, // 39% annual probability\n    averageIncidentCost: 4.47e6 // $4.47 million average\n  },\n  retail: {\n    name: 'Retail',\n    baseRiskLevel: 'elevated',\n    complianceRequirements: ['pci', 'gdpr'],\n    breachCostPerRecord: 243, // $243 per record\n    recommendedControls: [\n      'POS device security',\n      'Customer data protection',\n      'Store network isolation',\n      'Wireless security'\n    ],\n    incidentProbability: 0.45, // 45% annual probability\n    averageIncidentCost: 3.28e6 // $3.28 million average\n  },\n  technology: {\n    name: 'Technology',\n    baseRiskLevel: 'elevated',\n    complianceRequirements: ['iso', 'gdpr', 'sox'],\n    breachCostPerRecord: 311, // $311 per record\n    recommendedControls: [\n      'Developer access controls',\n      'Cloud resource protection',\n      'Continuous authentication',\n      'API security'\n    ],\n    incidentProbability: 0.37, // 37% annual probability\n    averageIncidentCost: 5.04e6 // $5.04 million average\n  },\n  energy: {\n    name: 'Energy & Utilities',\n    baseRiskLevel: 'high',\n    complianceRequirements: ['nist', 'iso'],\n    breachCostPerRecord: 351, // $351 per record\n    recommendedControls: [\n      'Critical infrastructure protection',\n      'SCADA network isolation',\n      'Advanced monitoring',\n      'Regulatory compliance automation'\n    ],\n    incidentProbability: 0.31, // 31% annual probability\n    averageIncidentCost: 6.39e6 // $6.39 million average\n  }\n};\n\n// Compliance Framework Details\nexport interface ComplianceFramework {\n  name: string;\n  fullName: string;\n  description: string;\n  requirements: string[];\n  controlAreas: string[];\n  applicability: string[];\n  penalties: string;\n  nacRelevance: number; // 1-10 scale of how important NAC is for this framework\n}\n\nexport const complianceFrameworks: Record<string, ComplianceFramework> = {\n  pci: {\n    name: 'PCI DSS',\n    fullName: 'Payment Card Industry Data Security Standard',\n    description: 'Standard for organizations that handle credit card data',\n    requirements: [\n      'Network segmentation',\n      'Access control',\n      'Vulnerability management',\n      'Regular testing'\n    ],\n    controlAreas: [\n      'Build and Maintain a Secure Network',\n      'Protect Cardholder Data',\n      'Maintain a Vulnerability Management Program',\n      'Implement Strong Access Control Measures',\n      'Regularly Monitor and Test Networks',\n      'Maintain an Information Security Policy'\n    ],\n    applicability: [\n      'Any organization that stores, processes, or transmits cardholder data',\n      'Merchants',\n      'Financial institutions',\n      'Service providers'\n    ],\n    penalties: 'Fines of $5,000 to $100,000 per month, increased transaction fees, or revocation of card processing privileges',\n    nacRelevance: 9\n  },\n  hipaa: {\n    name: 'HIPAA',\n    fullName: 'Health Insurance Portability and Accountability Act',\n    description: 'Protects sensitive patient health information',\n    requirements: [\n      'Access controls',\n      'Audit controls',\n      'Integrity controls',\n      'Transmission security'\n    ],\n    controlAreas: [\n      'Administrative Safeguards',\n      'Physical Safeguards',\n      'Technical Safeguards',\n      'Organizational Requirements',\n      'Policies and Procedures and Documentation Requirements'\n    ],\n    applicability: [\n      'Healthcare providers',\n      'Health plans',\n      'Healthcare clearinghouses',\n      'Business associates'\n    ],\n    penalties: 'Tiered civil penalties from $100 to $50,000 per violation, with an annual maximum of $1.5 million',\n    nacRelevance: 8\n  },\n  nist: {\n    name: 'NIST 800-53',\n    fullName: 'NIST Special Publication 800-53',\n    description: 'Security controls for federal information systems',\n    requirements: [\n      'Access control',\n      'Audit and accountability',\n      'Identification and authentication',\n      'System and communications protection'\n    ],\n    controlAreas: [\n      'Access Control',\n      'Awareness and Training',\n      'Audit and Accountability',\n      'Security Assessment and Authorization',\n      'Configuration Management',\n      'Contingency Planning',\n      'Identification and Authentication',\n      'Incident Response',\n      'Maintenance',\n      'Media Protection',\n      'Physical and Environmental Protection',\n      'Planning',\n      'Personnel Security',\n      'Risk Assessment',\n      'System and Services Acquisition',\n      'System and Communications Protection',\n      'System and Information Integrity'\n    ],\n    applicability: [\n      'Federal agencies',\n      'Government contractors',\n      'Organizations seeking federal approval'\n    ],\n    penalties: 'Federal funding impacts, contract loss, and regulatory actions for non-compliance',\n    nacRelevance: 9\n  },\n  gdpr: {\n    name: 'GDPR',\n    fullName: 'General Data Protection Regulation',\n    description: 'EU regulation on data protection and privacy',\n    requirements: [\n      'Data access controls',\n      'Data protection by design',\n      'Breach notification',\n      'Right to be forgotten'\n    ],\n    controlAreas: [\n      'Lawfulness, Fairness and Transparency',\n      'Purpose Limitation',\n      'Data Minimization',\n      'Accuracy',\n      'Storage Limitation',\n      'Integrity and Confidentiality',\n      'Accountability'\n    ],\n    applicability: [\n      'Any organization processing EU resident data',\n      'Organizations with EU establishment',\n      'Organizations offering goods/services to EU residents',\n      'Organizations monitoring behavior of EU residents'\n    ],\n    penalties: 'Up to €20 million or 4% of global annual revenue, whichever is higher',\n    nacRelevance: 7\n  },\n  iso: {\n    name: 'ISO 27001',\n    fullName: 'International Organization for Standardization 27001',\n    description: 'International standard for information security management',\n    requirements: [\n      'Asset management',\n      'Access control',\n      'Cryptography',\n      'Physical security'\n    ],\n    controlAreas: [\n      'Information Security Policies',\n      'Organization of Information Security',\n      'Human Resource Security',\n      'Asset Management',\n      'Access Control',\n      'Cryptography',\n      'Physical and Environmental Security',\n      'Operations Security',\n      'Communications Security',\n      'System Acquisition, Development and Maintenance',\n      'Supplier Relationships',\n      'Information Security Incident Management',\n      'Information Security Aspects of Business Continuity Management',\n      'Compliance'\n    ],\n    applicability: [\n      'Organizations seeking certification',\n      'Global enterprises',\n      'Regulated industries',\n      'Service providers'\n    ],\n    penalties: 'Loss of certification, potential contract losses, reputational damage',\n    nacRelevance: 8\n  },\n  cmmc: {\n    name: 'CMMC',\n    fullName: 'Cybersecurity Maturity Model Certification',\n    description: 'Certification program for defense contractors',\n    requirements: [\n      'Access control',\n      'Asset management',\n      'Audit and accountability',\n      'Security assessment'\n    ],\n    controlAreas: [\n      'Access Control',\n      'Asset Management',\n      'Audit and Accountability',\n      'Awareness and Training',\n      'Configuration Management',\n      'Identification and Authentication',\n      'Incident Response',\n      'Maintenance',\n      'Media Protection',\n      'Personnel Security',\n      'Physical Protection',\n      'Recovery',\n      'Risk Management',\n      'Security Assessment',\n      'Situational Awareness',\n      'System and Communications Protection',\n      'System and Information Integrity'\n    ],\n    applicability: [\n      'Defense contractors',\n      'Defense supply chain companies',\n      'DoD subcontractors'\n    ],\n    penalties: 'Loss of defense contracts, disqualification from DoD procurement',\n    nacRelevance: 10\n  },\n  ferpa: {\n    name: 'FERPA',\n    fullName: 'Family Educational Rights and Privacy Act',\n    description: 'Protects the privacy of student education records',\n    requirements: [\n      'Access control',\n      'Disclosure limitations',\n      'Record management',\n      'Parental/student rights'\n    ],\n    controlAreas: [\n      'Parental/Eligible Student Rights',\n      'Access Control',\n      'Disclosure Limitations',\n      'Amendment Procedures',\n      'Annual Notification'\n    ],\n    applicability: [\n      'Educational institutions receiving federal funding',\n      'Schools',\n      'Colleges',\n      'Universities'\n    ],\n    penalties: 'Loss of federal funding for educational institutions',\n    nacRelevance: 6\n  },\n  sox: {\n    name: 'SOX',\n    fullName: 'Sarbanes-Oxley Act',\n    description: 'Requires public companies to have proper internal controls',\n    requirements: [\n      'Access controls',\n      'Change management',\n      'Segregation of duties',\n      'IT general controls'\n    ],\n    controlAreas: [\n      'Control Environment',\n      'Risk Assessment',\n      'Control Activities',\n      'Information and Communication',\n      'Monitoring Activities'\n    ],\n    applicability: [\n      'Public companies',\n      'Accounting firms serving public companies',\n      'Management and auditors of public companies'\n    ],\n    penalties: 'Fines up to $5 million, imprisonment up to 20 years for executives',\n    nacRelevance: 7\n  }\n};\n","// @ts-nocheck\nimport { useCallback } from 'react';\nimport { useCalculator } from '../context/CalculatorContext';\nimport { calculateTco, CalculationParams } from '../utils/calculationEngine';\n\n/**\n * Hook to handle calculation logic\n */\nexport const useCalculations = () => {\n  const { state, dispatch } = useCalculator();\n\n  const runCalculations = useCallback(() => {\n    // Make sure we have the necessary data to run calculations\n    if (!state.deviceCount || state.selectedVendors.length === 0) {\n      dispatch({ type: 'SET_CALCULATION_RESULTS', payload: null });\n      return;\n    }\n\n    // Prepare parameters for calculation\n    const params: CalculationParams = {\n      selectedVendors: state.selectedVendors,\n      deviceCount: state.deviceCount,\n      yearsToProject: state.yearsToProject || 3,\n      locations: state.locations || 1,\n      industry: state.industry || 'general',\n      riskProfile: state.riskProfile || 'medium',\n      complianceRequirements: state.complianceRequirements || {},\n      costParameters: {\n        // Provide all required costParameters with defaults if not present in state\n        portnoxBasePricePerDevice: state.costParameters?.portnoxBasePricePerDevice || 25,\n        portnoxDiscount: state.costParameters?.portnoxDiscount || 0,\n        fteCost: state.costParameters?.fteCost || 120000,\n        fteAllocation: state.costParameters?.fteAllocation || 0.25,\n        maintenancePercentage: state.costParameters?.maintenancePercentage || 0.2,\n        downtimeCost: state.costParameters?.downtimeCost || 10000,\n        riskReduction: state.costParameters?.riskReduction || 0.65,\n        insuranceReduction: state.costParameters?.insuranceReduction || 0.15,\n        // Include any additional parameters from the original state\n        laborCostPerHour: state.costParameters?.laborCostPerHour || 75,\n        itStaffCount: state.costParameters?.itStaffCount || 5,\n        avgBreachCost: state.costParameters?.avgBreachCost || 150000,\n        securityIncidentsPerYear: state.costParameters?.securityIncidentsPerYear || 12\n      },\n      networkRequirements: {\n        cloudIntegration: state.networkRequirements?.cloudIntegration || false,\n        legacyDevices: state.networkRequirements?.legacyDevices || false,\n        byodSupport: state.networkRequirements?.byodSupport || false,\n        iotSupport: state.networkRequirements?.iotSupport || false,\n        wirelessSupport: state.networkRequirements?.wirelessSupport || false,\n        remoteWork: state.networkRequirements?.remoteWork || false\n      }\n    };\n\n    // Calculate results\n    const results = calculateTco(params);\n\n    // Update state with calculation results\n    dispatch({ type: 'SET_CALCULATION_RESULTS', payload: results });\n  }, [\n    state.deviceCount,\n    state.selectedVendors,\n    state.yearsToProject,\n    state.locations,\n    state.industry,\n    state.riskProfile,\n    state.complianceRequirements,\n    state.costParameters,\n    state.networkRequirements,\n    dispatch\n  ]);\n\n  return { runCalculations };\n};\n\n// Also export as default for backward compatibility\nexport default useCalculations;\n","// @ts-nocheck\n// Import the correct types\nimport { CalculationParams, CalculationResults, VendorResult } from './types';\nimport { vendorData, industryRiskProfiles, complianceFrameworks } from '../api/vendorData';\n\n// Re-export types for convenience\nexport type { VendorResult, CalculationParams, CalculationResults };\n\n// Simplified calculation function that returns mock data\nexport const calculateTco = (params: CalculationParams): CalculationResults => {\n  console.log(\"Running TCO calculations with params:\", params);\n  \n  // Generate mock results for each selected vendor\n  const vendorResults: VendorResult[] = params.selectedVendors.map((vendorId, index) => {\n    // Get vendor info from vendorData or use a placeholder\n    const vendorInfo = vendorData.find(v => v.id === vendorId);\n    const name = vendorInfo ? vendorInfo.name : `Vendor ${vendorId}`;\n    \n    // Determine deployment type\n    const deployment = vendorInfo?.deploymentTypes?.[0] || 'on-premise';\n    \n    // Base cost is adjusted by device count, with Portnox being cheapest\n    const baseCost = vendorId === 'portnox' \n      ? params.deviceCount * 20 \n      : params.deviceCount * (25 + (index * 5));\n    \n    // Security scores - Portnox gets highest scores\n    const isPortnox = vendorId === 'portnox';\n    const baseSecurityScore = isPortnox ? 8 : 6;\n\n    // Calculate totalSavings\n    const totalSavings = isPortnox ? params.deviceCount * 150 : params.deviceCount * 100;\n    \n    // Define badge and badgeClass\n    let badge = '';\n    let badgeClass = '';\n    \n    if (isPortnox) {\n      badge = 'Recommended';\n      badgeClass = 'bg-green-100 text-green-800';\n    } else if (vendorId === 'no-nac') {\n      badge = 'No NAC';\n      badgeClass = 'bg-red-100 text-red-800';\n    } else if (deployment === 'cloud') {\n      badge = 'Cloud';\n      badgeClass = 'bg-blue-100 text-blue-800';\n    } else if (deployment === 'hybrid') {\n      badge = 'Hybrid';\n      badgeClass = 'bg-purple-100 text-purple-800';\n    } else {\n      badge = 'On-Premise';\n      badgeClass = 'bg-gray-100 text-gray-800';\n    }\n    \n    return {\n      vendorId,\n      name,\n      totalTco: baseCost * params.yearsToProject,\n      roi: isPortnox ? 185 : 120 - (index * 15),\n      paybackPeriod: isPortnox ? 6 : 9 + (index * 2),\n      implementationDays: isPortnox ? 15 : 30 + (index * 10),\n      securityImprovement: isPortnox ? 75 : 55 - (index * 5),\n      riskReductionValue: params.deviceCount * (isPortnox ? 50 : 35),\n      cumulativeCosts: {\n        initial: baseCost * 0.5,\n        year1: baseCost * 1.0,\n        year2: baseCost * 1.8,\n        year3: baseCost * 2.5\n      },\n      costBreakdown: {\n        licenses: baseCost * 0.4,\n        maintenance: baseCost * 0.2,\n        implementation: baseCost * 0.15,\n        operations: baseCost * 0.15,\n        hardware: isPortnox ? 0 : baseCost * 0.05,\n        infrastructure: isPortnox ? 0 : baseCost * 0.05\n      },\n      featureScores: {\n        threatPrevention: baseSecurityScore + (isPortnox ? 1 : 0),\n        zeroTrust: baseSecurityScore + (isPortnox ? 2 : 0),\n        deviceDiscovery: baseSecurityScore + (isPortnox ? 1.5 : 0),\n        cloudNative: isPortnox ? 10 : 5,\n        remoteAccess: baseSecurityScore + (isPortnox ? 1 : 0),\n        compliance: baseSecurityScore + (isPortnox ? 1.5 : 0),\n        managementSimplicity: isPortnox ? 9 : 6,\n        deploymentSpeed: isPortnox ? 9 : 5,\n        userExperience: baseSecurityScore,\n        thirdPartyIntegration: isPortnox ? 9 : 7 - (index * 0.5)\n      },\n      complianceScores: {\n        overall: isPortnox ? 95 : 75 - (index * 5),\n        hipaa: isPortnox ? 96 : 70 - (index * 3),\n        pci: isPortnox ? 94 : 75 - (index * 4),\n        gdpr: isPortnox ? 95 : 78 - (index * 5),\n        sox: isPortnox ? 93 : 72 - (index * 3),\n        nist: isPortnox ? 97 : 80 - (index * 5)\n      },\n      deployment,\n      badge,\n      badgeClass,\n      logo: vendorInfo?.logo || `/img/vendors/${vendorId}-logo.png`,\n      totalSavings\n    };\n  });\n  \n  // Calculate potential savings (difference between Portnox and average of others)\n  const portnoxResult = vendorResults.find(r => r.vendorId === 'portnox');\n  const otherResults = vendorResults.filter(r => r.vendorId !== 'portnox');\n  \n  let potentialSavings = 0;\n  if (portnoxResult && otherResults.length > 0) {\n    const avgOtherCost = otherResults.reduce((sum, r) => sum + r.totalTco, 0) / otherResults.length;\n    potentialSavings = avgOtherCost - portnoxResult.totalTco;\n  }\n  \n  // Calculate average security improvement\n  const avgSecurityImprovement = vendorResults.reduce((sum, r) => sum + r.securityImprovement, 0) / vendorResults.length;\n  \n  return {\n    vendorResults,\n    potentialSavings,\n    avgSecurityImprovement\n  };\n};\n\n// Export any other functions needed\nexport const calculateRoi = (totalSavings: number, totalCost: number): number => {\n  return (totalSavings / totalCost) * 100;\n};\n\n// Add any other utility functions that might be used elsewhere\nexport const estimateImplementationTime = (deviceCount: number, vendorId: string): number => {\n  const baseTime = vendorId === 'portnox' ? 5 : 15;\n  const perDeviceTime = vendorId === 'portnox' ? 0.01 : 0.05;\n  return baseTime + (deviceCount * perDeviceTime);\n};\n","// @ts-nocheck\nimport React, { useEffect } from 'react';\nimport { useCalculator } from '../../context/CalculatorContext';\nimport { useCalculations } from '../../hooks/useCalculations';\n\nconst Dashboard: React.FC = () => {\n  const { state } = useCalculator();\n  const { runCalculations } = useCalculations();\n  const { calculationResults, deviceCount, selectedVendors } = state;\n\n  // Run calculations when inputs change\n  useEffect(() => {\n    if (deviceCount > 0 && selectedVendors.length > 0) {\n      runCalculations();\n    }\n  }, [deviceCount, selectedVendors, runCalculations]);\n\n  return (\n    <div className=\"dashboard p-6\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold mb-2\">TCO Dashboard</h1>\n        <p className=\"text-gray-600\">\n          View your calculated Total Cost of Ownership and key metrics\n        </p>\n      </div>\n\n      {calculationResults ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {/* Simple inline cards instead of importing SummaryCard */}\n          <div className=\"p-4 rounded-lg shadow-sm bg-blue-100\">\n            <div className=\"flex items-start justify-between\">\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-700 mb-1\">Total Devices</h3>\n                <div className=\"text-2xl font-bold\">{deviceCount}</div>\n              </div>\n              <div className=\"text-3xl\">🖥️</div>\n            </div>\n          </div>\n          \n          <div className=\"p-4 rounded-lg shadow-sm bg-green-100\">\n            <div className=\"flex items-start justify-between\">\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-700 mb-1\">Vendors Compared</h3>\n                <div className=\"text-2xl font-bold\">{selectedVendors.length}</div>\n              </div>\n              <div className=\"text-3xl\">🏢</div>\n            </div>\n          </div>\n          \n          <div className=\"p-4 rounded-lg shadow-sm bg-purple-100\">\n            <div className=\"flex items-start justify-between\">\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-700 mb-1\">Potential Savings</h3>\n                <div className=\"text-2xl font-bold\">\n                  {calculationResults.potentialSavings \n                    ? `$${Math.round(calculationResults.potentialSavings).toLocaleString()}`\n                    : 'N/A'}\n                </div>\n              </div>\n              <div className=\"text-3xl\">💰</div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        /* Simple inline calculation status */\n        <div className=\"bg-gray-50 p-6 rounded-lg shadow-sm\">\n          <div className=\"flex items-center mb-4\">\n            <div className={`w-4 h-4 rounded-full mr-2 ${deviceCount > 0 && selectedVendors.length > 0 ? 'bg-green-500' : 'bg-yellow-500'}`}></div>\n            <h3 className=\"text-lg font-semibold\">\n              {deviceCount > 0 && selectedVendors.length > 0 ? 'Ready to Calculate' : 'Missing Information'}\n            </h3>\n          </div>\n          \n          <button \n            className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\n            onClick={() => runCalculations()}\n            disabled={!(deviceCount > 0 && selectedVendors.length > 0)}\n          >\n            Run Calculations\n          </button>\n        </div>\n      )}\n\n      <div className=\"mt-8 bg-gray-50 p-6 rounded-lg shadow-sm\">\n        <h2 className=\"text-xl font-semibold mb-4\">Dashboard Overview</h2>\n        <p>\n          This dashboard provides an overview of your TCO calculation results. \n          Use the navigation menu to explore detailed reports including financial analysis, \n          security impact, and vendor comparisons.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect, useState } from 'react';\n\nexport type ToastType = 'success' | 'error' | 'warning' | 'info';\n\ninterface ToastProps {\n  type: ToastType;\n  message: string;\n  onClose: () => void;\n  duration?: number;\n}\n\nconst Toast: React.FC<ToastProps> = ({\n  type,\n  message,\n  onClose,\n  duration = 4000\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    setIsVisible(true);\n    \n    const timer = setTimeout(() => {\n      setIsVisible(false);\n      setTimeout(onClose, 300); // Allow for fade-out animation\n    }, duration);\n    \n    return () => clearTimeout(timer);\n  }, [duration, onClose]);\n\n  // Determine icon and colors based on type\n  const getTypeConfig = () => {\n    switch (type) {\n      case 'success':\n        return {\n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n          ),\n          color: 'text-green-500 dark:text-green-400',\n          border: 'border-l-4 border-green-500 dark:border-green-400'\n        };\n      case 'error':\n        return {\n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          ),\n          color: 'text-red-500 dark:text-red-400',\n          border: 'border-l-4 border-red-500 dark:border-red-400'\n        };\n      case 'warning':\n        return {\n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n            </svg>\n          ),\n          color: 'text-yellow-500 dark:text-yellow-400',\n          border: 'border-l-4 border-yellow-500 dark:border-yellow-400'\n        };\n      case 'info':\n      default:\n        return {\n          icon: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          ),\n          color: 'text-blue-500 dark:text-blue-400',\n          border: 'border-l-4 border-blue-500 dark:border-blue-400'\n        };\n    }\n  };\n\n  const { icon, color, border } = getTypeConfig();\n\n  return (\n    <div\n      className={`fixed right-5 transition-all duration-300 ease-in-out transform ${\n        isVisible ? 'translate-x-0 opacity-100' : 'translate-x-full opacity-0'\n      } ${border} bg-white dark:bg-gray-800 rounded-r shadow-lg p-4 mb-4 flex items-center max-w-sm`}\n      style={{ bottom: '20px' }}\n    >\n      <div className={`mr-3 ${color}`}>\n        {icon}\n      </div>\n      <div className=\"flex-grow text-gray-800 dark:text-gray-200\">\n        {message}\n      </div>\n      <button\n        onClick={() => {\n          setIsVisible(false);\n          setTimeout(onClose, 300);\n        }}\n        className=\"ml-3 text-gray-400 hover:text-gray-500 dark:text-gray-500 dark:hover:text-gray-400\"\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\n// Toast container component to manage multiple toasts\ninterface ToastItem {\n  id: string;\n  type: ToastType;\n  message: string;\n}\n\ninterface ToastContainerProps {\n  toasts: ToastItem[];\n  onRemoveToast: (id: string) => void;\n}\n\nexport const ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemoveToast }) => {\n  return (\n    <div className=\"toast-container\" style={{ zIndex: 9999 }}>\n      {toasts.map(toast => (\n        <Toast\n          key={toast.id}\n          type={toast.type}\n          message={toast.message}\n          onClose={() => onRemoveToast(toast.id)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Toast;\n","import React, { createContext, useState, useContext, useCallback } from 'react';\nimport { ToastContainer, ToastType } from '../components/ui/Toast';\n\n// Unique ID generator for toasts\nconst generateId = () => `toast-${Math.random().toString(36).substr(2, 9)}`;\n\ninterface ToastContextType {\n  addToast: (message: string, type: ToastType) => void;\n  removeToast: (id: string) => void;\n}\n\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\n\nexport const ToastProvider: React.FC<{children: React.ReactNode}> = ({ children }) => {\n  const [toasts, setToasts] = useState<Array<{id: string; message: string; type: ToastType}>>([]);\n\n  const addToast = useCallback((message: string, type: ToastType) => {\n    const id = generateId();\n    setToasts(prev => [...prev, { id, message, type }]);\n  }, []);\n\n  const removeToast = useCallback((id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer toasts={toasts} onRemoveToast={removeToast} />\n    </ToastContext.Provider>\n  );\n};\n\nexport const useToast = () => {\n  const context = useContext(ToastContext);\n  if (context === undefined) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  return context;\n};\n","import React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport RouterConfig from './utils/RouterConfig';\nimport Header from './components/layout/Header';\nimport Sidebar from './components/layout/Sidebar';\nimport Footer from './components/layout/Footer';\nimport Dashboard from './components/views/Dashboard';\nimport { CalculatorProvider } from './context/CalculatorContext';\nimport { ThemeProvider } from './context/ThemeContext';\nimport { ToastProvider } from './context/ToastContext';\nimport environment from './config/environment';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  \n  const toggleSidebar = () => {\n    setSidebarOpen(!sidebarOpen);\n  };\n  \n  return (\n    <ThemeProvider>\n      <CalculatorProvider>\n        <ToastProvider>\n          <RouterConfig>\n            <div className=\"app-container\">\n              <Header toggleSidebar={toggleSidebar} />\n              <div className=\"main-content\">\n                <Sidebar isOpen={sidebarOpen} />\n                <div className=\"content-area\">\n                  <Routes>\n                    <Route path=\"/\" element={<Dashboard />} />\n                    {/* More routes will be added later */}\n                  </Routes>\n                </div>\n              </div>\n              <Footer />\n            </div>\n          </RouterConfig>\n        </ToastProvider>\n      </CalculatorProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './financialReport.css';\nimport './reportStyles.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}